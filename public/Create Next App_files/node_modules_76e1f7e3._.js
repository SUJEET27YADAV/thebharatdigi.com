(globalThis.TURBOPACK || (globalThis.TURBOPACK = [])).push([typeof document === "object" ? document.currentScript : undefined,
"[project]/node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

/**
 * @license React
 * react-jsx-dev-runtime.development.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
"production" !== ("TURBOPACK compile-time value", "development") && function() {
    function getComponentNameFromType(type) {
        if (null == type) return null;
        if ("function" === typeof type) return type.$$typeof === REACT_CLIENT_REFERENCE ? null : type.displayName || type.name || null;
        if ("string" === typeof type) return type;
        switch(type){
            case REACT_FRAGMENT_TYPE:
                return "Fragment";
            case REACT_PROFILER_TYPE:
                return "Profiler";
            case REACT_STRICT_MODE_TYPE:
                return "StrictMode";
            case REACT_SUSPENSE_TYPE:
                return "Suspense";
            case REACT_SUSPENSE_LIST_TYPE:
                return "SuspenseList";
            case REACT_ACTIVITY_TYPE:
                return "Activity";
        }
        if ("object" === typeof type) switch("number" === typeof type.tag && console.error("Received an unexpected object in getComponentNameFromType(). This is likely a bug in React. Please file an issue."), type.$$typeof){
            case REACT_PORTAL_TYPE:
                return "Portal";
            case REACT_CONTEXT_TYPE:
                return type.displayName || "Context";
            case REACT_CONSUMER_TYPE:
                return (type._context.displayName || "Context") + ".Consumer";
            case REACT_FORWARD_REF_TYPE:
                var innerType = type.render;
                type = type.displayName;
                type || (type = innerType.displayName || innerType.name || "", type = "" !== type ? "ForwardRef(" + type + ")" : "ForwardRef");
                return type;
            case REACT_MEMO_TYPE:
                return innerType = type.displayName || null, null !== innerType ? innerType : getComponentNameFromType(type.type) || "Memo";
            case REACT_LAZY_TYPE:
                innerType = type._payload;
                type = type._init;
                try {
                    return getComponentNameFromType(type(innerType));
                } catch (x) {}
        }
        return null;
    }
    function testStringCoercion(value) {
        return "" + value;
    }
    function checkKeyStringCoercion(value) {
        try {
            testStringCoercion(value);
            var JSCompiler_inline_result = !1;
        } catch (e) {
            JSCompiler_inline_result = !0;
        }
        if (JSCompiler_inline_result) {
            JSCompiler_inline_result = console;
            var JSCompiler_temp_const = JSCompiler_inline_result.error;
            var JSCompiler_inline_result$jscomp$0 = "function" === typeof Symbol && Symbol.toStringTag && value[Symbol.toStringTag] || value.constructor.name || "Object";
            JSCompiler_temp_const.call(JSCompiler_inline_result, "The provided key is an unsupported type %s. This value must be coerced to a string before using it here.", JSCompiler_inline_result$jscomp$0);
            return testStringCoercion(value);
        }
    }
    function getTaskName(type) {
        if (type === REACT_FRAGMENT_TYPE) return "<>";
        if ("object" === typeof type && null !== type && type.$$typeof === REACT_LAZY_TYPE) return "<...>";
        try {
            var name = getComponentNameFromType(type);
            return name ? "<" + name + ">" : "<...>";
        } catch (x) {
            return "<...>";
        }
    }
    function getOwner() {
        var dispatcher = ReactSharedInternals.A;
        return null === dispatcher ? null : dispatcher.getOwner();
    }
    function UnknownOwner() {
        return Error("react-stack-top-frame");
    }
    function hasValidKey(config) {
        if (hasOwnProperty.call(config, "key")) {
            var getter = Object.getOwnPropertyDescriptor(config, "key").get;
            if (getter && getter.isReactWarning) return !1;
        }
        return void 0 !== config.key;
    }
    function defineKeyPropWarningGetter(props, displayName) {
        function warnAboutAccessingKey() {
            specialPropKeyWarningShown || (specialPropKeyWarningShown = !0, console.error("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://react.dev/link/special-props)", displayName));
        }
        warnAboutAccessingKey.isReactWarning = !0;
        Object.defineProperty(props, "key", {
            get: warnAboutAccessingKey,
            configurable: !0
        });
    }
    function elementRefGetterWithDeprecationWarning() {
        var componentName = getComponentNameFromType(this.type);
        didWarnAboutElementRef[componentName] || (didWarnAboutElementRef[componentName] = !0, console.error("Accessing element.ref was removed in React 19. ref is now a regular prop. It will be removed from the JSX Element type in a future release."));
        componentName = this.props.ref;
        return void 0 !== componentName ? componentName : null;
    }
    function ReactElement(type, key, props, owner, debugStack, debugTask) {
        var refProp = props.ref;
        type = {
            $$typeof: REACT_ELEMENT_TYPE,
            type: type,
            key: key,
            props: props,
            _owner: owner
        };
        null !== (void 0 !== refProp ? refProp : null) ? Object.defineProperty(type, "ref", {
            enumerable: !1,
            get: elementRefGetterWithDeprecationWarning
        }) : Object.defineProperty(type, "ref", {
            enumerable: !1,
            value: null
        });
        type._store = {};
        Object.defineProperty(type._store, "validated", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: 0
        });
        Object.defineProperty(type, "_debugInfo", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: null
        });
        Object.defineProperty(type, "_debugStack", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: debugStack
        });
        Object.defineProperty(type, "_debugTask", {
            configurable: !1,
            enumerable: !1,
            writable: !0,
            value: debugTask
        });
        Object.freeze && (Object.freeze(type.props), Object.freeze(type));
        return type;
    }
    function jsxDEVImpl(type, config, maybeKey, isStaticChildren, debugStack, debugTask) {
        var children = config.children;
        if (void 0 !== children) if (isStaticChildren) if (isArrayImpl(children)) {
            for(isStaticChildren = 0; isStaticChildren < children.length; isStaticChildren++)validateChildKeys(children[isStaticChildren]);
            Object.freeze && Object.freeze(children);
        } else console.error("React.jsx: Static children should always be an array. You are likely explicitly calling React.jsxs or React.jsxDEV. Use the Babel transform instead.");
        else validateChildKeys(children);
        if (hasOwnProperty.call(config, "key")) {
            children = getComponentNameFromType(type);
            var keys = Object.keys(config).filter(function(k) {
                return "key" !== k;
            });
            isStaticChildren = 0 < keys.length ? "{key: someKey, " + keys.join(": ..., ") + ": ...}" : "{key: someKey}";
            didWarnAboutKeySpread[children + isStaticChildren] || (keys = 0 < keys.length ? "{" + keys.join(": ..., ") + ": ...}" : "{}", console.error('A props object containing a "key" prop is being spread into JSX:\n  let props = %s;\n  <%s {...props} />\nReact keys must be passed directly to JSX without using spread:\n  let props = %s;\n  <%s key={someKey} {...props} />', isStaticChildren, children, keys, children), didWarnAboutKeySpread[children + isStaticChildren] = !0);
        }
        children = null;
        void 0 !== maybeKey && (checkKeyStringCoercion(maybeKey), children = "" + maybeKey);
        hasValidKey(config) && (checkKeyStringCoercion(config.key), children = "" + config.key);
        if ("key" in config) {
            maybeKey = {};
            for(var propName in config)"key" !== propName && (maybeKey[propName] = config[propName]);
        } else maybeKey = config;
        children && defineKeyPropWarningGetter(maybeKey, "function" === typeof type ? type.displayName || type.name || "Unknown" : type);
        return ReactElement(type, children, maybeKey, getOwner(), debugStack, debugTask);
    }
    function validateChildKeys(node) {
        "object" === typeof node && null !== node && node.$$typeof === REACT_ELEMENT_TYPE && node._store && (node._store.validated = 1);
    }
    var React = __turbopack_context__.r("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)"), REACT_ELEMENT_TYPE = Symbol.for("react.transitional.element"), REACT_PORTAL_TYPE = Symbol.for("react.portal"), REACT_FRAGMENT_TYPE = Symbol.for("react.fragment"), REACT_STRICT_MODE_TYPE = Symbol.for("react.strict_mode"), REACT_PROFILER_TYPE = Symbol.for("react.profiler"), REACT_CONSUMER_TYPE = Symbol.for("react.consumer"), REACT_CONTEXT_TYPE = Symbol.for("react.context"), REACT_FORWARD_REF_TYPE = Symbol.for("react.forward_ref"), REACT_SUSPENSE_TYPE = Symbol.for("react.suspense"), REACT_SUSPENSE_LIST_TYPE = Symbol.for("react.suspense_list"), REACT_MEMO_TYPE = Symbol.for("react.memo"), REACT_LAZY_TYPE = Symbol.for("react.lazy"), REACT_ACTIVITY_TYPE = Symbol.for("react.activity"), REACT_CLIENT_REFERENCE = Symbol.for("react.client.reference"), ReactSharedInternals = React.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE, hasOwnProperty = Object.prototype.hasOwnProperty, isArrayImpl = Array.isArray, createTask = console.createTask ? console.createTask : function() {
        return null;
    };
    React = {
        react_stack_bottom_frame: function(callStackForError) {
            return callStackForError();
        }
    };
    var specialPropKeyWarningShown;
    var didWarnAboutElementRef = {};
    var unknownOwnerDebugStack = React.react_stack_bottom_frame.bind(React, UnknownOwner)();
    var unknownOwnerDebugTask = createTask(getTaskName(UnknownOwner));
    var didWarnAboutKeySpread = {};
    exports.Fragment = REACT_FRAGMENT_TYPE;
    exports.jsxDEV = function(type, config, maybeKey, isStaticChildren) {
        var trackActualOwner = 1e4 > ReactSharedInternals.recentlyCreatedOwnerStacks++;
        return jsxDEVImpl(type, config, maybeKey, isStaticChildren, trackActualOwner ? Error("react-stack-top-frame") : unknownOwnerDebugStack, trackActualOwner ? createTask(getTaskName(type)) : unknownOwnerDebugTask);
    };
}();
}),
"[project]/node_modules/next/dist/compiled/react/jsx-dev-runtime.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
'use strict';
if ("TURBOPACK compile-time falsy", 0) //TURBOPACK unreachable
;
else {
    module.exports = __turbopack_context__.r("[project]/node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js [app-client] (ecmascript)");
}
}),
"[project]/node_modules/next/dist/shared/lib/image-blur-svg.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

/**
 * A shared function, used on both client and server, to generate a SVG blur placeholder.
 */ Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "getImageBlurSvg", {
    enumerable: true,
    get: function() {
        return getImageBlurSvg;
    }
});
function getImageBlurSvg(param) {
    let { widthInt, heightInt, blurWidth, blurHeight, blurDataURL, objectFit } = param;
    const std = 20;
    const svgWidth = blurWidth ? blurWidth * 40 : widthInt;
    const svgHeight = blurHeight ? blurHeight * 40 : heightInt;
    const viewBox = svgWidth && svgHeight ? "viewBox='0 0 " + svgWidth + " " + svgHeight + "'" : '';
    const preserveAspectRatio = viewBox ? 'none' : objectFit === 'contain' ? 'xMidYMid' : objectFit === 'cover' ? 'xMidYMid slice' : 'none';
    return "%3Csvg xmlns='http://www.w3.org/2000/svg' " + viewBox + "%3E%3Cfilter id='b' color-interpolation-filters='sRGB'%3E%3CfeGaussianBlur stdDeviation='" + std + "'/%3E%3CfeColorMatrix values='1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 100 -1' result='s'/%3E%3CfeFlood x='0' y='0' width='100%25' height='100%25'/%3E%3CfeComposite operator='out' in='s'/%3E%3CfeComposite in2='SourceGraphic'/%3E%3CfeGaussianBlur stdDeviation='" + std + "'/%3E%3C/filter%3E%3Cimage width='100%25' height='100%25' x='0' y='0' preserveAspectRatio='" + preserveAspectRatio + "' style='filter: url(%23b);' href='" + blurDataURL + "'/%3E%3C/svg%3E";
} //# sourceMappingURL=image-blur-svg.js.map
}),
"[project]/node_modules/next/dist/shared/lib/image-config.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    VALID_LOADERS: null,
    imageConfigDefault: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    VALID_LOADERS: function() {
        return VALID_LOADERS;
    },
    imageConfigDefault: function() {
        return imageConfigDefault;
    }
});
const VALID_LOADERS = [
    'default',
    'imgix',
    'cloudinary',
    'akamai',
    'custom'
];
const imageConfigDefault = {
    deviceSizes: [
        640,
        750,
        828,
        1080,
        1200,
        1920,
        2048,
        3840
    ],
    imageSizes: [
        16,
        32,
        48,
        64,
        96,
        128,
        256,
        384
    ],
    path: '/_next/image',
    loader: 'default',
    loaderFile: '',
    domains: [],
    disableStaticImages: false,
    minimumCacheTTL: 60,
    formats: [
        'image/webp'
    ],
    dangerouslyAllowSVG: false,
    contentSecurityPolicy: "script-src 'none'; frame-src 'none'; sandbox;",
    contentDispositionType: 'attachment',
    localPatterns: undefined,
    remotePatterns: [],
    qualities: undefined,
    unoptimized: false
}; //# sourceMappingURL=image-config.js.map
}),
"[project]/node_modules/next/dist/shared/lib/get-img-props.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "getImgProps", {
    enumerable: true,
    get: function() {
        return getImgProps;
    }
});
const _warnonce = __turbopack_context__.r("[project]/node_modules/next/dist/shared/lib/utils/warn-once.js [app-client] (ecmascript)");
const _imageblursvg = __turbopack_context__.r("[project]/node_modules/next/dist/shared/lib/image-blur-svg.js [app-client] (ecmascript)");
const _imageconfig = __turbopack_context__.r("[project]/node_modules/next/dist/shared/lib/image-config.js [app-client] (ecmascript)");
const VALID_LOADING_VALUES = [
    'lazy',
    'eager',
    undefined
];
// Object-fit values that are not valid background-size values
const INVALID_BACKGROUND_SIZE_VALUES = [
    '-moz-initial',
    'fill',
    'none',
    'scale-down',
    undefined
];
function isStaticRequire(src) {
    return src.default !== undefined;
}
function isStaticImageData(src) {
    return src.src !== undefined;
}
function isStaticImport(src) {
    return !!src && typeof src === 'object' && (isStaticRequire(src) || isStaticImageData(src));
}
const allImgs = new Map();
let perfObserver;
function getInt(x) {
    if (typeof x === 'undefined') {
        return x;
    }
    if (typeof x === 'number') {
        return Number.isFinite(x) ? x : NaN;
    }
    if (typeof x === 'string' && /^[0-9]+$/.test(x)) {
        return parseInt(x, 10);
    }
    return NaN;
}
function getWidths(param, width, sizes) {
    let { deviceSizes, allSizes } = param;
    if (sizes) {
        // Find all the "vw" percent sizes used in the sizes prop
        const viewportWidthRe = /(^|\s)(1?\d?\d)vw/g;
        const percentSizes = [];
        for(let match; match = viewportWidthRe.exec(sizes); match){
            percentSizes.push(parseInt(match[2]));
        }
        if (percentSizes.length) {
            const smallestRatio = Math.min(...percentSizes) * 0.01;
            return {
                widths: allSizes.filter((s)=>s >= deviceSizes[0] * smallestRatio),
                kind: 'w'
            };
        }
        return {
            widths: allSizes,
            kind: 'w'
        };
    }
    if (typeof width !== 'number') {
        return {
            widths: deviceSizes,
            kind: 'w'
        };
    }
    const widths = [
        ...new Set(// > are actually 3x in the green color, but only 1.5x in the red and
        // > blue colors. Showing a 3x resolution image in the app vs a 2x
        // > resolution image will be visually the same, though the 3x image
        // > takes significantly more data. Even true 3x resolution screens are
        // > wasteful as the human eye cannot see that level of detail without
        // > something like a magnifying glass.
        // https://blog.twitter.com/engineering/en_us/topics/infrastructure/2019/capping-image-fidelity-on-ultra-high-resolution-devices.html
        [
            width,
            width * 2 /*, width * 3*/ 
        ].map((w)=>allSizes.find((p)=>p >= w) || allSizes[allSizes.length - 1]))
    ];
    return {
        widths,
        kind: 'x'
    };
}
function generateImgAttrs(param) {
    let { config, src, unoptimized, width, quality, sizes, loader } = param;
    if (unoptimized) {
        return {
            src,
            srcSet: undefined,
            sizes: undefined
        };
    }
    const { widths, kind } = getWidths(config, width, sizes);
    const last = widths.length - 1;
    return {
        sizes: !sizes && kind === 'w' ? '100vw' : sizes,
        srcSet: widths.map((w, i)=>loader({
                config,
                src,
                quality,
                width: w
            }) + " " + (kind === 'w' ? w : i + 1) + kind).join(', '),
        // It's intended to keep `src` the last attribute because React updates
        // attributes in order. If we keep `src` the first one, Safari will
        // immediately start to fetch `src`, before `sizes` and `srcSet` are even
        // updated by React. That causes multiple unnecessary requests if `srcSet`
        // and `sizes` are defined.
        // This bug cannot be reproduced in Chrome or Firefox.
        src: loader({
            config,
            src,
            quality,
            width: widths[last]
        })
    };
}
function getImgProps(param, _state) {
    let { src, sizes, unoptimized = false, priority = false, loading, className, quality, width, height, fill = false, style, overrideSrc, onLoad, onLoadingComplete, placeholder = 'empty', blurDataURL, fetchPriority, decoding = 'async', layout, objectFit, objectPosition, lazyBoundary, lazyRoot, ...rest } = param;
    const { imgConf, showAltText, blurComplete, defaultLoader } = _state;
    let config;
    let c = imgConf || _imageconfig.imageConfigDefault;
    if ('allSizes' in c) {
        config = c;
    } else {
        var _c_qualities;
        const allSizes = [
            ...c.deviceSizes,
            ...c.imageSizes
        ].sort((a, b)=>a - b);
        const deviceSizes = c.deviceSizes.sort((a, b)=>a - b);
        const qualities = (_c_qualities = c.qualities) == null ? void 0 : _c_qualities.sort((a, b)=>a - b);
        config = {
            ...c,
            allSizes,
            deviceSizes,
            qualities
        };
    }
    if (typeof defaultLoader === 'undefined') {
        throw Object.defineProperty(new Error('images.loaderFile detected but the file is missing default export.\nRead more: https://nextjs.org/docs/messages/invalid-images-config'), "__NEXT_ERROR_CODE", {
            value: "E163",
            enumerable: false,
            configurable: true
        });
    }
    let loader = rest.loader || defaultLoader;
    // Remove property so it's not spread on <img> element
    delete rest.loader;
    delete rest.srcSet;
    // This special value indicates that the user
    // didn't define a "loader" prop or "loader" config.
    const isDefaultLoader = '__next_img_default' in loader;
    if (isDefaultLoader) {
        if (config.loader === 'custom') {
            throw Object.defineProperty(new Error('Image with src "' + src + '" is missing "loader" prop.' + "\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader"), "__NEXT_ERROR_CODE", {
                value: "E252",
                enumerable: false,
                configurable: true
            });
        }
    } else {
        // The user defined a "loader" prop or config.
        // Since the config object is internal only, we
        // must not pass it to the user-defined "loader".
        const customImageLoader = loader;
        loader = (obj)=>{
            const { config: _, ...opts } = obj;
            return customImageLoader(opts);
        };
    }
    if (layout) {
        if (layout === 'fill') {
            fill = true;
        }
        const layoutToStyle = {
            intrinsic: {
                maxWidth: '100%',
                height: 'auto'
            },
            responsive: {
                width: '100%',
                height: 'auto'
            }
        };
        const layoutToSizes = {
            responsive: '100vw',
            fill: '100vw'
        };
        const layoutStyle = layoutToStyle[layout];
        if (layoutStyle) {
            style = {
                ...style,
                ...layoutStyle
            };
        }
        const layoutSizes = layoutToSizes[layout];
        if (layoutSizes && !sizes) {
            sizes = layoutSizes;
        }
    }
    let staticSrc = '';
    let widthInt = getInt(width);
    let heightInt = getInt(height);
    let blurWidth;
    let blurHeight;
    if (isStaticImport(src)) {
        const staticImageData = isStaticRequire(src) ? src.default : src;
        if (!staticImageData.src) {
            throw Object.defineProperty(new Error("An object should only be passed to the image component src parameter if it comes from a static image import. It must include src. Received " + JSON.stringify(staticImageData)), "__NEXT_ERROR_CODE", {
                value: "E460",
                enumerable: false,
                configurable: true
            });
        }
        if (!staticImageData.height || !staticImageData.width) {
            throw Object.defineProperty(new Error("An object should only be passed to the image component src parameter if it comes from a static image import. It must include height and width. Received " + JSON.stringify(staticImageData)), "__NEXT_ERROR_CODE", {
                value: "E48",
                enumerable: false,
                configurable: true
            });
        }
        blurWidth = staticImageData.blurWidth;
        blurHeight = staticImageData.blurHeight;
        blurDataURL = blurDataURL || staticImageData.blurDataURL;
        staticSrc = staticImageData.src;
        if (!fill) {
            if (!widthInt && !heightInt) {
                widthInt = staticImageData.width;
                heightInt = staticImageData.height;
            } else if (widthInt && !heightInt) {
                const ratio = widthInt / staticImageData.width;
                heightInt = Math.round(staticImageData.height * ratio);
            } else if (!widthInt && heightInt) {
                const ratio = heightInt / staticImageData.height;
                widthInt = Math.round(staticImageData.width * ratio);
            }
        }
    }
    src = typeof src === 'string' ? src : staticSrc;
    let isLazy = !priority && (loading === 'lazy' || typeof loading === 'undefined');
    if (!src || src.startsWith('data:') || src.startsWith('blob:')) {
        // https://developer.mozilla.org/docs/Web/HTTP/Basics_of_HTTP/Data_URIs
        unoptimized = true;
        isLazy = false;
    }
    if (config.unoptimized) {
        unoptimized = true;
    }
    if (isDefaultLoader && !config.dangerouslyAllowSVG && src.split('?', 1)[0].endsWith('.svg')) {
        // Special case to make svg serve as-is to avoid proxying
        // through the built-in Image Optimization API.
        unoptimized = true;
    }
    const qualityInt = getInt(quality);
    if ("TURBOPACK compile-time truthy", 1) {
        var _config_localPatterns;
        if (config.output === 'export' && isDefaultLoader && !unoptimized) {
            throw Object.defineProperty(new Error("Image Optimization using the default loader is not compatible with `{ output: 'export' }`.\n  Possible solutions:\n    - Remove `{ output: 'export' }` and run \"next start\" to run server mode including the Image Optimization API.\n    - Configure `{ images: { unoptimized: true } }` in `next.config.js` to disable the Image Optimization API.\n  Read more: https://nextjs.org/docs/messages/export-image-api"), "__NEXT_ERROR_CODE", {
                value: "E500",
                enumerable: false,
                configurable: true
            });
        }
        if (!src) {
            // React doesn't show the stack trace and there's
            // no `src` to help identify which image, so we
            // instead console.error(ref) during mount.
            unoptimized = true;
        } else {
            if (fill) {
                if (width) {
                    throw Object.defineProperty(new Error('Image with src "' + src + '" has both "width" and "fill" properties. Only one should be used.'), "__NEXT_ERROR_CODE", {
                        value: "E96",
                        enumerable: false,
                        configurable: true
                    });
                }
                if (height) {
                    throw Object.defineProperty(new Error('Image with src "' + src + '" has both "height" and "fill" properties. Only one should be used.'), "__NEXT_ERROR_CODE", {
                        value: "E115",
                        enumerable: false,
                        configurable: true
                    });
                }
                if ((style == null ? void 0 : style.position) && style.position !== 'absolute') {
                    throw Object.defineProperty(new Error('Image with src "' + src + '" has both "fill" and "style.position" properties. Images with "fill" always use position absolute - it cannot be modified.'), "__NEXT_ERROR_CODE", {
                        value: "E216",
                        enumerable: false,
                        configurable: true
                    });
                }
                if ((style == null ? void 0 : style.width) && style.width !== '100%') {
                    throw Object.defineProperty(new Error('Image with src "' + src + '" has both "fill" and "style.width" properties. Images with "fill" always use width 100% - it cannot be modified.'), "__NEXT_ERROR_CODE", {
                        value: "E73",
                        enumerable: false,
                        configurable: true
                    });
                }
                if ((style == null ? void 0 : style.height) && style.height !== '100%') {
                    throw Object.defineProperty(new Error('Image with src "' + src + '" has both "fill" and "style.height" properties. Images with "fill" always use height 100% - it cannot be modified.'), "__NEXT_ERROR_CODE", {
                        value: "E404",
                        enumerable: false,
                        configurable: true
                    });
                }
            } else {
                if (typeof widthInt === 'undefined') {
                    throw Object.defineProperty(new Error('Image with src "' + src + '" is missing required "width" property.'), "__NEXT_ERROR_CODE", {
                        value: "E451",
                        enumerable: false,
                        configurable: true
                    });
                } else if (isNaN(widthInt)) {
                    throw Object.defineProperty(new Error('Image with src "' + src + '" has invalid "width" property. Expected a numeric value in pixels but received "' + width + '".'), "__NEXT_ERROR_CODE", {
                        value: "E66",
                        enumerable: false,
                        configurable: true
                    });
                }
                if (typeof heightInt === 'undefined') {
                    throw Object.defineProperty(new Error('Image with src "' + src + '" is missing required "height" property.'), "__NEXT_ERROR_CODE", {
                        value: "E397",
                        enumerable: false,
                        configurable: true
                    });
                } else if (isNaN(heightInt)) {
                    throw Object.defineProperty(new Error('Image with src "' + src + '" has invalid "height" property. Expected a numeric value in pixels but received "' + height + '".'), "__NEXT_ERROR_CODE", {
                        value: "E444",
                        enumerable: false,
                        configurable: true
                    });
                }
                // eslint-disable-next-line no-control-regex
                if (/^[\x00-\x20]/.test(src)) {
                    throw Object.defineProperty(new Error('Image with src "' + src + '" cannot start with a space or control character. Use src.trimStart() to remove it or encodeURIComponent(src) to keep it.'), "__NEXT_ERROR_CODE", {
                        value: "E176",
                        enumerable: false,
                        configurable: true
                    });
                }
                // eslint-disable-next-line no-control-regex
                if (/[\x00-\x20]$/.test(src)) {
                    throw Object.defineProperty(new Error('Image with src "' + src + '" cannot end with a space or control character. Use src.trimEnd() to remove it or encodeURIComponent(src) to keep it.'), "__NEXT_ERROR_CODE", {
                        value: "E21",
                        enumerable: false,
                        configurable: true
                    });
                }
            }
        }
        if (!VALID_LOADING_VALUES.includes(loading)) {
            throw Object.defineProperty(new Error('Image with src "' + src + '" has invalid "loading" property. Provided "' + loading + '" should be one of ' + VALID_LOADING_VALUES.map(String).join(',') + "."), "__NEXT_ERROR_CODE", {
                value: "E357",
                enumerable: false,
                configurable: true
            });
        }
        if (priority && loading === 'lazy') {
            throw Object.defineProperty(new Error('Image with src "' + src + '" has both "priority" and "loading=\'lazy\'" properties. Only one should be used.'), "__NEXT_ERROR_CODE", {
                value: "E218",
                enumerable: false,
                configurable: true
            });
        }
        if (placeholder !== 'empty' && placeholder !== 'blur' && !placeholder.startsWith('data:image/')) {
            throw Object.defineProperty(new Error('Image with src "' + src + '" has invalid "placeholder" property "' + placeholder + '".'), "__NEXT_ERROR_CODE", {
                value: "E431",
                enumerable: false,
                configurable: true
            });
        }
        if (placeholder !== 'empty') {
            if (widthInt && heightInt && widthInt * heightInt < 1600) {
                (0, _warnonce.warnOnce)('Image with src "' + src + '" is smaller than 40x40. Consider removing the "placeholder" property to improve performance.');
            }
        }
        if (qualityInt && qualityInt !== 75 && !config.qualities) {
            (0, _warnonce.warnOnce)('Image with src "' + src + '" is using quality "' + qualityInt + '" which is not configured in images.qualities. This config will be required starting in Next.js 16.' + "\nRead more: https://nextjs.org/docs/messages/next-image-unconfigured-qualities");
        }
        if (src.startsWith('/') && src.includes('?') && (!(config == null ? void 0 : (_config_localPatterns = config.localPatterns) == null ? void 0 : _config_localPatterns.length) || config.localPatterns.length === 1 && config.localPatterns[0].pathname === '/_next/static/media/**')) {
            (0, _warnonce.warnOnce)('Image with src "' + src + '" is using a query string which is not configured in images.localPatterns. This config will be required starting in Next.js 16.' + "\nRead more: https://nextjs.org/docs/messages/next-image-unconfigured-localpatterns");
        }
        if (placeholder === 'blur' && !blurDataURL) {
            const VALID_BLUR_EXT = [
                'jpeg',
                'png',
                'webp',
                'avif'
            ] // should match next-image-loader
            ;
            throw Object.defineProperty(new Error('Image with src "' + src + '" has "placeholder=\'blur\'" property but is missing the "blurDataURL" property.\n        Possible solutions:\n          - Add a "blurDataURL" property, the contents should be a small Data URL to represent the image\n          - Change the "src" property to a static import with one of the supported file types: ' + VALID_BLUR_EXT.join(',') + ' (animated images not supported)\n          - Remove the "placeholder" property, effectively no blur effect\n        Read more: https://nextjs.org/docs/messages/placeholder-blur-data-url'), "__NEXT_ERROR_CODE", {
                value: "E371",
                enumerable: false,
                configurable: true
            });
        }
        if ('ref' in rest) {
            (0, _warnonce.warnOnce)('Image with src "' + src + '" is using unsupported "ref" property. Consider using the "onLoad" property instead.');
        }
        if (!unoptimized && !isDefaultLoader) {
            const urlStr = loader({
                config,
                src,
                width: widthInt || 400,
                quality: qualityInt || 75
            });
            let url;
            try {
                url = new URL(urlStr);
            } catch (err) {}
            if (urlStr === src || url && url.pathname === src && !url.search) {
                (0, _warnonce.warnOnce)('Image with src "' + src + '" has a "loader" property that does not implement width. Please implement it or use the "unoptimized" property instead.' + "\nRead more: https://nextjs.org/docs/messages/next-image-missing-loader-width");
            }
        }
        if (onLoadingComplete) {
            (0, _warnonce.warnOnce)('Image with src "' + src + '" is using deprecated "onLoadingComplete" property. Please use the "onLoad" property instead.');
        }
        for (const [legacyKey, legacyValue] of Object.entries({
            layout,
            objectFit,
            objectPosition,
            lazyBoundary,
            lazyRoot
        })){
            if (legacyValue) {
                (0, _warnonce.warnOnce)('Image with src "' + src + '" has legacy prop "' + legacyKey + '". Did you forget to run the codemod?' + "\nRead more: https://nextjs.org/docs/messages/next-image-upgrade-to-13");
            }
        }
        if (typeof window !== 'undefined' && !perfObserver && window.PerformanceObserver) {
            perfObserver = new PerformanceObserver((entryList)=>{
                for (const entry of entryList.getEntries()){
                    var _entry_element;
                    // @ts-ignore - missing "LargestContentfulPaint" class with "element" prop
                    const imgSrc = (entry == null ? void 0 : (_entry_element = entry.element) == null ? void 0 : _entry_element.src) || '';
                    const lcpImage = allImgs.get(imgSrc);
                    if (lcpImage && !lcpImage.priority && lcpImage.placeholder === 'empty' && !lcpImage.src.startsWith('data:') && !lcpImage.src.startsWith('blob:')) {
                        // https://web.dev/lcp/#measure-lcp-in-javascript
                        (0, _warnonce.warnOnce)('Image with src "' + lcpImage.src + '" was detected as the Largest Contentful Paint (LCP). Please add the "priority" property if this image is above the fold.' + "\nRead more: https://nextjs.org/docs/api-reference/next/image#priority");
                    }
                }
            });
            try {
                perfObserver.observe({
                    type: 'largest-contentful-paint',
                    buffered: true
                });
            } catch (err) {
                // Log error but don't crash the app
                console.error(err);
            }
        }
    }
    const imgStyle = Object.assign(fill ? {
        position: 'absolute',
        height: '100%',
        width: '100%',
        left: 0,
        top: 0,
        right: 0,
        bottom: 0,
        objectFit,
        objectPosition
    } : {}, showAltText ? {} : {
        color: 'transparent'
    }, style);
    const backgroundImage = !blurComplete && placeholder !== 'empty' ? placeholder === 'blur' ? 'url("data:image/svg+xml;charset=utf-8,' + (0, _imageblursvg.getImageBlurSvg)({
        widthInt,
        heightInt,
        blurWidth,
        blurHeight,
        blurDataURL: blurDataURL || '',
        objectFit: imgStyle.objectFit
    }) + '")' : 'url("' + placeholder + '")' // assume `data:image/`
     : null;
    const backgroundSize = !INVALID_BACKGROUND_SIZE_VALUES.includes(imgStyle.objectFit) ? imgStyle.objectFit : imgStyle.objectFit === 'fill' ? '100% 100%' // the background-size equivalent of `fill`
     : 'cover';
    let placeholderStyle = backgroundImage ? {
        backgroundSize,
        backgroundPosition: imgStyle.objectPosition || '50% 50%',
        backgroundRepeat: 'no-repeat',
        backgroundImage
    } : {};
    if ("TURBOPACK compile-time truthy", 1) {
        if (placeholderStyle.backgroundImage && placeholder === 'blur' && (blurDataURL == null ? void 0 : blurDataURL.startsWith('/'))) {
            // During `next dev`, we don't want to generate blur placeholders with webpack
            // because it can delay starting the dev server. Instead, `next-image-loader.js`
            // will inline a special url to lazily generate the blur placeholder at request time.
            placeholderStyle.backgroundImage = 'url("' + blurDataURL + '")';
        }
    }
    const imgAttributes = generateImgAttrs({
        config,
        src,
        unoptimized,
        width: widthInt,
        quality: qualityInt,
        sizes,
        loader
    });
    if ("TURBOPACK compile-time truthy", 1) {
        if (typeof window !== 'undefined') {
            let fullUrl;
            try {
                fullUrl = new URL(imgAttributes.src);
            } catch (e) {
                fullUrl = new URL(imgAttributes.src, window.location.href);
            }
            allImgs.set(fullUrl.href, {
                src,
                priority,
                placeholder
            });
        }
    }
    const props = {
        ...rest,
        loading: isLazy ? 'lazy' : loading,
        fetchPriority,
        width: widthInt,
        height: heightInt,
        decoding,
        className,
        style: {
            ...imgStyle,
            ...placeholderStyle
        },
        sizes: imgAttributes.sizes,
        srcSet: imgAttributes.srcSet,
        src: overrideSrc || imgAttributes.src
    };
    const meta = {
        unoptimized,
        priority,
        placeholder,
        fill
    };
    return {
        props,
        meta
    };
} //# sourceMappingURL=get-img-props.js.map
}),
"[project]/node_modules/next/dist/shared/lib/side-effect.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return SideEffect;
    }
});
const _react = __turbopack_context__.r("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
const isServer = typeof window === 'undefined';
const useClientOnlyLayoutEffect = isServer ? ()=>{} : _react.useLayoutEffect;
const useClientOnlyEffect = isServer ? ()=>{} : _react.useEffect;
function SideEffect(props) {
    const { headManager, reduceComponentsToState } = props;
    function emitChange() {
        if (headManager && headManager.mountedInstances) {
            const headElements = _react.Children.toArray(Array.from(headManager.mountedInstances).filter(Boolean));
            headManager.updateHead(reduceComponentsToState(headElements, props));
        }
    }
    if (isServer) {
        var _headManager_mountedInstances;
        headManager == null ? void 0 : (_headManager_mountedInstances = headManager.mountedInstances) == null ? void 0 : _headManager_mountedInstances.add(props.children);
        emitChange();
    }
    useClientOnlyLayoutEffect({
        "SideEffect.useClientOnlyLayoutEffect": ()=>{
            var _headManager_mountedInstances;
            headManager == null ? void 0 : (_headManager_mountedInstances = headManager.mountedInstances) == null ? void 0 : _headManager_mountedInstances.add(props.children);
            return ({
                "SideEffect.useClientOnlyLayoutEffect": ()=>{
                    var _headManager_mountedInstances;
                    headManager == null ? void 0 : (_headManager_mountedInstances = headManager.mountedInstances) == null ? void 0 : _headManager_mountedInstances.delete(props.children);
                }
            })["SideEffect.useClientOnlyLayoutEffect"];
        }
    }["SideEffect.useClientOnlyLayoutEffect"]);
    // We need to call `updateHead` method whenever the `SideEffect` is trigger in all
    // life-cycles: mount, update, unmount. However, if there are multiple `SideEffect`s
    // being rendered, we only trigger the method from the last one.
    // This is ensured by keeping the last unflushed `updateHead` in the `_pendingUpdate`
    // singleton in the layout effect pass, and actually trigger it in the effect pass.
    useClientOnlyLayoutEffect({
        "SideEffect.useClientOnlyLayoutEffect": ()=>{
            if (headManager) {
                headManager._pendingUpdate = emitChange;
            }
            return ({
                "SideEffect.useClientOnlyLayoutEffect": ()=>{
                    if (headManager) {
                        headManager._pendingUpdate = emitChange;
                    }
                }
            })["SideEffect.useClientOnlyLayoutEffect"];
        }
    }["SideEffect.useClientOnlyLayoutEffect"]);
    useClientOnlyEffect({
        "SideEffect.useClientOnlyEffect": ()=>{
            if (headManager && headManager._pendingUpdate) {
                headManager._pendingUpdate();
                headManager._pendingUpdate = null;
            }
            return ({
                "SideEffect.useClientOnlyEffect": ()=>{
                    if (headManager && headManager._pendingUpdate) {
                        headManager._pendingUpdate();
                        headManager._pendingUpdate = null;
                    }
                }
            })["SideEffect.useClientOnlyEffect"];
        }
    }["SideEffect.useClientOnlyEffect"]);
    return null;
} //# sourceMappingURL=side-effect.js.map
}),
"[project]/node_modules/next/dist/shared/lib/amp-context.shared-runtime.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "AmpStateContext", {
    enumerable: true,
    get: function() {
        return AmpStateContext;
    }
});
const _interop_require_default = __turbopack_context__.r("[project]/node_modules/@swc/helpers/cjs/_interop_require_default.cjs [app-client] (ecmascript)");
const _react = /*#__PURE__*/ _interop_require_default._(__turbopack_context__.r("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)"));
const AmpStateContext = _react.default.createContext({});
if ("TURBOPACK compile-time truthy", 1) {
    AmpStateContext.displayName = 'AmpStateContext';
} //# sourceMappingURL=amp-context.shared-runtime.js.map
}),
"[project]/node_modules/next/dist/shared/lib/amp-mode.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "isInAmpMode", {
    enumerable: true,
    get: function() {
        return isInAmpMode;
    }
});
function isInAmpMode(param) {
    let { ampFirst = false, hybrid = false, hasQuery = false } = param === void 0 ? {} : param;
    return ampFirst || hybrid && hasQuery;
} //# sourceMappingURL=amp-mode.js.map
}),
"[project]/node_modules/next/dist/shared/lib/head.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    default: null,
    defaultHead: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    default: function() {
        return _default;
    },
    defaultHead: function() {
        return defaultHead;
    }
});
const _interop_require_default = __turbopack_context__.r("[project]/node_modules/@swc/helpers/cjs/_interop_require_default.cjs [app-client] (ecmascript)");
const _interop_require_wildcard = __turbopack_context__.r("[project]/node_modules/@swc/helpers/cjs/_interop_require_wildcard.cjs [app-client] (ecmascript)");
const _jsxruntime = __turbopack_context__.r("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
const _react = /*#__PURE__*/ _interop_require_wildcard._(__turbopack_context__.r("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)"));
const _sideeffect = /*#__PURE__*/ _interop_require_default._(__turbopack_context__.r("[project]/node_modules/next/dist/shared/lib/side-effect.js [app-client] (ecmascript)"));
const _ampcontextsharedruntime = __turbopack_context__.r("[project]/node_modules/next/dist/shared/lib/amp-context.shared-runtime.js [app-client] (ecmascript)");
const _headmanagercontextsharedruntime = __turbopack_context__.r("[project]/node_modules/next/dist/shared/lib/head-manager-context.shared-runtime.js [app-client] (ecmascript)");
const _ampmode = __turbopack_context__.r("[project]/node_modules/next/dist/shared/lib/amp-mode.js [app-client] (ecmascript)");
const _warnonce = __turbopack_context__.r("[project]/node_modules/next/dist/shared/lib/utils/warn-once.js [app-client] (ecmascript)");
function defaultHead(inAmpMode) {
    if (inAmpMode === void 0) inAmpMode = false;
    const head = [
        /*#__PURE__*/ (0, _jsxruntime.jsx)("meta", {
            charSet: "utf-8"
        }, "charset")
    ];
    if (!inAmpMode) {
        head.push(/*#__PURE__*/ (0, _jsxruntime.jsx)("meta", {
            name: "viewport",
            content: "width=device-width"
        }, "viewport"));
    }
    return head;
}
function onlyReactElement(list, child) {
    // React children can be "string" or "number" in this case we ignore them for backwards compat
    if (typeof child === 'string' || typeof child === 'number') {
        return list;
    }
    // Adds support for React.Fragment
    if (child.type === _react.default.Fragment) {
        return list.concat(_react.default.Children.toArray(child.props.children).reduce((fragmentList, fragmentChild)=>{
            if (typeof fragmentChild === 'string' || typeof fragmentChild === 'number') {
                return fragmentList;
            }
            return fragmentList.concat(fragmentChild);
        }, []));
    }
    return list.concat(child);
}
const METATYPES = [
    'name',
    'httpEquiv',
    'charSet',
    'itemProp'
];
/*
 returns a function for filtering head child elements
 which shouldn't be duplicated, like <title/>
 Also adds support for deduplicated `key` properties
*/ function unique() {
    const keys = new Set();
    const tags = new Set();
    const metaTypes = new Set();
    const metaCategories = {};
    return (h)=>{
        let isUnique = true;
        let hasKey = false;
        if (h.key && typeof h.key !== 'number' && h.key.indexOf('$') > 0) {
            hasKey = true;
            const key = h.key.slice(h.key.indexOf('$') + 1);
            if (keys.has(key)) {
                isUnique = false;
            } else {
                keys.add(key);
            }
        }
        // eslint-disable-next-line default-case
        switch(h.type){
            case 'title':
            case 'base':
                if (tags.has(h.type)) {
                    isUnique = false;
                } else {
                    tags.add(h.type);
                }
                break;
            case 'meta':
                for(let i = 0, len = METATYPES.length; i < len; i++){
                    const metatype = METATYPES[i];
                    if (!h.props.hasOwnProperty(metatype)) continue;
                    if (metatype === 'charSet') {
                        if (metaTypes.has(metatype)) {
                            isUnique = false;
                        } else {
                            metaTypes.add(metatype);
                        }
                    } else {
                        const category = h.props[metatype];
                        const categories = metaCategories[metatype] || new Set();
                        if ((metatype !== 'name' || !hasKey) && categories.has(category)) {
                            isUnique = false;
                        } else {
                            categories.add(category);
                            metaCategories[metatype] = categories;
                        }
                    }
                }
                break;
        }
        return isUnique;
    };
}
/**
 *
 * @param headChildrenElements List of children of <Head>
 */ function reduceComponents(headChildrenElements, props) {
    const { inAmpMode } = props;
    return headChildrenElements.reduce(onlyReactElement, []).reverse().concat(defaultHead(inAmpMode).reverse()).filter(unique()).reverse().map((c, i)=>{
        const key = c.key || i;
        if ("TURBOPACK compile-time truthy", 1) {
            // omit JSON-LD structured data snippets from the warning
            if (c.type === 'script' && c.props['type'] !== 'application/ld+json') {
                const srcMessage = c.props['src'] ? '<script> tag with src="' + c.props['src'] + '"' : "inline <script>";
                (0, _warnonce.warnOnce)("Do not add <script> tags using next/head (see " + srcMessage + "). Use next/script instead. \nSee more info here: https://nextjs.org/docs/messages/no-script-tags-in-head-component");
            } else if (c.type === 'link' && c.props['rel'] === 'stylesheet') {
                (0, _warnonce.warnOnce)('Do not add stylesheets using next/head (see <link rel="stylesheet"> tag with href="' + c.props['href'] + '"). Use Document instead. \nSee more info here: https://nextjs.org/docs/messages/no-stylesheets-in-head-component');
            }
        }
        return /*#__PURE__*/ _react.default.cloneElement(c, {
            key
        });
    });
}
/**
 * This component injects elements to `<head>` of your page.
 * To avoid duplicated `tags` in `<head>` you can use the `key` property, which will make sure every tag is only rendered once.
 */ function Head(param) {
    let { children } = param;
    const ampState = (0, _react.useContext)(_ampcontextsharedruntime.AmpStateContext);
    const headManager = (0, _react.useContext)(_headmanagercontextsharedruntime.HeadManagerContext);
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_sideeffect.default, {
        reduceComponentsToState: reduceComponents,
        headManager: headManager,
        inAmpMode: (0, _ampmode.isInAmpMode)(ampState),
        children: children
    });
}
const _default = Head;
if ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {
    Object.defineProperty(exports.default, '__esModule', {
        value: true
    });
    Object.assign(exports.default, exports);
    module.exports = exports.default;
} //# sourceMappingURL=head.js.map
}),
"[project]/node_modules/next/dist/shared/lib/image-config-context.shared-runtime.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "ImageConfigContext", {
    enumerable: true,
    get: function() {
        return ImageConfigContext;
    }
});
const _interop_require_default = __turbopack_context__.r("[project]/node_modules/@swc/helpers/cjs/_interop_require_default.cjs [app-client] (ecmascript)");
const _react = /*#__PURE__*/ _interop_require_default._(__turbopack_context__.r("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)"));
const _imageconfig = __turbopack_context__.r("[project]/node_modules/next/dist/shared/lib/image-config.js [app-client] (ecmascript)");
const ImageConfigContext = _react.default.createContext(_imageconfig.imageConfigDefault);
if ("TURBOPACK compile-time truthy", 1) {
    ImageConfigContext.displayName = 'ImageConfigContext';
} //# sourceMappingURL=image-config-context.shared-runtime.js.map
}),
"[project]/node_modules/next/dist/shared/lib/router-context.shared-runtime.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "RouterContext", {
    enumerable: true,
    get: function() {
        return RouterContext;
    }
});
const _interop_require_default = __turbopack_context__.r("[project]/node_modules/@swc/helpers/cjs/_interop_require_default.cjs [app-client] (ecmascript)");
const _react = /*#__PURE__*/ _interop_require_default._(__turbopack_context__.r("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)"));
const RouterContext = _react.default.createContext(null);
if ("TURBOPACK compile-time truthy", 1) {
    RouterContext.displayName = 'RouterContext';
} //# sourceMappingURL=router-context.shared-runtime.js.map
}),
"[project]/node_modules/next/dist/compiled/picomatch/index.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {

var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
(()=>{
    "use strict";
    var t = {
        170: (t, e, u)=>{
            const n = u(510);
            const isWindows = ()=>{
                if (typeof navigator !== "undefined" && navigator.platform) {
                    const t = navigator.platform.toLowerCase();
                    return t === "win32" || t === "windows";
                }
                if (typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"] !== "undefined" && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].platform) {
                    return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].platform === "win32";
                }
                return false;
            };
            function picomatch(t, e) {
                let u = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
                if (e && (e.windows === null || e.windows === undefined)) {
                    e = {
                        ...e,
                        windows: isWindows()
                    };
                }
                return n(t, e, u);
            }
            Object.assign(picomatch, n);
            t.exports = picomatch;
        },
        154: (t)=>{
            const e = "\\\\/";
            const u = "[^".concat(e, "]");
            const n = "\\.";
            const o = "\\+";
            const s = "\\?";
            const r = "\\/";
            const a = "(?=.)";
            const i = "[^/]";
            const c = "(?:".concat(r, "|$)");
            const p = "(?:^|".concat(r, ")");
            const l = "".concat(n, "{1,2}").concat(c);
            const f = "(?!".concat(n, ")");
            const A = "(?!".concat(p).concat(l, ")");
            const _ = "(?!".concat(n, "{0,1}").concat(c, ")");
            const R = "(?!".concat(l, ")");
            const E = "[^.".concat(r, "]");
            const h = "".concat(i, "*?");
            const g = "/";
            const b = {
                DOT_LITERAL: n,
                PLUS_LITERAL: o,
                QMARK_LITERAL: s,
                SLASH_LITERAL: r,
                ONE_CHAR: a,
                QMARK: i,
                END_ANCHOR: c,
                DOTS_SLASH: l,
                NO_DOT: f,
                NO_DOTS: A,
                NO_DOT_SLASH: _,
                NO_DOTS_SLASH: R,
                QMARK_NO_DOT: E,
                STAR: h,
                START_ANCHOR: p,
                SEP: g
            };
            const C = {
                ...b,
                SLASH_LITERAL: "[".concat(e, "]"),
                QMARK: u,
                STAR: "".concat(u, "*?"),
                DOTS_SLASH: "".concat(n, "{1,2}(?:[").concat(e, "]|$)"),
                NO_DOT: "(?!".concat(n, ")"),
                NO_DOTS: "(?!(?:^|[".concat(e, "])").concat(n, "{1,2}(?:[").concat(e, "]|$))"),
                NO_DOT_SLASH: "(?!".concat(n, "{0,1}(?:[").concat(e, "]|$))"),
                NO_DOTS_SLASH: "(?!".concat(n, "{1,2}(?:[").concat(e, "]|$))"),
                QMARK_NO_DOT: "[^.".concat(e, "]"),
                START_ANCHOR: "(?:^|[".concat(e, "])"),
                END_ANCHOR: "(?:[".concat(e, "]|$)"),
                SEP: "\\"
            };
            const y = {
                alnum: "a-zA-Z0-9",
                alpha: "a-zA-Z",
                ascii: "\\x00-\\x7F",
                blank: " \\t",
                cntrl: "\\x00-\\x1F\\x7F",
                digit: "0-9",
                graph: "\\x21-\\x7E",
                lower: "a-z",
                print: "\\x20-\\x7E ",
                punct: "\\-!\"#$%&'()\\*+,./:;<=>?@[\\]^_`{|}~",
                space: " \\t\\r\\n\\v\\f",
                upper: "A-Z",
                word: "A-Za-z0-9_",
                xdigit: "A-Fa-f0-9"
            };
            t.exports = {
                MAX_LENGTH: 1024 * 64,
                POSIX_REGEX_SOURCE: y,
                REGEX_BACKSLASH: /\\(?![*+?^${}(|)[\]])/g,
                REGEX_NON_SPECIAL_CHARS: /^[^@![\].,$*+?^{}()|\\/]+/,
                REGEX_SPECIAL_CHARS: /[-*+?.^${}(|)[\]]/,
                REGEX_SPECIAL_CHARS_BACKREF: /(\\?)((\W)(\3*))/g,
                REGEX_SPECIAL_CHARS_GLOBAL: /([-*+?.^${}(|)[\]])/g,
                REGEX_REMOVE_BACKSLASH: /(?:\[.*?[^\\]\]|\\(?=.))/g,
                REPLACEMENTS: {
                    "***": "*",
                    "**/**": "**",
                    "**/**/**": "**"
                },
                CHAR_0: 48,
                CHAR_9: 57,
                CHAR_UPPERCASE_A: 65,
                CHAR_LOWERCASE_A: 97,
                CHAR_UPPERCASE_Z: 90,
                CHAR_LOWERCASE_Z: 122,
                CHAR_LEFT_PARENTHESES: 40,
                CHAR_RIGHT_PARENTHESES: 41,
                CHAR_ASTERISK: 42,
                CHAR_AMPERSAND: 38,
                CHAR_AT: 64,
                CHAR_BACKWARD_SLASH: 92,
                CHAR_CARRIAGE_RETURN: 13,
                CHAR_CIRCUMFLEX_ACCENT: 94,
                CHAR_COLON: 58,
                CHAR_COMMA: 44,
                CHAR_DOT: 46,
                CHAR_DOUBLE_QUOTE: 34,
                CHAR_EQUAL: 61,
                CHAR_EXCLAMATION_MARK: 33,
                CHAR_FORM_FEED: 12,
                CHAR_FORWARD_SLASH: 47,
                CHAR_GRAVE_ACCENT: 96,
                CHAR_HASH: 35,
                CHAR_HYPHEN_MINUS: 45,
                CHAR_LEFT_ANGLE_BRACKET: 60,
                CHAR_LEFT_CURLY_BRACE: 123,
                CHAR_LEFT_SQUARE_BRACKET: 91,
                CHAR_LINE_FEED: 10,
                CHAR_NO_BREAK_SPACE: 160,
                CHAR_PERCENT: 37,
                CHAR_PLUS: 43,
                CHAR_QUESTION_MARK: 63,
                CHAR_RIGHT_ANGLE_BRACKET: 62,
                CHAR_RIGHT_CURLY_BRACE: 125,
                CHAR_RIGHT_SQUARE_BRACKET: 93,
                CHAR_SEMICOLON: 59,
                CHAR_SINGLE_QUOTE: 39,
                CHAR_SPACE: 32,
                CHAR_TAB: 9,
                CHAR_UNDERSCORE: 95,
                CHAR_VERTICAL_LINE: 124,
                CHAR_ZERO_WIDTH_NOBREAK_SPACE: 65279,
                extglobChars (t) {
                    return {
                        "!": {
                            type: "negate",
                            open: "(?:(?!(?:",
                            close: "))".concat(t.STAR, ")")
                        },
                        "?": {
                            type: "qmark",
                            open: "(?:",
                            close: ")?"
                        },
                        "+": {
                            type: "plus",
                            open: "(?:",
                            close: ")+"
                        },
                        "*": {
                            type: "star",
                            open: "(?:",
                            close: ")*"
                        },
                        "@": {
                            type: "at",
                            open: "(?:",
                            close: ")"
                        }
                    };
                },
                globChars (t) {
                    return t === true ? C : b;
                }
            };
        },
        697: (t, e, u)=>{
            const n = u(154);
            const o = u(96);
            const { MAX_LENGTH: s, POSIX_REGEX_SOURCE: r, REGEX_NON_SPECIAL_CHARS: a, REGEX_SPECIAL_CHARS_BACKREF: i, REPLACEMENTS: c } = n;
            const expandRange = (t, e)=>{
                if (typeof e.expandRange === "function") {
                    return e.expandRange(...t, e);
                }
                t.sort();
                const u = "[".concat(t.join("-"), "]");
                try {
                    new RegExp(u);
                } catch (e) {
                    return t.map((t)=>o.escapeRegex(t)).join("..");
                }
                return u;
            };
            const syntaxError = (t, e)=>"Missing ".concat(t, ': "').concat(e, '" - use "\\\\').concat(e, '" to match literal characters');
            const parse = (t, e)=>{
                if (typeof t !== "string") {
                    throw new TypeError("Expected a string");
                }
                t = c[t] || t;
                const u = {
                    ...e
                };
                const p = typeof u.maxLength === "number" ? Math.min(s, u.maxLength) : s;
                let l = t.length;
                if (l > p) {
                    throw new SyntaxError("Input length: ".concat(l, ", exceeds maximum allowed length: ").concat(p));
                }
                const f = {
                    type: "bos",
                    value: "",
                    output: u.prepend || ""
                };
                const A = [
                    f
                ];
                const _ = u.capture ? "" : "?:";
                const R = n.globChars(u.windows);
                const E = n.extglobChars(R);
                const { DOT_LITERAL: h, PLUS_LITERAL: g, SLASH_LITERAL: b, ONE_CHAR: C, DOTS_SLASH: y, NO_DOT: $, NO_DOT_SLASH: x, NO_DOTS_SLASH: S, QMARK: H, QMARK_NO_DOT: v, STAR: d, START_ANCHOR: L } = R;
                const globstar = (t)=>"(".concat(_, "(?:(?!").concat(L).concat(t.dot ? y : h, ").)*?)");
                const T = u.dot ? "" : $;
                const O = u.dot ? H : v;
                let k = u.bash === true ? globstar(u) : d;
                if (u.capture) {
                    k = "(".concat(k, ")");
                }
                if (typeof u.noext === "boolean") {
                    u.noextglob = u.noext;
                }
                const m = {
                    input: t,
                    index: -1,
                    start: 0,
                    dot: u.dot === true,
                    consumed: "",
                    output: "",
                    prefix: "",
                    backtrack: false,
                    negated: false,
                    brackets: 0,
                    braces: 0,
                    parens: 0,
                    quotes: 0,
                    globstar: false,
                    tokens: A
                };
                t = o.removePrefix(t, m);
                l = t.length;
                const w = [];
                const N = [];
                const I = [];
                let B = f;
                let G;
                const eos = ()=>m.index === l - 1;
                const D = m.peek = function() {
                    let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : 1;
                    return t[m.index + e];
                };
                const M = m.advance = ()=>t[++m.index] || "";
                const remaining = ()=>t.slice(m.index + 1);
                const consume = function() {
                    let t = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "", e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
                    m.consumed += t;
                    m.index += e;
                };
                const append = (t)=>{
                    m.output += t.output != null ? t.output : t.value;
                    consume(t.value);
                };
                const negate = ()=>{
                    let t = 1;
                    while(D() === "!" && (D(2) !== "(" || D(3) === "?")){
                        M();
                        m.start++;
                        t++;
                    }
                    if (t % 2 === 0) {
                        return false;
                    }
                    m.negated = true;
                    m.start++;
                    return true;
                };
                const increment = (t)=>{
                    m[t]++;
                    I.push(t);
                };
                const decrement = (t)=>{
                    m[t]--;
                    I.pop();
                };
                const push = (t)=>{
                    if (B.type === "globstar") {
                        const e = m.braces > 0 && (t.type === "comma" || t.type === "brace");
                        const u = t.extglob === true || w.length && (t.type === "pipe" || t.type === "paren");
                        if (t.type !== "slash" && t.type !== "paren" && !e && !u) {
                            m.output = m.output.slice(0, -B.output.length);
                            B.type = "star";
                            B.value = "*";
                            B.output = k;
                            m.output += B.output;
                        }
                    }
                    if (w.length && t.type !== "paren") {
                        w[w.length - 1].inner += t.value;
                    }
                    if (t.value || t.output) append(t);
                    if (B && B.type === "text" && t.type === "text") {
                        B.output = (B.output || B.value) + t.value;
                        B.value += t.value;
                        return;
                    }
                    t.prev = B;
                    A.push(t);
                    B = t;
                };
                const extglobOpen = (t, e)=>{
                    const n = {
                        ...E[e],
                        conditions: 1,
                        inner: ""
                    };
                    n.prev = B;
                    n.parens = m.parens;
                    n.output = m.output;
                    const o = (u.capture ? "(" : "") + n.open;
                    increment("parens");
                    push({
                        type: t,
                        value: e,
                        output: m.output ? "" : C
                    });
                    push({
                        type: "paren",
                        extglob: true,
                        value: M(),
                        output: o
                    });
                    w.push(n);
                };
                const extglobClose = (t)=>{
                    let n = t.close + (u.capture ? ")" : "");
                    let o;
                    if (t.type === "negate") {
                        let s = k;
                        if (t.inner && t.inner.length > 1 && t.inner.includes("/")) {
                            s = globstar(u);
                        }
                        if (s !== k || eos() || /^\)+$/.test(remaining())) {
                            n = t.close = ")$))".concat(s);
                        }
                        if (t.inner.includes("*") && (o = remaining()) && /^\.[^\\/.]+$/.test(o)) {
                            const u = parse(o, {
                                ...e,
                                fastpaths: false
                            }).output;
                            n = t.close = ")".concat(u, ")").concat(s, ")");
                        }
                        if (t.prev.type === "bos") {
                            m.negatedExtglob = true;
                        }
                    }
                    push({
                        type: "paren",
                        extglob: true,
                        value: G,
                        output: n
                    });
                    decrement("parens");
                };
                if (u.fastpaths !== false && !/(^[*!]|[/()[\]{}"])/.test(t)) {
                    let n = false;
                    let s = t.replace(i, (t, e, u, o, s, r)=>{
                        if (o === "\\") {
                            n = true;
                            return t;
                        }
                        if (o === "?") {
                            if (e) {
                                return e + o + (s ? H.repeat(s.length) : "");
                            }
                            if (r === 0) {
                                return O + (s ? H.repeat(s.length) : "");
                            }
                            return H.repeat(u.length);
                        }
                        if (o === ".") {
                            return h.repeat(u.length);
                        }
                        if (o === "*") {
                            if (e) {
                                return e + o + (s ? k : "");
                            }
                            return k;
                        }
                        return e ? t : "\\".concat(t);
                    });
                    if (n === true) {
                        if (u.unescape === true) {
                            s = s.replace(/\\/g, "");
                        } else {
                            s = s.replace(/\\+/g, (t)=>t.length % 2 === 0 ? "\\\\" : t ? "\\" : "");
                        }
                    }
                    if (s === t && u.contains === true) {
                        m.output = t;
                        return m;
                    }
                    m.output = o.wrapOutput(s, m, e);
                    return m;
                }
                while(!eos()){
                    G = M();
                    if (G === "\0") {
                        continue;
                    }
                    if (G === "\\") {
                        const t = D();
                        if (t === "/" && u.bash !== true) {
                            continue;
                        }
                        if (t === "." || t === ";") {
                            continue;
                        }
                        if (!t) {
                            G += "\\";
                            push({
                                type: "text",
                                value: G
                            });
                            continue;
                        }
                        const e = /^\\+/.exec(remaining());
                        let n = 0;
                        if (e && e[0].length > 2) {
                            n = e[0].length;
                            m.index += n;
                            if (n % 2 !== 0) {
                                G += "\\";
                            }
                        }
                        if (u.unescape === true) {
                            G = M();
                        } else {
                            G += M();
                        }
                        if (m.brackets === 0) {
                            push({
                                type: "text",
                                value: G
                            });
                            continue;
                        }
                    }
                    if (m.brackets > 0 && (G !== "]" || B.value === "[" || B.value === "[^")) {
                        if (u.posix !== false && G === ":") {
                            const t = B.value.slice(1);
                            if (t.includes("[")) {
                                B.posix = true;
                                if (t.includes(":")) {
                                    const t = B.value.lastIndexOf("[");
                                    const e = B.value.slice(0, t);
                                    const u = B.value.slice(t + 2);
                                    const n = r[u];
                                    if (n) {
                                        B.value = e + n;
                                        m.backtrack = true;
                                        M();
                                        if (!f.output && A.indexOf(B) === 1) {
                                            f.output = C;
                                        }
                                        continue;
                                    }
                                }
                            }
                        }
                        if (G === "[" && D() !== ":" || G === "-" && D() === "]") {
                            G = "\\".concat(G);
                        }
                        if (G === "]" && (B.value === "[" || B.value === "[^")) {
                            G = "\\".concat(G);
                        }
                        if (u.posix === true && G === "!" && B.value === "[") {
                            G = "^";
                        }
                        B.value += G;
                        append({
                            value: G
                        });
                        continue;
                    }
                    if (m.quotes === 1 && G !== '"') {
                        G = o.escapeRegex(G);
                        B.value += G;
                        append({
                            value: G
                        });
                        continue;
                    }
                    if (G === '"') {
                        m.quotes = m.quotes === 1 ? 0 : 1;
                        if (u.keepQuotes === true) {
                            push({
                                type: "text",
                                value: G
                            });
                        }
                        continue;
                    }
                    if (G === "(") {
                        increment("parens");
                        push({
                            type: "paren",
                            value: G
                        });
                        continue;
                    }
                    if (G === ")") {
                        if (m.parens === 0 && u.strictBrackets === true) {
                            throw new SyntaxError(syntaxError("opening", "("));
                        }
                        const t = w[w.length - 1];
                        if (t && m.parens === t.parens + 1) {
                            extglobClose(w.pop());
                            continue;
                        }
                        push({
                            type: "paren",
                            value: G,
                            output: m.parens ? ")" : "\\)"
                        });
                        decrement("parens");
                        continue;
                    }
                    if (G === "[") {
                        if (u.nobracket === true || !remaining().includes("]")) {
                            if (u.nobracket !== true && u.strictBrackets === true) {
                                throw new SyntaxError(syntaxError("closing", "]"));
                            }
                            G = "\\".concat(G);
                        } else {
                            increment("brackets");
                        }
                        push({
                            type: "bracket",
                            value: G
                        });
                        continue;
                    }
                    if (G === "]") {
                        if (u.nobracket === true || B && B.type === "bracket" && B.value.length === 1) {
                            push({
                                type: "text",
                                value: G,
                                output: "\\".concat(G)
                            });
                            continue;
                        }
                        if (m.brackets === 0) {
                            if (u.strictBrackets === true) {
                                throw new SyntaxError(syntaxError("opening", "["));
                            }
                            push({
                                type: "text",
                                value: G,
                                output: "\\".concat(G)
                            });
                            continue;
                        }
                        decrement("brackets");
                        const t = B.value.slice(1);
                        if (B.posix !== true && t[0] === "^" && !t.includes("/")) {
                            G = "/".concat(G);
                        }
                        B.value += G;
                        append({
                            value: G
                        });
                        if (u.literalBrackets === false || o.hasRegexChars(t)) {
                            continue;
                        }
                        const e = o.escapeRegex(B.value);
                        m.output = m.output.slice(0, -B.value.length);
                        if (u.literalBrackets === true) {
                            m.output += e;
                            B.value = e;
                            continue;
                        }
                        B.value = "(".concat(_).concat(e, "|").concat(B.value, ")");
                        m.output += B.value;
                        continue;
                    }
                    if (G === "{" && u.nobrace !== true) {
                        increment("braces");
                        const t = {
                            type: "brace",
                            value: G,
                            output: "(",
                            outputIndex: m.output.length,
                            tokensIndex: m.tokens.length
                        };
                        N.push(t);
                        push(t);
                        continue;
                    }
                    if (G === "}") {
                        const t = N[N.length - 1];
                        if (u.nobrace === true || !t) {
                            push({
                                type: "text",
                                value: G,
                                output: G
                            });
                            continue;
                        }
                        let e = ")";
                        if (t.dots === true) {
                            const t = A.slice();
                            const n = [];
                            for(let e = t.length - 1; e >= 0; e--){
                                A.pop();
                                if (t[e].type === "brace") {
                                    break;
                                }
                                if (t[e].type !== "dots") {
                                    n.unshift(t[e].value);
                                }
                            }
                            e = expandRange(n, u);
                            m.backtrack = true;
                        }
                        if (t.comma !== true && t.dots !== true) {
                            const u = m.output.slice(0, t.outputIndex);
                            const n = m.tokens.slice(t.tokensIndex);
                            t.value = t.output = "\\{";
                            G = e = "\\}";
                            m.output = u;
                            for (const t of n){
                                m.output += t.output || t.value;
                            }
                        }
                        push({
                            type: "brace",
                            value: G,
                            output: e
                        });
                        decrement("braces");
                        N.pop();
                        continue;
                    }
                    if (G === "|") {
                        if (w.length > 0) {
                            w[w.length - 1].conditions++;
                        }
                        push({
                            type: "text",
                            value: G
                        });
                        continue;
                    }
                    if (G === ",") {
                        let t = G;
                        const e = N[N.length - 1];
                        if (e && I[I.length - 1] === "braces") {
                            e.comma = true;
                            t = "|";
                        }
                        push({
                            type: "comma",
                            value: G,
                            output: t
                        });
                        continue;
                    }
                    if (G === "/") {
                        if (B.type === "dot" && m.index === m.start + 1) {
                            m.start = m.index + 1;
                            m.consumed = "";
                            m.output = "";
                            A.pop();
                            B = f;
                            continue;
                        }
                        push({
                            type: "slash",
                            value: G,
                            output: b
                        });
                        continue;
                    }
                    if (G === ".") {
                        if (m.braces > 0 && B.type === "dot") {
                            if (B.value === ".") B.output = h;
                            const t = N[N.length - 1];
                            B.type = "dots";
                            B.output += G;
                            B.value += G;
                            t.dots = true;
                            continue;
                        }
                        if (m.braces + m.parens === 0 && B.type !== "bos" && B.type !== "slash") {
                            push({
                                type: "text",
                                value: G,
                                output: h
                            });
                            continue;
                        }
                        push({
                            type: "dot",
                            value: G,
                            output: h
                        });
                        continue;
                    }
                    if (G === "?") {
                        const t = B && B.value === "(";
                        if (!t && u.noextglob !== true && D() === "(" && D(2) !== "?") {
                            extglobOpen("qmark", G);
                            continue;
                        }
                        if (B && B.type === "paren") {
                            const t = D();
                            let e = G;
                            if (B.value === "(" && !/[!=<:]/.test(t) || t === "<" && !/<([!=]|\w+>)/.test(remaining())) {
                                e = "\\".concat(G);
                            }
                            push({
                                type: "text",
                                value: G,
                                output: e
                            });
                            continue;
                        }
                        if (u.dot !== true && (B.type === "slash" || B.type === "bos")) {
                            push({
                                type: "qmark",
                                value: G,
                                output: v
                            });
                            continue;
                        }
                        push({
                            type: "qmark",
                            value: G,
                            output: H
                        });
                        continue;
                    }
                    if (G === "!") {
                        if (u.noextglob !== true && D() === "(") {
                            if (D(2) !== "?" || !/[!=<:]/.test(D(3))) {
                                extglobOpen("negate", G);
                                continue;
                            }
                        }
                        if (u.nonegate !== true && m.index === 0) {
                            negate();
                            continue;
                        }
                    }
                    if (G === "+") {
                        if (u.noextglob !== true && D() === "(" && D(2) !== "?") {
                            extglobOpen("plus", G);
                            continue;
                        }
                        if (B && B.value === "(" || u.regex === false) {
                            push({
                                type: "plus",
                                value: G,
                                output: g
                            });
                            continue;
                        }
                        if (B && (B.type === "bracket" || B.type === "paren" || B.type === "brace") || m.parens > 0) {
                            push({
                                type: "plus",
                                value: G
                            });
                            continue;
                        }
                        push({
                            type: "plus",
                            value: g
                        });
                        continue;
                    }
                    if (G === "@") {
                        if (u.noextglob !== true && D() === "(" && D(2) !== "?") {
                            push({
                                type: "at",
                                extglob: true,
                                value: G,
                                output: ""
                            });
                            continue;
                        }
                        push({
                            type: "text",
                            value: G
                        });
                        continue;
                    }
                    if (G !== "*") {
                        if (G === "$" || G === "^") {
                            G = "\\".concat(G);
                        }
                        const t = a.exec(remaining());
                        if (t) {
                            G += t[0];
                            m.index += t[0].length;
                        }
                        push({
                            type: "text",
                            value: G
                        });
                        continue;
                    }
                    if (B && (B.type === "globstar" || B.star === true)) {
                        B.type = "star";
                        B.star = true;
                        B.value += G;
                        B.output = k;
                        m.backtrack = true;
                        m.globstar = true;
                        consume(G);
                        continue;
                    }
                    let e = remaining();
                    if (u.noextglob !== true && /^\([^?]/.test(e)) {
                        extglobOpen("star", G);
                        continue;
                    }
                    if (B.type === "star") {
                        if (u.noglobstar === true) {
                            consume(G);
                            continue;
                        }
                        const n = B.prev;
                        const o = n.prev;
                        const s = n.type === "slash" || n.type === "bos";
                        const r = o && (o.type === "star" || o.type === "globstar");
                        if (u.bash === true && (!s || e[0] && e[0] !== "/")) {
                            push({
                                type: "star",
                                value: G,
                                output: ""
                            });
                            continue;
                        }
                        const a = m.braces > 0 && (n.type === "comma" || n.type === "brace");
                        const i = w.length && (n.type === "pipe" || n.type === "paren");
                        if (!s && n.type !== "paren" && !a && !i) {
                            push({
                                type: "star",
                                value: G,
                                output: ""
                            });
                            continue;
                        }
                        while(e.slice(0, 3) === "/**"){
                            const u = t[m.index + 4];
                            if (u && u !== "/") {
                                break;
                            }
                            e = e.slice(3);
                            consume("/**", 3);
                        }
                        if (n.type === "bos" && eos()) {
                            B.type = "globstar";
                            B.value += G;
                            B.output = globstar(u);
                            m.output = B.output;
                            m.globstar = true;
                            consume(G);
                            continue;
                        }
                        if (n.type === "slash" && n.prev.type !== "bos" && !r && eos()) {
                            m.output = m.output.slice(0, -(n.output + B.output).length);
                            n.output = "(?:".concat(n.output);
                            B.type = "globstar";
                            B.output = globstar(u) + (u.strictSlashes ? ")" : "|$)");
                            B.value += G;
                            m.globstar = true;
                            m.output += n.output + B.output;
                            consume(G);
                            continue;
                        }
                        if (n.type === "slash" && n.prev.type !== "bos" && e[0] === "/") {
                            const t = e[1] !== void 0 ? "|$" : "";
                            m.output = m.output.slice(0, -(n.output + B.output).length);
                            n.output = "(?:".concat(n.output);
                            B.type = "globstar";
                            B.output = "".concat(globstar(u)).concat(b, "|").concat(b).concat(t, ")");
                            B.value += G;
                            m.output += n.output + B.output;
                            m.globstar = true;
                            consume(G + M());
                            push({
                                type: "slash",
                                value: "/",
                                output: ""
                            });
                            continue;
                        }
                        if (n.type === "bos" && e[0] === "/") {
                            B.type = "globstar";
                            B.value += G;
                            B.output = "(?:^|".concat(b, "|").concat(globstar(u)).concat(b, ")");
                            m.output = B.output;
                            m.globstar = true;
                            consume(G + M());
                            push({
                                type: "slash",
                                value: "/",
                                output: ""
                            });
                            continue;
                        }
                        m.output = m.output.slice(0, -B.output.length);
                        B.type = "globstar";
                        B.output = globstar(u);
                        B.value += G;
                        m.output += B.output;
                        m.globstar = true;
                        consume(G);
                        continue;
                    }
                    const n = {
                        type: "star",
                        value: G,
                        output: k
                    };
                    if (u.bash === true) {
                        n.output = ".*?";
                        if (B.type === "bos" || B.type === "slash") {
                            n.output = T + n.output;
                        }
                        push(n);
                        continue;
                    }
                    if (B && (B.type === "bracket" || B.type === "paren") && u.regex === true) {
                        n.output = G;
                        push(n);
                        continue;
                    }
                    if (m.index === m.start || B.type === "slash" || B.type === "dot") {
                        if (B.type === "dot") {
                            m.output += x;
                            B.output += x;
                        } else if (u.dot === true) {
                            m.output += S;
                            B.output += S;
                        } else {
                            m.output += T;
                            B.output += T;
                        }
                        if (D() !== "*") {
                            m.output += C;
                            B.output += C;
                        }
                    }
                    push(n);
                }
                while(m.brackets > 0){
                    if (u.strictBrackets === true) throw new SyntaxError(syntaxError("closing", "]"));
                    m.output = o.escapeLast(m.output, "[");
                    decrement("brackets");
                }
                while(m.parens > 0){
                    if (u.strictBrackets === true) throw new SyntaxError(syntaxError("closing", ")"));
                    m.output = o.escapeLast(m.output, "(");
                    decrement("parens");
                }
                while(m.braces > 0){
                    if (u.strictBrackets === true) throw new SyntaxError(syntaxError("closing", "}"));
                    m.output = o.escapeLast(m.output, "{");
                    decrement("braces");
                }
                if (u.strictSlashes !== true && (B.type === "star" || B.type === "bracket")) {
                    push({
                        type: "maybe_slash",
                        value: "",
                        output: "".concat(b, "?")
                    });
                }
                if (m.backtrack === true) {
                    m.output = "";
                    for (const t of m.tokens){
                        m.output += t.output != null ? t.output : t.value;
                        if (t.suffix) {
                            m.output += t.suffix;
                        }
                    }
                }
                return m;
            };
            parse.fastpaths = (t, e)=>{
                const u = {
                    ...e
                };
                const r = typeof u.maxLength === "number" ? Math.min(s, u.maxLength) : s;
                const a = t.length;
                if (a > r) {
                    throw new SyntaxError("Input length: ".concat(a, ", exceeds maximum allowed length: ").concat(r));
                }
                t = c[t] || t;
                const { DOT_LITERAL: i, SLASH_LITERAL: p, ONE_CHAR: l, DOTS_SLASH: f, NO_DOT: A, NO_DOTS: _, NO_DOTS_SLASH: R, STAR: E, START_ANCHOR: h } = n.globChars(u.windows);
                const g = u.dot ? _ : A;
                const b = u.dot ? R : A;
                const C = u.capture ? "" : "?:";
                const y = {
                    negated: false,
                    prefix: ""
                };
                let $ = u.bash === true ? ".*?" : E;
                if (u.capture) {
                    $ = "(".concat($, ")");
                }
                const globstar = (t)=>{
                    if (t.noglobstar === true) return $;
                    return "(".concat(C, "(?:(?!").concat(h).concat(t.dot ? f : i, ").)*?)");
                };
                const create = (t)=>{
                    switch(t){
                        case "*":
                            return "".concat(g).concat(l).concat($);
                        case ".*":
                            return "".concat(i).concat(l).concat($);
                        case "*.*":
                            return "".concat(g).concat($).concat(i).concat(l).concat($);
                        case "*/*":
                            return "".concat(g).concat($).concat(p).concat(l).concat(b).concat($);
                        case "**":
                            return g + globstar(u);
                        case "**/*":
                            return "(?:".concat(g).concat(globstar(u)).concat(p, ")?").concat(b).concat(l).concat($);
                        case "**/*.*":
                            return "(?:".concat(g).concat(globstar(u)).concat(p, ")?").concat(b).concat($).concat(i).concat(l).concat($);
                        case "**/.*":
                            return "(?:".concat(g).concat(globstar(u)).concat(p, ")?").concat(i).concat(l).concat($);
                        default:
                            {
                                const e = /^(.*?)\.(\w+)$/.exec(t);
                                if (!e) return;
                                const u = create(e[1]);
                                if (!u) return;
                                return u + i + e[2];
                            }
                    }
                };
                const x = o.removePrefix(t, y);
                let S = create(x);
                if (S && u.strictSlashes !== true) {
                    S += "".concat(p, "?");
                }
                return S;
            };
            t.exports = parse;
        },
        510: (t, e, u)=>{
            const n = u(716);
            const o = u(697);
            const s = u(96);
            const r = u(154);
            const isObject = (t)=>t && typeof t === "object" && !Array.isArray(t);
            const picomatch = function(t, e) {
                let u = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false;
                if (Array.isArray(t)) {
                    const n = t.map((t)=>picomatch(t, e, u));
                    const arrayMatcher = (t)=>{
                        for (const e of n){
                            const u = e(t);
                            if (u) return u;
                        }
                        return false;
                    };
                    return arrayMatcher;
                }
                const n = isObject(t) && t.tokens && t.input;
                if (t === "" || typeof t !== "string" && !n) {
                    throw new TypeError("Expected pattern to be a non-empty string");
                }
                const o = e || {};
                const s = o.windows;
                const r = n ? picomatch.compileRe(t, e) : picomatch.makeRe(t, e, false, true);
                const a = r.state;
                delete r.state;
                let isIgnored = ()=>false;
                if (o.ignore) {
                    const t = {
                        ...e,
                        ignore: null,
                        onMatch: null,
                        onResult: null
                    };
                    isIgnored = picomatch(o.ignore, t, u);
                }
                const matcher = function(u) {
                    let n = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;
                    const { isMatch: i, match: c, output: p } = picomatch.test(u, r, e, {
                        glob: t,
                        posix: s
                    });
                    const l = {
                        glob: t,
                        state: a,
                        regex: r,
                        posix: s,
                        input: u,
                        output: p,
                        match: c,
                        isMatch: i
                    };
                    if (typeof o.onResult === "function") {
                        o.onResult(l);
                    }
                    if (i === false) {
                        l.isMatch = false;
                        return n ? l : false;
                    }
                    if (isIgnored(u)) {
                        if (typeof o.onIgnore === "function") {
                            o.onIgnore(l);
                        }
                        l.isMatch = false;
                        return n ? l : false;
                    }
                    if (typeof o.onMatch === "function") {
                        o.onMatch(l);
                    }
                    return n ? l : true;
                };
                if (u) {
                    matcher.state = a;
                }
                return matcher;
            };
            picomatch.test = function(t, e, u) {
                let { glob: n, posix: o } = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {};
                if (typeof t !== "string") {
                    throw new TypeError("Expected input to be a string");
                }
                if (t === "") {
                    return {
                        isMatch: false,
                        output: ""
                    };
                }
                const r = u || {};
                const a = r.format || (o ? s.toPosixSlashes : null);
                let i = t === n;
                let c = i && a ? a(t) : t;
                if (i === false) {
                    c = a ? a(t) : t;
                    i = c === n;
                }
                if (i === false || r.capture === true) {
                    if (r.matchBase === true || r.basename === true) {
                        i = picomatch.matchBase(t, e, u, o);
                    } else {
                        i = e.exec(c);
                    }
                }
                return {
                    isMatch: Boolean(i),
                    match: i,
                    output: c
                };
            };
            picomatch.matchBase = (t, e, u)=>{
                const n = e instanceof RegExp ? e : picomatch.makeRe(e, u);
                return n.test(s.basename(t));
            };
            picomatch.isMatch = (t, e, u)=>picomatch(e, u)(t);
            picomatch.parse = (t, e)=>{
                if (Array.isArray(t)) return t.map((t)=>picomatch.parse(t, e));
                return o(t, {
                    ...e,
                    fastpaths: false
                });
            };
            picomatch.scan = (t, e)=>n(t, e);
            picomatch.compileRe = function(t, e) {
                let u = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false, n = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : false;
                if (u === true) {
                    return t.output;
                }
                const o = e || {};
                const s = o.contains ? "" : "^";
                const r = o.contains ? "" : "$";
                let a = "".concat(s, "(?:").concat(t.output, ")").concat(r);
                if (t && t.negated === true) {
                    a = "^(?!".concat(a, ").*$");
                }
                const i = picomatch.toRegex(a, e);
                if (n === true) {
                    i.state = t;
                }
                return i;
            };
            picomatch.makeRe = function(t) {
                let e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, u = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : false, n = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : false;
                if (!t || typeof t !== "string") {
                    throw new TypeError("Expected a non-empty string");
                }
                let s = {
                    negated: false,
                    fastpaths: true
                };
                if (e.fastpaths !== false && (t[0] === "." || t[0] === "*")) {
                    s.output = o.fastpaths(t, e);
                }
                if (!s.output) {
                    s = o(t, e);
                }
                return picomatch.compileRe(s, e, u, n);
            };
            picomatch.toRegex = (t, e)=>{
                try {
                    const u = e || {};
                    return new RegExp(t, u.flags || (u.nocase ? "i" : ""));
                } catch (t) {
                    if (e && e.debug === true) throw t;
                    return /$^/;
                }
            };
            picomatch.constants = r;
            t.exports = picomatch;
        },
        716: (t, e, u)=>{
            const n = u(96);
            const { CHAR_ASTERISK: o, CHAR_AT: s, CHAR_BACKWARD_SLASH: r, CHAR_COMMA: a, CHAR_DOT: i, CHAR_EXCLAMATION_MARK: c, CHAR_FORWARD_SLASH: p, CHAR_LEFT_CURLY_BRACE: l, CHAR_LEFT_PARENTHESES: f, CHAR_LEFT_SQUARE_BRACKET: A, CHAR_PLUS: _, CHAR_QUESTION_MARK: R, CHAR_RIGHT_CURLY_BRACE: E, CHAR_RIGHT_PARENTHESES: h, CHAR_RIGHT_SQUARE_BRACKET: g } = u(154);
            const isPathSeparator = (t)=>t === p || t === r;
            const depth = (t)=>{
                if (t.isPrefix !== true) {
                    t.depth = t.isGlobstar ? Infinity : 1;
                }
            };
            const scan = (t, e)=>{
                const u = e || {};
                const b = t.length - 1;
                const C = u.parts === true || u.scanToEnd === true;
                const y = [];
                const $ = [];
                const x = [];
                let S = t;
                let H = -1;
                let v = 0;
                let d = 0;
                let L = false;
                let T = false;
                let O = false;
                let k = false;
                let m = false;
                let w = false;
                let N = false;
                let I = false;
                let B = false;
                let G = false;
                let D = 0;
                let M;
                let P;
                let K = {
                    value: "",
                    depth: 0,
                    isGlob: false
                };
                const eos = ()=>H >= b;
                const peek = ()=>S.charCodeAt(H + 1);
                const advance = ()=>{
                    M = P;
                    return S.charCodeAt(++H);
                };
                while(H < b){
                    P = advance();
                    let t;
                    if (P === r) {
                        N = K.backslashes = true;
                        P = advance();
                        if (P === l) {
                            w = true;
                        }
                        continue;
                    }
                    if (w === true || P === l) {
                        D++;
                        while(eos() !== true && (P = advance())){
                            if (P === r) {
                                N = K.backslashes = true;
                                advance();
                                continue;
                            }
                            if (P === l) {
                                D++;
                                continue;
                            }
                            if (w !== true && P === i && (P = advance()) === i) {
                                L = K.isBrace = true;
                                O = K.isGlob = true;
                                G = true;
                                if (C === true) {
                                    continue;
                                }
                                break;
                            }
                            if (w !== true && P === a) {
                                L = K.isBrace = true;
                                O = K.isGlob = true;
                                G = true;
                                if (C === true) {
                                    continue;
                                }
                                break;
                            }
                            if (P === E) {
                                D--;
                                if (D === 0) {
                                    w = false;
                                    L = K.isBrace = true;
                                    G = true;
                                    break;
                                }
                            }
                        }
                        if (C === true) {
                            continue;
                        }
                        break;
                    }
                    if (P === p) {
                        y.push(H);
                        $.push(K);
                        K = {
                            value: "",
                            depth: 0,
                            isGlob: false
                        };
                        if (G === true) continue;
                        if (M === i && H === v + 1) {
                            v += 2;
                            continue;
                        }
                        d = H + 1;
                        continue;
                    }
                    if (u.noext !== true) {
                        const t = P === _ || P === s || P === o || P === R || P === c;
                        if (t === true && peek() === f) {
                            O = K.isGlob = true;
                            k = K.isExtglob = true;
                            G = true;
                            if (P === c && H === v) {
                                B = true;
                            }
                            if (C === true) {
                                while(eos() !== true && (P = advance())){
                                    if (P === r) {
                                        N = K.backslashes = true;
                                        P = advance();
                                        continue;
                                    }
                                    if (P === h) {
                                        O = K.isGlob = true;
                                        G = true;
                                        break;
                                    }
                                }
                                continue;
                            }
                            break;
                        }
                    }
                    if (P === o) {
                        if (M === o) m = K.isGlobstar = true;
                        O = K.isGlob = true;
                        G = true;
                        if (C === true) {
                            continue;
                        }
                        break;
                    }
                    if (P === R) {
                        O = K.isGlob = true;
                        G = true;
                        if (C === true) {
                            continue;
                        }
                        break;
                    }
                    if (P === A) {
                        while(eos() !== true && (t = advance())){
                            if (t === r) {
                                N = K.backslashes = true;
                                advance();
                                continue;
                            }
                            if (t === g) {
                                T = K.isBracket = true;
                                O = K.isGlob = true;
                                G = true;
                                break;
                            }
                        }
                        if (C === true) {
                            continue;
                        }
                        break;
                    }
                    if (u.nonegate !== true && P === c && H === v) {
                        I = K.negated = true;
                        v++;
                        continue;
                    }
                    if (u.noparen !== true && P === f) {
                        O = K.isGlob = true;
                        if (C === true) {
                            while(eos() !== true && (P = advance())){
                                if (P === f) {
                                    N = K.backslashes = true;
                                    P = advance();
                                    continue;
                                }
                                if (P === h) {
                                    G = true;
                                    break;
                                }
                            }
                            continue;
                        }
                        break;
                    }
                    if (O === true) {
                        G = true;
                        if (C === true) {
                            continue;
                        }
                        break;
                    }
                }
                if (u.noext === true) {
                    k = false;
                    O = false;
                }
                let U = S;
                let X = "";
                let F = "";
                if (v > 0) {
                    X = S.slice(0, v);
                    S = S.slice(v);
                    d -= v;
                }
                if (U && O === true && d > 0) {
                    U = S.slice(0, d);
                    F = S.slice(d);
                } else if (O === true) {
                    U = "";
                    F = S;
                } else {
                    U = S;
                }
                if (U && U !== "" && U !== "/" && U !== S) {
                    if (isPathSeparator(U.charCodeAt(U.length - 1))) {
                        U = U.slice(0, -1);
                    }
                }
                if (u.unescape === true) {
                    if (F) F = n.removeBackslashes(F);
                    if (U && N === true) {
                        U = n.removeBackslashes(U);
                    }
                }
                const Q = {
                    prefix: X,
                    input: t,
                    start: v,
                    base: U,
                    glob: F,
                    isBrace: L,
                    isBracket: T,
                    isGlob: O,
                    isExtglob: k,
                    isGlobstar: m,
                    negated: I,
                    negatedExtglob: B
                };
                if (u.tokens === true) {
                    Q.maxDepth = 0;
                    if (!isPathSeparator(P)) {
                        $.push(K);
                    }
                    Q.tokens = $;
                }
                if (u.parts === true || u.tokens === true) {
                    let e;
                    for(let n = 0; n < y.length; n++){
                        const o = e ? e + 1 : v;
                        const s = y[n];
                        const r = t.slice(o, s);
                        if (u.tokens) {
                            if (n === 0 && v !== 0) {
                                $[n].isPrefix = true;
                                $[n].value = X;
                            } else {
                                $[n].value = r;
                            }
                            depth($[n]);
                            Q.maxDepth += $[n].depth;
                        }
                        if (n !== 0 || r !== "") {
                            x.push(r);
                        }
                        e = s;
                    }
                    if (e && e + 1 < t.length) {
                        const n = t.slice(e + 1);
                        x.push(n);
                        if (u.tokens) {
                            $[$.length - 1].value = n;
                            depth($[$.length - 1]);
                            Q.maxDepth += $[$.length - 1].depth;
                        }
                    }
                    Q.slashes = y;
                    Q.parts = x;
                }
                return Q;
            };
            t.exports = scan;
        },
        96: (t, e, u)=>{
            const { REGEX_BACKSLASH: n, REGEX_REMOVE_BACKSLASH: o, REGEX_SPECIAL_CHARS: s, REGEX_SPECIAL_CHARS_GLOBAL: r } = u(154);
            e.isObject = (t)=>t !== null && typeof t === "object" && !Array.isArray(t);
            e.hasRegexChars = (t)=>s.test(t);
            e.isRegexChar = (t)=>t.length === 1 && e.hasRegexChars(t);
            e.escapeRegex = (t)=>t.replace(r, "\\$1");
            e.toPosixSlashes = (t)=>t.replace(n, "/");
            e.removeBackslashes = (t)=>t.replace(o, (t)=>t === "\\" ? "" : t);
            e.escapeLast = (t, u, n)=>{
                const o = t.lastIndexOf(u, n);
                if (o === -1) return t;
                if (t[o - 1] === "\\") return e.escapeLast(t, u, o - 1);
                return "".concat(t.slice(0, o), "\\").concat(t.slice(o));
            };
            e.removePrefix = function(t) {
                let e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                let u = t;
                if (u.startsWith("./")) {
                    u = u.slice(2);
                    e.prefix = "./";
                }
                return u;
            };
            e.wrapOutput = function(t) {
                let e = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, u = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
                const n = u.contains ? "" : "^";
                const o = u.contains ? "" : "$";
                let s = "".concat(n, "(?:").concat(t, ")").concat(o);
                if (e.negated === true) {
                    s = "(?:^(?!".concat(s, ").*$)");
                }
                return s;
            };
            e.basename = function(t) {
                let { windows: e } = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                const u = t.split(e ? /[\\/]/ : "/");
                const n = u[u.length - 1];
                if (n === "") {
                    return u[u.length - 2];
                }
                return n;
            };
        }
    };
    var e = {};
    function __nccwpck_require__(u) {
        var n = e[u];
        if (n !== undefined) {
            return n.exports;
        }
        var o = e[u] = {
            exports: {}
        };
        var s = true;
        try {
            t[u](o, o.exports, __nccwpck_require__);
            s = false;
        } finally{
            if (s) delete e[u];
        }
        return o.exports;
    }
    if (typeof __nccwpck_require__ !== "undefined") __nccwpck_require__.ab = ("TURBOPACK compile-time value", "/ROOT/node_modules/next/dist/compiled/picomatch") + "/";
    var u = __nccwpck_require__(170);
    module.exports = u;
})();
}),
"[project]/node_modules/next/dist/shared/lib/match-local-pattern.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    hasLocalMatch: null,
    matchLocalPattern: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    hasLocalMatch: function() {
        return hasLocalMatch;
    },
    matchLocalPattern: function() {
        return matchLocalPattern;
    }
});
const _picomatch = __turbopack_context__.r("[project]/node_modules/next/dist/compiled/picomatch/index.js [app-client] (ecmascript)");
function matchLocalPattern(pattern, url) {
    if (pattern.search !== undefined) {
        if (pattern.search !== url.search) {
            return false;
        }
    }
    var _pattern_pathname;
    if (!(0, _picomatch.makeRe)((_pattern_pathname = pattern.pathname) != null ? _pattern_pathname : '**', {
        dot: true
    }).test(url.pathname)) {
        return false;
    }
    return true;
}
function hasLocalMatch(localPatterns, urlPathAndQuery) {
    if (!localPatterns) {
        // if the user didn't define "localPatterns", we allow all local images
        return true;
    }
    const url = new URL(urlPathAndQuery, 'http://n');
    return localPatterns.some((p)=>matchLocalPattern(p, url));
} //# sourceMappingURL=match-local-pattern.js.map
}),
"[project]/node_modules/next/dist/shared/lib/match-remote-pattern.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    hasRemoteMatch: null,
    matchRemotePattern: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    hasRemoteMatch: function() {
        return hasRemoteMatch;
    },
    matchRemotePattern: function() {
        return matchRemotePattern;
    }
});
const _picomatch = __turbopack_context__.r("[project]/node_modules/next/dist/compiled/picomatch/index.js [app-client] (ecmascript)");
function matchRemotePattern(pattern, url) {
    if (pattern.protocol !== undefined) {
        if (pattern.protocol.replace(/:$/, '') !== url.protocol.replace(/:$/, '')) {
            return false;
        }
    }
    if (pattern.port !== undefined) {
        if (pattern.port !== url.port) {
            return false;
        }
    }
    if (pattern.hostname === undefined) {
        throw Object.defineProperty(new Error("Pattern should define hostname but found\n" + JSON.stringify(pattern)), "__NEXT_ERROR_CODE", {
            value: "E410",
            enumerable: false,
            configurable: true
        });
    } else {
        if (!(0, _picomatch.makeRe)(pattern.hostname).test(url.hostname)) {
            return false;
        }
    }
    if (pattern.search !== undefined) {
        if (pattern.search !== url.search) {
            return false;
        }
    }
    var _pattern_pathname;
    // Should be the same as writeImagesManifest()
    if (!(0, _picomatch.makeRe)((_pattern_pathname = pattern.pathname) != null ? _pattern_pathname : '**', {
        dot: true
    }).test(url.pathname)) {
        return false;
    }
    return true;
}
function hasRemoteMatch(domains, remotePatterns, url) {
    return domains.some((domain)=>url.hostname === domain) || remotePatterns.some((p)=>matchRemotePattern(p, url));
} //# sourceMappingURL=match-remote-pattern.js.map
}),
"[project]/node_modules/next/dist/shared/lib/image-loader.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "default", {
    enumerable: true,
    get: function() {
        return _default;
    }
});
const DEFAULT_Q = 75;
function defaultLoader(param) {
    let { config, src, width, quality } = param;
    var _config_qualities;
    if ("TURBOPACK compile-time truthy", 1) {
        const missingValues = [];
        // these should always be provided but make sure they are
        if (!src) missingValues.push('src');
        if (!width) missingValues.push('width');
        if (missingValues.length > 0) {
            throw Object.defineProperty(new Error("Next Image Optimization requires " + missingValues.join(', ') + " to be provided. Make sure you pass them as props to the `next/image` component. Received: " + JSON.stringify({
                src,
                width,
                quality
            })), "__NEXT_ERROR_CODE", {
                value: "E188",
                enumerable: false,
                configurable: true
            });
        }
        if (src.startsWith('//')) {
            throw Object.defineProperty(new Error('Failed to parse src "' + src + '" on `next/image`, protocol-relative URL (//) must be changed to an absolute URL (http:// or https://)'), "__NEXT_ERROR_CODE", {
                value: "E360",
                enumerable: false,
                configurable: true
            });
        }
        if (src.startsWith('/') && config.localPatterns) {
            if ("TURBOPACK compile-time truthy", 1) {
                // We use dynamic require because this should only error in development
                const { hasLocalMatch } = __turbopack_context__.r("[project]/node_modules/next/dist/shared/lib/match-local-pattern.js [app-client] (ecmascript)");
                if (!hasLocalMatch(config.localPatterns, src)) {
                    throw Object.defineProperty(new Error("Invalid src prop (" + src + ") on `next/image` does not match `images.localPatterns` configured in your `next.config.js`\n" + "See more info: https://nextjs.org/docs/messages/next-image-unconfigured-localpatterns"), "__NEXT_ERROR_CODE", {
                        value: "E426",
                        enumerable: false,
                        configurable: true
                    });
                }
            }
        }
        if (!src.startsWith('/') && (config.domains || config.remotePatterns)) {
            let parsedSrc;
            try {
                parsedSrc = new URL(src);
            } catch (err) {
                console.error(err);
                throw Object.defineProperty(new Error('Failed to parse src "' + src + '" on `next/image`, if using relative image it must start with a leading slash "/" or be an absolute URL (http:// or https://)'), "__NEXT_ERROR_CODE", {
                    value: "E63",
                    enumerable: false,
                    configurable: true
                });
            }
            if ("TURBOPACK compile-time truthy", 1) {
                // We use dynamic require because this should only error in development
                const { hasRemoteMatch } = __turbopack_context__.r("[project]/node_modules/next/dist/shared/lib/match-remote-pattern.js [app-client] (ecmascript)");
                if (!hasRemoteMatch(config.domains, config.remotePatterns, parsedSrc)) {
                    throw Object.defineProperty(new Error("Invalid src prop (" + src + ') on `next/image`, hostname "' + parsedSrc.hostname + '" is not configured under images in your `next.config.js`\n' + "See more info: https://nextjs.org/docs/messages/next-image-unconfigured-host"), "__NEXT_ERROR_CODE", {
                        value: "E231",
                        enumerable: false,
                        configurable: true
                    });
                }
            }
        }
        if (quality && config.qualities && !config.qualities.includes(quality)) {
            throw Object.defineProperty(new Error("Invalid quality prop (" + quality + ") on `next/image` does not match `images.qualities` configured in your `next.config.js`\n" + "See more info: https://nextjs.org/docs/messages/next-image-unconfigured-qualities"), "__NEXT_ERROR_CODE", {
                value: "E623",
                enumerable: false,
                configurable: true
            });
        }
    }
    const q = quality || ((_config_qualities = config.qualities) == null ? void 0 : _config_qualities.reduce((prev, cur)=>Math.abs(cur - DEFAULT_Q) < Math.abs(prev - DEFAULT_Q) ? cur : prev)) || DEFAULT_Q;
    return config.path + "?url=" + encodeURIComponent(src) + "&w=" + width + "&q=" + q + (src.startsWith('/_next/static/media/') && ("TURBOPACK compile-time value", false) ? "TURBOPACK unreachable" : '');
}
// We use this to determine if the import is the default loader
// or a custom loader defined by the user in next.config.js
defaultLoader.__next_img_default = true;
const _default = defaultLoader; //# sourceMappingURL=image-loader.js.map
}),
"[project]/node_modules/next/dist/client/use-merged-ref.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "useMergedRef", {
    enumerable: true,
    get: function() {
        return useMergedRef;
    }
});
const _react = __turbopack_context__.r("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
function useMergedRef(refA, refB) {
    const cleanupA = (0, _react.useRef)(null);
    const cleanupB = (0, _react.useRef)(null);
    // NOTE: In theory, we could skip the wrapping if only one of the refs is non-null.
    // (this happens often if the user doesn't pass a ref to Link/Form/Image)
    // But this can cause us to leak a cleanup-ref into user code (e.g. via `<Link legacyBehavior>`),
    // and the user might pass that ref into ref-merging library that doesn't support cleanup refs
    // (because it hasn't been updated for React 19)
    // which can then cause things to blow up, because a cleanup-returning ref gets called with `null`.
    // So in practice, it's safer to be defensive and always wrap the ref, even on React 19.
    return (0, _react.useCallback)((current)=>{
        if (current === null) {
            const cleanupFnA = cleanupA.current;
            if (cleanupFnA) {
                cleanupA.current = null;
                cleanupFnA();
            }
            const cleanupFnB = cleanupB.current;
            if (cleanupFnB) {
                cleanupB.current = null;
                cleanupFnB();
            }
        } else {
            if (refA) {
                cleanupA.current = applyRef(refA, current);
            }
            if (refB) {
                cleanupB.current = applyRef(refB, current);
            }
        }
    }, [
        refA,
        refB
    ]);
}
function applyRef(refA, current) {
    if (typeof refA === 'function') {
        const cleanup = refA(current);
        if (typeof cleanup === 'function') {
            return cleanup;
        } else {
            return ()=>refA(null);
        }
    } else {
        refA.current = current;
        return ()=>{
            refA.current = null;
        };
    }
}
if ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {
    Object.defineProperty(exports.default, '__esModule', {
        value: true
    });
    Object.assign(exports.default, exports);
    module.exports = exports.default;
} //# sourceMappingURL=use-merged-ref.js.map
}),
"[project]/node_modules/next/dist/client/image-component.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
'use client';
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
Object.defineProperty(exports, "Image", {
    enumerable: true,
    get: function() {
        return Image;
    }
});
const _interop_require_default = __turbopack_context__.r("[project]/node_modules/@swc/helpers/cjs/_interop_require_default.cjs [app-client] (ecmascript)");
const _interop_require_wildcard = __turbopack_context__.r("[project]/node_modules/@swc/helpers/cjs/_interop_require_wildcard.cjs [app-client] (ecmascript)");
const _jsxruntime = __turbopack_context__.r("[project]/node_modules/next/dist/compiled/react/jsx-runtime.js [app-client] (ecmascript)");
const _react = /*#__PURE__*/ _interop_require_wildcard._(__turbopack_context__.r("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)"));
const _reactdom = /*#__PURE__*/ _interop_require_default._(__turbopack_context__.r("[project]/node_modules/next/dist/compiled/react-dom/index.js [app-client] (ecmascript)"));
const _head = /*#__PURE__*/ _interop_require_default._(__turbopack_context__.r("[project]/node_modules/next/dist/shared/lib/head.js [app-client] (ecmascript)"));
const _getimgprops = __turbopack_context__.r("[project]/node_modules/next/dist/shared/lib/get-img-props.js [app-client] (ecmascript)");
const _imageconfig = __turbopack_context__.r("[project]/node_modules/next/dist/shared/lib/image-config.js [app-client] (ecmascript)");
const _imageconfigcontextsharedruntime = __turbopack_context__.r("[project]/node_modules/next/dist/shared/lib/image-config-context.shared-runtime.js [app-client] (ecmascript)");
const _warnonce = __turbopack_context__.r("[project]/node_modules/next/dist/shared/lib/utils/warn-once.js [app-client] (ecmascript)");
const _routercontextsharedruntime = __turbopack_context__.r("[project]/node_modules/next/dist/shared/lib/router-context.shared-runtime.js [app-client] (ecmascript)");
const _imageloader = /*#__PURE__*/ _interop_require_default._(__turbopack_context__.r("[project]/node_modules/next/dist/shared/lib/image-loader.js [app-client] (ecmascript)"));
const _usemergedref = __turbopack_context__.r("[project]/node_modules/next/dist/client/use-merged-ref.js [app-client] (ecmascript)");
// This is replaced by webpack define plugin
const configEnv = ("TURBOPACK compile-time value", {
    "deviceSizes": ("TURBOPACK compile-time value", [
        ("TURBOPACK compile-time value", 640),
        ("TURBOPACK compile-time value", 750),
        ("TURBOPACK compile-time value", 828),
        ("TURBOPACK compile-time value", 1080),
        ("TURBOPACK compile-time value", 1200),
        ("TURBOPACK compile-time value", 1920),
        ("TURBOPACK compile-time value", 2048),
        ("TURBOPACK compile-time value", 3840)
    ]),
    "imageSizes": ("TURBOPACK compile-time value", [
        ("TURBOPACK compile-time value", 16),
        ("TURBOPACK compile-time value", 32),
        ("TURBOPACK compile-time value", 48),
        ("TURBOPACK compile-time value", 64),
        ("TURBOPACK compile-time value", 96),
        ("TURBOPACK compile-time value", 128),
        ("TURBOPACK compile-time value", 256),
        ("TURBOPACK compile-time value", 384)
    ]),
    "path": ("TURBOPACK compile-time value", "/_next/image"),
    "loader": ("TURBOPACK compile-time value", "default"),
    "dangerouslyAllowSVG": ("TURBOPACK compile-time value", false),
    "unoptimized": ("TURBOPACK compile-time value", false),
    "domains": ("TURBOPACK compile-time value", []),
    "remotePatterns": ("TURBOPACK compile-time value", [])
});
if (typeof window === 'undefined') {
    ;
    globalThis.__NEXT_IMAGE_IMPORTED = true;
}
// See https://stackoverflow.com/q/39777833/266535 for why we use this ref
// handler instead of the img's onLoad attribute.
function handleLoading(img, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized, sizesInput) {
    const src = img == null ? void 0 : img.src;
    if (!img || img['data-loaded-src'] === src) {
        return;
    }
    img['data-loaded-src'] = src;
    const p = 'decode' in img ? img.decode() : Promise.resolve();
    p.catch(()=>{}).then(()=>{
        if (!img.parentElement || !img.isConnected) {
            // Exit early in case of race condition:
            // - onload() is called
            // - decode() is called but incomplete
            // - unmount is called
            // - decode() completes
            return;
        }
        if (placeholder !== 'empty') {
            setBlurComplete(true);
        }
        if (onLoadRef == null ? void 0 : onLoadRef.current) {
            // Since we don't have the SyntheticEvent here,
            // we must create one with the same shape.
            // See https://reactjs.org/docs/events.html
            const event = new Event('load');
            Object.defineProperty(event, 'target', {
                writable: false,
                value: img
            });
            let prevented = false;
            let stopped = false;
            onLoadRef.current({
                ...event,
                nativeEvent: event,
                currentTarget: img,
                target: img,
                isDefaultPrevented: ()=>prevented,
                isPropagationStopped: ()=>stopped,
                persist: ()=>{},
                preventDefault: ()=>{
                    prevented = true;
                    event.preventDefault();
                },
                stopPropagation: ()=>{
                    stopped = true;
                    event.stopPropagation();
                }
            });
        }
        if (onLoadingCompleteRef == null ? void 0 : onLoadingCompleteRef.current) {
            onLoadingCompleteRef.current(img);
        }
        if ("TURBOPACK compile-time truthy", 1) {
            const origSrc = new URL(src, 'http://n').searchParams.get('url') || src;
            if (img.getAttribute('data-nimg') === 'fill') {
                if (!unoptimized && (!sizesInput || sizesInput === '100vw')) {
                    let widthViewportRatio = img.getBoundingClientRect().width / window.innerWidth;
                    if (widthViewportRatio < 0.6) {
                        if (sizesInput === '100vw') {
                            (0, _warnonce.warnOnce)('Image with src "' + origSrc + '" has "fill" prop and "sizes" prop of "100vw", but image is not rendered at full viewport width. Please adjust "sizes" to improve page performance. Read more: https://nextjs.org/docs/api-reference/next/image#sizes');
                        } else {
                            (0, _warnonce.warnOnce)('Image with src "' + origSrc + '" has "fill" but is missing "sizes" prop. Please add it to improve page performance. Read more: https://nextjs.org/docs/api-reference/next/image#sizes');
                        }
                    }
                }
                if (img.parentElement) {
                    const { position } = window.getComputedStyle(img.parentElement);
                    const valid = [
                        'absolute',
                        'fixed',
                        'relative'
                    ];
                    if (!valid.includes(position)) {
                        (0, _warnonce.warnOnce)('Image with src "' + origSrc + '" has "fill" and parent element with invalid "position". Provided "' + position + '" should be one of ' + valid.map(String).join(',') + ".");
                    }
                }
                if (img.height === 0) {
                    (0, _warnonce.warnOnce)('Image with src "' + origSrc + '" has "fill" and a height value of 0. This is likely because the parent element of the image has not been styled to have a set height.');
                }
            }
            const heightModified = img.height.toString() !== img.getAttribute('height');
            const widthModified = img.width.toString() !== img.getAttribute('width');
            if (heightModified && !widthModified || !heightModified && widthModified) {
                (0, _warnonce.warnOnce)('Image with src "' + origSrc + '" has either width or height modified, but not the other. If you use CSS to change the size of your image, also include the styles \'width: "auto"\' or \'height: "auto"\' to maintain the aspect ratio.');
            }
        }
    });
}
function getDynamicProps(fetchPriority) {
    if (Boolean(_react.use)) {
        // In React 19.0.0 or newer, we must use camelCase
        // prop to avoid "Warning: Invalid DOM property".
        // See https://github.com/facebook/react/pull/25927
        return {
            fetchPriority
        };
    }
    // In React 18.2.0 or older, we must use lowercase prop
    // to avoid "Warning: Invalid DOM property".
    return {
        fetchpriority: fetchPriority
    };
}
const ImageElement = /*#__PURE__*/ (0, _react.forwardRef)((param, forwardedRef)=>{
    let { src, srcSet, sizes, height, width, decoding, className, style, fetchPriority, placeholder, loading, unoptimized, fill, onLoadRef, onLoadingCompleteRef, setBlurComplete, setShowAltText, sizesInput, onLoad, onError, ...rest } = param;
    const ownRef = (0, _react.useCallback)((img)=>{
        if (!img) {
            return;
        }
        if (onError) {
            // If the image has an error before react hydrates, then the error is lost.
            // The workaround is to wait until the image is mounted which is after hydration,
            // then we set the src again to trigger the error handler (if there was an error).
            // eslint-disable-next-line no-self-assign
            img.src = img.src;
        }
        if ("TURBOPACK compile-time truthy", 1) {
            if (!src) {
                console.error('Image is missing required "src" property:', img);
            }
            if (img.getAttribute('alt') === null) {
                console.error('Image is missing required "alt" property. Please add Alternative Text to describe the image for screen readers and search engines.');
            }
        }
        if (img.complete) {
            handleLoading(img, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized, sizesInput);
        }
    }, [
        src,
        placeholder,
        onLoadRef,
        onLoadingCompleteRef,
        setBlurComplete,
        onError,
        unoptimized,
        sizesInput
    ]);
    const ref = (0, _usemergedref.useMergedRef)(forwardedRef, ownRef);
    return /*#__PURE__*/ (0, _jsxruntime.jsx)("img", {
        ...rest,
        ...getDynamicProps(fetchPriority),
        // It's intended to keep `loading` before `src` because React updates
        // props in order which causes Safari/Firefox to not lazy load properly.
        // See https://github.com/facebook/react/issues/25883
        loading: loading,
        width: width,
        height: height,
        decoding: decoding,
        "data-nimg": fill ? 'fill' : '1',
        className: className,
        style: style,
        // It's intended to keep `src` the last attribute because React updates
        // attributes in order. If we keep `src` the first one, Safari will
        // immediately start to fetch `src`, before `sizes` and `srcSet` are even
        // updated by React. That causes multiple unnecessary requests if `srcSet`
        // and `sizes` are defined.
        // This bug cannot be reproduced in Chrome or Firefox.
        sizes: sizes,
        srcSet: srcSet,
        src: src,
        ref: ref,
        onLoad: (event)=>{
            const img = event.currentTarget;
            handleLoading(img, placeholder, onLoadRef, onLoadingCompleteRef, setBlurComplete, unoptimized, sizesInput);
        },
        onError: (event)=>{
            // if the real image fails to load, this will ensure "alt" is visible
            setShowAltText(true);
            if (placeholder !== 'empty') {
                // If the real image fails to load, this will still remove the placeholder.
                setBlurComplete(true);
            }
            if (onError) {
                onError(event);
            }
        }
    });
});
function ImagePreload(param) {
    let { isAppRouter, imgAttributes } = param;
    const opts = {
        as: 'image',
        imageSrcSet: imgAttributes.srcSet,
        imageSizes: imgAttributes.sizes,
        crossOrigin: imgAttributes.crossOrigin,
        referrerPolicy: imgAttributes.referrerPolicy,
        ...getDynamicProps(imgAttributes.fetchPriority)
    };
    if (isAppRouter && _reactdom.default.preload) {
        _reactdom.default.preload(imgAttributes.src, opts);
        return null;
    }
    return /*#__PURE__*/ (0, _jsxruntime.jsx)(_head.default, {
        children: /*#__PURE__*/ (0, _jsxruntime.jsx)("link", {
            rel: "preload",
            // Note how we omit the `href` attribute, as it would only be relevant
            // for browsers that do not support `imagesrcset`, and in those cases
            // it would cause the incorrect image to be preloaded.
            //
            // https://html.spec.whatwg.org/multipage/semantics.html#attr-link-imagesrcset
            href: imgAttributes.srcSet ? undefined : imgAttributes.src,
            ...opts
        }, '__nimg-' + imgAttributes.src + imgAttributes.srcSet + imgAttributes.sizes)
    });
}
const Image = /*#__PURE__*/ (0, _react.forwardRef)((props, forwardedRef)=>{
    const pagesRouter = (0, _react.useContext)(_routercontextsharedruntime.RouterContext);
    // We're in the app directory if there is no pages router.
    const isAppRouter = !pagesRouter;
    const configContext = (0, _react.useContext)(_imageconfigcontextsharedruntime.ImageConfigContext);
    const config = (0, _react.useMemo)(()=>{
        var _c_qualities;
        const c = configEnv || configContext || _imageconfig.imageConfigDefault;
        const allSizes = [
            ...c.deviceSizes,
            ...c.imageSizes
        ].sort((a, b)=>a - b);
        const deviceSizes = c.deviceSizes.sort((a, b)=>a - b);
        const qualities = (_c_qualities = c.qualities) == null ? void 0 : _c_qualities.sort((a, b)=>a - b);
        return {
            ...c,
            allSizes,
            deviceSizes,
            qualities
        };
    }, [
        configContext
    ]);
    const { onLoad, onLoadingComplete } = props;
    const onLoadRef = (0, _react.useRef)(onLoad);
    (0, _react.useEffect)(()=>{
        onLoadRef.current = onLoad;
    }, [
        onLoad
    ]);
    const onLoadingCompleteRef = (0, _react.useRef)(onLoadingComplete);
    (0, _react.useEffect)(()=>{
        onLoadingCompleteRef.current = onLoadingComplete;
    }, [
        onLoadingComplete
    ]);
    const [blurComplete, setBlurComplete] = (0, _react.useState)(false);
    const [showAltText, setShowAltText] = (0, _react.useState)(false);
    const { props: imgAttributes, meta: imgMeta } = (0, _getimgprops.getImgProps)(props, {
        defaultLoader: _imageloader.default,
        imgConf: config,
        blurComplete,
        showAltText
    });
    return /*#__PURE__*/ (0, _jsxruntime.jsxs)(_jsxruntime.Fragment, {
        children: [
            /*#__PURE__*/ (0, _jsxruntime.jsx)(ImageElement, {
                ...imgAttributes,
                unoptimized: imgMeta.unoptimized,
                placeholder: imgMeta.placeholder,
                fill: imgMeta.fill,
                onLoadRef: onLoadRef,
                onLoadingCompleteRef: onLoadingCompleteRef,
                setBlurComplete: setBlurComplete,
                setShowAltText: setShowAltText,
                sizesInput: props.sizes,
                ref: forwardedRef
            }),
            imgMeta.priority ? /*#__PURE__*/ (0, _jsxruntime.jsx)(ImagePreload, {
                isAppRouter: isAppRouter,
                imgAttributes: imgAttributes
            }) : null
        ]
    });
});
if ((typeof exports.default === 'function' || typeof exports.default === 'object' && exports.default !== null) && typeof exports.default.__esModule === 'undefined') {
    Object.defineProperty(exports.default, '__esModule', {
        value: true
    });
    Object.assign(exports.default, exports);
    module.exports = exports.default;
} //# sourceMappingURL=image-component.js.map
}),
"[project]/node_modules/next/dist/shared/lib/image-external.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
0 && (module.exports = {
    default: null,
    getImageProps: null
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    default: function() {
        return _default;
    },
    getImageProps: function() {
        return getImageProps;
    }
});
const _interop_require_default = __turbopack_context__.r("[project]/node_modules/@swc/helpers/cjs/_interop_require_default.cjs [app-client] (ecmascript)");
const _getimgprops = __turbopack_context__.r("[project]/node_modules/next/dist/shared/lib/get-img-props.js [app-client] (ecmascript)");
const _imagecomponent = __turbopack_context__.r("[project]/node_modules/next/dist/client/image-component.js [app-client] (ecmascript)");
const _imageloader = /*#__PURE__*/ _interop_require_default._(__turbopack_context__.r("[project]/node_modules/next/dist/shared/lib/image-loader.js [app-client] (ecmascript)"));
function getImageProps(imgProps) {
    const { props } = (0, _getimgprops.getImgProps)(imgProps, {
        defaultLoader: _imageloader.default,
        // This is replaced by webpack define plugin
        imgConf: ("TURBOPACK compile-time value", {
            "deviceSizes": ("TURBOPACK compile-time value", [
                ("TURBOPACK compile-time value", 640),
                ("TURBOPACK compile-time value", 750),
                ("TURBOPACK compile-time value", 828),
                ("TURBOPACK compile-time value", 1080),
                ("TURBOPACK compile-time value", 1200),
                ("TURBOPACK compile-time value", 1920),
                ("TURBOPACK compile-time value", 2048),
                ("TURBOPACK compile-time value", 3840)
            ]),
            "imageSizes": ("TURBOPACK compile-time value", [
                ("TURBOPACK compile-time value", 16),
                ("TURBOPACK compile-time value", 32),
                ("TURBOPACK compile-time value", 48),
                ("TURBOPACK compile-time value", 64),
                ("TURBOPACK compile-time value", 96),
                ("TURBOPACK compile-time value", 128),
                ("TURBOPACK compile-time value", 256),
                ("TURBOPACK compile-time value", 384)
            ]),
            "path": ("TURBOPACK compile-time value", "/_next/image"),
            "loader": ("TURBOPACK compile-time value", "default"),
            "dangerouslyAllowSVG": ("TURBOPACK compile-time value", false),
            "unoptimized": ("TURBOPACK compile-time value", false),
            "domains": ("TURBOPACK compile-time value", []),
            "remotePatterns": ("TURBOPACK compile-time value", [])
        })
    });
    // Normally we don't care about undefined props because we pass to JSX,
    // but this exported function could be used by the end user for anything
    // so we delete undefined props to clean it up a little.
    for (const [key, value] of Object.entries(props)){
        if (value === undefined) {
            delete props[key];
        }
    }
    return {
        props
    };
}
const _default = _imagecomponent.Image; //# sourceMappingURL=image-external.js.map
}),
"[project]/node_modules/next/image.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {

module.exports = __turbopack_context__.r("[project]/node_modules/next/dist/shared/lib/image-external.js [app-client] (ecmascript)");
}),
"[project]/node_modules/react-is/cjs/react-is.development.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

/** @license React v16.13.1
 * react-is.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
'use strict';
if ("TURBOPACK compile-time truthy", 1) {
    (function() {
        'use strict';
        // The Symbol used to tag the ReactElement-like types. If there is no native Symbol
        // nor polyfill, then a plain number is used for performance.
        var hasSymbol = typeof Symbol === 'function' && Symbol.for;
        var REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;
        var REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;
        var REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;
        var REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;
        var REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;
        var REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;
        var REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary
        // (unstable) APIs that have been removed. Can we remove the symbols?
        var REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;
        var REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;
        var REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;
        var REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;
        var REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;
        var REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;
        var REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;
        var REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;
        var REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;
        var REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;
        var REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;
        function isValidElementType(type) {
            return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.
            type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);
        }
        function typeOf(object) {
            if (typeof object === 'object' && object !== null) {
                var $$typeof = object.$$typeof;
                switch($$typeof){
                    case REACT_ELEMENT_TYPE:
                        var type = object.type;
                        switch(type){
                            case REACT_ASYNC_MODE_TYPE:
                            case REACT_CONCURRENT_MODE_TYPE:
                            case REACT_FRAGMENT_TYPE:
                            case REACT_PROFILER_TYPE:
                            case REACT_STRICT_MODE_TYPE:
                            case REACT_SUSPENSE_TYPE:
                                return type;
                            default:
                                var $$typeofType = type && type.$$typeof;
                                switch($$typeofType){
                                    case REACT_CONTEXT_TYPE:
                                    case REACT_FORWARD_REF_TYPE:
                                    case REACT_LAZY_TYPE:
                                    case REACT_MEMO_TYPE:
                                    case REACT_PROVIDER_TYPE:
                                        return $$typeofType;
                                    default:
                                        return $$typeof;
                                }
                        }
                    case REACT_PORTAL_TYPE:
                        return $$typeof;
                }
            }
            return undefined;
        } // AsyncMode is deprecated along with isAsyncMode
        var AsyncMode = REACT_ASYNC_MODE_TYPE;
        var ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;
        var ContextConsumer = REACT_CONTEXT_TYPE;
        var ContextProvider = REACT_PROVIDER_TYPE;
        var Element = REACT_ELEMENT_TYPE;
        var ForwardRef = REACT_FORWARD_REF_TYPE;
        var Fragment = REACT_FRAGMENT_TYPE;
        var Lazy = REACT_LAZY_TYPE;
        var Memo = REACT_MEMO_TYPE;
        var Portal = REACT_PORTAL_TYPE;
        var Profiler = REACT_PROFILER_TYPE;
        var StrictMode = REACT_STRICT_MODE_TYPE;
        var Suspense = REACT_SUSPENSE_TYPE;
        var hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated
        function isAsyncMode(object) {
            {
                if (!hasWarnedAboutDeprecatedIsAsyncMode) {
                    hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint
                    console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');
                }
            }
            return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;
        }
        function isConcurrentMode(object) {
            return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;
        }
        function isContextConsumer(object) {
            return typeOf(object) === REACT_CONTEXT_TYPE;
        }
        function isContextProvider(object) {
            return typeOf(object) === REACT_PROVIDER_TYPE;
        }
        function isElement(object) {
            return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;
        }
        function isForwardRef(object) {
            return typeOf(object) === REACT_FORWARD_REF_TYPE;
        }
        function isFragment(object) {
            return typeOf(object) === REACT_FRAGMENT_TYPE;
        }
        function isLazy(object) {
            return typeOf(object) === REACT_LAZY_TYPE;
        }
        function isMemo(object) {
            return typeOf(object) === REACT_MEMO_TYPE;
        }
        function isPortal(object) {
            return typeOf(object) === REACT_PORTAL_TYPE;
        }
        function isProfiler(object) {
            return typeOf(object) === REACT_PROFILER_TYPE;
        }
        function isStrictMode(object) {
            return typeOf(object) === REACT_STRICT_MODE_TYPE;
        }
        function isSuspense(object) {
            return typeOf(object) === REACT_SUSPENSE_TYPE;
        }
        exports.AsyncMode = AsyncMode;
        exports.ConcurrentMode = ConcurrentMode;
        exports.ContextConsumer = ContextConsumer;
        exports.ContextProvider = ContextProvider;
        exports.Element = Element;
        exports.ForwardRef = ForwardRef;
        exports.Fragment = Fragment;
        exports.Lazy = Lazy;
        exports.Memo = Memo;
        exports.Portal = Portal;
        exports.Profiler = Profiler;
        exports.StrictMode = StrictMode;
        exports.Suspense = Suspense;
        exports.isAsyncMode = isAsyncMode;
        exports.isConcurrentMode = isConcurrentMode;
        exports.isContextConsumer = isContextConsumer;
        exports.isContextProvider = isContextProvider;
        exports.isElement = isElement;
        exports.isForwardRef = isForwardRef;
        exports.isFragment = isFragment;
        exports.isLazy = isLazy;
        exports.isMemo = isMemo;
        exports.isPortal = isPortal;
        exports.isProfiler = isProfiler;
        exports.isStrictMode = isStrictMode;
        exports.isSuspense = isSuspense;
        exports.isValidElementType = isValidElementType;
        exports.typeOf = typeOf;
    })();
}
}),
"[project]/node_modules/react-is/index.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
'use strict';
if ("TURBOPACK compile-time falsy", 0) //TURBOPACK unreachable
;
else {
    module.exports = __turbopack_context__.r("[project]/node_modules/react-is/cjs/react-is.development.js [app-client] (ecmascript)");
}
}),
"[project]/node_modules/next/dist/build/polyfills/object-assign.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

var assign = Object.assign.bind(Object);
module.exports = assign;
module.exports.default = module.exports; //# sourceMappingURL=object-assign.js.map
}),
"[project]/node_modules/prop-types/lib/ReactPropTypesSecret.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';
module.exports = ReactPropTypesSecret;
}),
"[project]/node_modules/prop-types/lib/has.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {

module.exports = Function.call.bind(Object.prototype.hasOwnProperty);
}),
"[project]/node_modules/prop-types/checkPropTypes.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
'use strict';
var printWarning = function() {};
if ("TURBOPACK compile-time truthy", 1) {
    var ReactPropTypesSecret = __turbopack_context__.r("[project]/node_modules/prop-types/lib/ReactPropTypesSecret.js [app-client] (ecmascript)");
    var loggedTypeFailures = {};
    var has = __turbopack_context__.r("[project]/node_modules/prop-types/lib/has.js [app-client] (ecmascript)");
    printWarning = function(text) {
        var message = 'Warning: ' + text;
        if (typeof console !== 'undefined') {
            console.error(message);
        }
        try {
            // --- Welcome to debugging React ---
            // This error was thrown as a convenience so that you can use this stack
            // to find the callsite that caused this warning to fire.
            throw new Error(message);
        } catch (x) {}
    };
}
/**
 * Assert that the values match with the type specs.
 * Error messages are memorized and will only be shown once.
 *
 * @param {object} typeSpecs Map of name to a ReactPropType
 * @param {object} values Runtime values that need to be type-checked
 * @param {string} location e.g. "prop", "context", "child context"
 * @param {string} componentName Name of the component for error messages.
 * @param {?Function} getStack Returns the component stack.
 * @private
 */ function checkPropTypes(typeSpecs, values, location, componentName, getStack) {
    if ("TURBOPACK compile-time truthy", 1) {
        for(var typeSpecName in typeSpecs){
            if (has(typeSpecs, typeSpecName)) {
                var error;
                // Prop type validation may throw. In case they do, we don't want to
                // fail the render phase where it didn't fail before. So we log it.
                // After these have been cleaned up, we'll let them throw.
                try {
                    // This is intentionally an invariant that gets caught. It's the same
                    // behavior as without this statement except with a better message.
                    if (typeof typeSpecs[typeSpecName] !== 'function') {
                        var err = Error((componentName || 'React class') + ': ' + location + ' type `' + typeSpecName + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + typeof typeSpecs[typeSpecName] + '`.' + 'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.');
                        err.name = 'Invariant Violation';
                        throw err;
                    }
                    error = typeSpecs[typeSpecName](values, typeSpecName, componentName, location, null, ReactPropTypesSecret);
                } catch (ex) {
                    error = ex;
                }
                if (error && !(error instanceof Error)) {
                    printWarning((componentName || 'React class') + ': type specification of ' + location + ' `' + typeSpecName + '` is invalid; the type checker ' + 'function must return `null` or an `Error` but returned a ' + typeof error + '. ' + 'You may have forgotten to pass an argument to the type checker ' + 'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' + 'shape all require an argument).');
                }
                if (error instanceof Error && !(error.message in loggedTypeFailures)) {
                    // Only monitor this failure once because there tends to be a lot of the
                    // same error.
                    loggedTypeFailures[error.message] = true;
                    var stack = getStack ? getStack() : '';
                    printWarning('Failed ' + location + ' type: ' + error.message + (stack != null ? stack : ''));
                }
            }
        }
    }
}
/**
 * Resets warning cache when testing.
 *
 * @private
 */ checkPropTypes.resetWarningCache = function() {
    if (("TURBOPACK compile-time value", "development") !== 'production') {
        loggedTypeFailures = {};
    }
};
module.exports = checkPropTypes;
}),
"[project]/node_modules/prop-types/factoryWithTypeCheckers.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
'use strict';
var ReactIs = __turbopack_context__.r("[project]/node_modules/react-is/index.js [app-client] (ecmascript)");
var assign = __turbopack_context__.r("[project]/node_modules/next/dist/build/polyfills/object-assign.js [app-client] (ecmascript)");
var ReactPropTypesSecret = __turbopack_context__.r("[project]/node_modules/prop-types/lib/ReactPropTypesSecret.js [app-client] (ecmascript)");
var has = __turbopack_context__.r("[project]/node_modules/prop-types/lib/has.js [app-client] (ecmascript)");
var checkPropTypes = __turbopack_context__.r("[project]/node_modules/prop-types/checkPropTypes.js [app-client] (ecmascript)");
var printWarning = function() {};
if ("TURBOPACK compile-time truthy", 1) {
    printWarning = function(text) {
        var message = 'Warning: ' + text;
        if (typeof console !== 'undefined') {
            console.error(message);
        }
        try {
            // --- Welcome to debugging React ---
            // This error was thrown as a convenience so that you can use this stack
            // to find the callsite that caused this warning to fire.
            throw new Error(message);
        } catch (x) {}
    };
}
function emptyFunctionThatReturnsNull() {
    return null;
}
module.exports = function(isValidElement, throwOnDirectAccess) {
    /* global Symbol */ var ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;
    var FAUX_ITERATOR_SYMBOL = '@@iterator'; // Before Symbol spec.
    /**
   * Returns the iterator method function contained on the iterable object.
   *
   * Be sure to invoke the function with the iterable as context:
   *
   *     var iteratorFn = getIteratorFn(myIterable);
   *     if (iteratorFn) {
   *       var iterator = iteratorFn.call(myIterable);
   *       ...
   *     }
   *
   * @param {?object} maybeIterable
   * @return {?function}
   */ function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === 'function') {
            return iteratorFn;
        }
    }
    /**
   * Collection of methods that allow declaration and validation of props that are
   * supplied to React components. Example usage:
   *
   *   var Props = require('ReactPropTypes');
   *   var MyArticle = React.createClass({
   *     propTypes: {
   *       // An optional string prop named "description".
   *       description: Props.string,
   *
   *       // A required enum prop named "category".
   *       category: Props.oneOf(['News','Photos']).isRequired,
   *
   *       // A prop named "dialog" that requires an instance of Dialog.
   *       dialog: Props.instanceOf(Dialog).isRequired
   *     },
   *     render: function() { ... }
   *   });
   *
   * A more formal specification of how these methods are used:
   *
   *   type := array|bool|func|object|number|string|oneOf([...])|instanceOf(...)
   *   decl := ReactPropTypes.{type}(.isRequired)?
   *
   * Each and every declaration produces a function with the same signature. This
   * allows the creation of custom validation functions. For example:
   *
   *  var MyLink = React.createClass({
   *    propTypes: {
   *      // An optional string or URI prop named "href".
   *      href: function(props, propName, componentName) {
   *        var propValue = props[propName];
   *        if (propValue != null && typeof propValue !== 'string' &&
   *            !(propValue instanceof URI)) {
   *          return new Error(
   *            'Expected a string or an URI for ' + propName + ' in ' +
   *            componentName
   *          );
   *        }
   *      }
   *    },
   *    render: function() {...}
   *  });
   *
   * @internal
   */ var ANONYMOUS = '<<anonymous>>';
    // Important!
    // Keep this list in sync with production version in `./factoryWithThrowingShims.js`.
    var ReactPropTypes = {
        array: createPrimitiveTypeChecker('array'),
        bigint: createPrimitiveTypeChecker('bigint'),
        bool: createPrimitiveTypeChecker('boolean'),
        func: createPrimitiveTypeChecker('function'),
        number: createPrimitiveTypeChecker('number'),
        object: createPrimitiveTypeChecker('object'),
        string: createPrimitiveTypeChecker('string'),
        symbol: createPrimitiveTypeChecker('symbol'),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
    };
    /**
   * inlined Object.is polyfill to avoid requiring consumers ship their own
   * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is
   */ /*eslint-disable no-self-compare*/ function is(x, y) {
        // SameValue algorithm
        if (x === y) {
            // Steps 1-5, 7-10
            // Steps 6.b-6.e: +0 != -0
            return x !== 0 || 1 / x === 1 / y;
        } else {
            // Step 6.a: NaN == NaN
            return x !== x && y !== y;
        }
    }
    /*eslint-enable no-self-compare*/ /**
   * We use an Error-like object for backward compatibility as people may call
   * PropTypes directly and inspect their output. However, we don't use real
   * Errors anymore. We don't inspect their stack anyway, and creating them
   * is prohibitively expensive if they are created too often, such as what
   * happens in oneOfType() for any type before the one that matched.
   */ function PropTypeError(message, data) {
        this.message = message;
        this.data = data && typeof data === 'object' ? data : {};
        this.stack = '';
    }
    // Make `instanceof Error` still work for returned errors.
    PropTypeError.prototype = Error.prototype;
    function createChainableTypeChecker(validate) {
        if (("TURBOPACK compile-time value", "development") !== 'production') {
            var manualPropTypeCallCache = {};
            var manualPropTypeWarningCount = 0;
        }
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
            componentName = componentName || ANONYMOUS;
            propFullName = propFullName || propName;
            if (secret !== ReactPropTypesSecret) {
                if (throwOnDirectAccess) {
                    // New behavior only for users of `prop-types` package
                    var err = new Error('Calling PropTypes validators directly is not supported by the `prop-types` package. ' + 'Use `PropTypes.checkPropTypes()` to call them. ' + 'Read more at http://fb.me/use-check-prop-types');
                    err.name = 'Invariant Violation';
                    throw err;
                } else if (("TURBOPACK compile-time value", "development") !== 'production' && typeof console !== 'undefined') {
                    // Old behavior for people using React.PropTypes
                    var cacheKey = componentName + ':' + propName;
                    if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors
                    manualPropTypeWarningCount < 3) {
                        printWarning('You are manually calling a React.PropTypes validation ' + 'function for the `' + propFullName + '` prop on `' + componentName + '`. This is deprecated ' + 'and will throw in the standalone `prop-types` package. ' + 'You may be seeing this warning due to a third-party PropTypes ' + 'library. See https://fb.me/react-warning-dont-call-proptypes ' + 'for details.');
                        manualPropTypeCallCache[cacheKey] = true;
                        manualPropTypeWarningCount++;
                    }
                }
            }
            if (props[propName] == null) {
                if (isRequired) {
                    if (props[propName] === null) {
                        return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required ' + ('in `' + componentName + '`, but its value is `null`.'));
                    }
                    return new PropTypeError('The ' + location + ' `' + propFullName + '` is marked as required in ' + ('`' + componentName + '`, but its value is `undefined`.'));
                }
                return null;
            } else {
                return validate(props, propName, componentName, location, propFullName);
            }
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
    }
    function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location, propFullName, secret) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== expectedType) {
                // `propValue` being instance of, say, date/regexp, pass the 'object'
                // check, but we can offer a more precise error message here rather than
                // 'of type `object`'.
                var preciseType = getPreciseType(propValue);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + preciseType + '` supplied to `' + componentName + '`, expected ') + ('`' + expectedType + '`.'), {
                    expectedType: expectedType
                });
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
    }
    function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
            if (typeof typeChecker !== 'function') {
                return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside arrayOf.');
            }
            var propValue = props[propName];
            if (!Array.isArray(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an array.'));
            }
            for(var i = 0; i < propValue.length; i++){
                var error = typeChecker(propValue, i, componentName, location, propFullName + '[' + i + ']', ReactPropTypesSecret);
                if (error instanceof Error) {
                    return error;
                }
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createElementTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            if (!isValidElement(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement.'));
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createElementTypeTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            if (!ReactIs.isValidElementType(propValue)) {
                var propType = getPropType(propValue);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected a single ReactElement type.'));
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location, propFullName) {
            if (!(props[propName] instanceof expectedClass)) {
                var expectedClassName = expectedClass.name || ANONYMOUS;
                var actualClassName = getClassName(props[propName]);
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + actualClassName + '` supplied to `' + componentName + '`, expected ') + ('instance of `' + expectedClassName + '`.'));
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
            if ("TURBOPACK compile-time truthy", 1) {
                if (arguments.length > 1) {
                    printWarning('Invalid arguments supplied to oneOf, expected an array, got ' + arguments.length + ' arguments. ' + 'A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z]).');
                } else {
                    printWarning('Invalid argument supplied to oneOf, expected an array.');
                }
            }
            return emptyFunctionThatReturnsNull;
        }
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            for(var i = 0; i < expectedValues.length; i++){
                if (is(propValue, expectedValues[i])) {
                    return null;
                }
            }
            var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
                var type = getPreciseType(value);
                if (type === 'symbol') {
                    return String(value);
                }
                return value;
            });
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of value `' + String(propValue) + '` ' + ('supplied to `' + componentName + '`, expected one of ' + valuesString + '.'));
        }
        return createChainableTypeChecker(validate);
    }
    function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
            if (typeof typeChecker !== 'function') {
                return new PropTypeError('Property `' + propFullName + '` of component `' + componentName + '` has invalid PropType notation inside objectOf.');
            }
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== 'object') {
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type ' + ('`' + propType + '` supplied to `' + componentName + '`, expected an object.'));
            }
            for(var key in propValue){
                if (has(propValue, key)) {
                    var error = typeChecker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
                    if (error instanceof Error) {
                        return error;
                    }
                }
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
            ("TURBOPACK compile-time truthy", 1) ? printWarning('Invalid argument supplied to oneOfType, expected an instance of array.') : "TURBOPACK unreachable";
            return emptyFunctionThatReturnsNull;
        }
        for(var i = 0; i < arrayOfTypeCheckers.length; i++){
            var checker = arrayOfTypeCheckers[i];
            if (typeof checker !== 'function') {
                printWarning('Invalid argument supplied to oneOfType. Expected an array of check functions, but ' + 'received ' + getPostfixForTypeWarning(checker) + ' at index ' + i + '.');
                return emptyFunctionThatReturnsNull;
            }
        }
        function validate(props, propName, componentName, location, propFullName) {
            var expectedTypes = [];
            for(var i = 0; i < arrayOfTypeCheckers.length; i++){
                var checker = arrayOfTypeCheckers[i];
                var checkerResult = checker(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
                if (checkerResult == null) {
                    return null;
                }
                if (checkerResult.data && has(checkerResult.data, 'expectedType')) {
                    expectedTypes.push(checkerResult.data.expectedType);
                }
            }
            var expectedTypesMessage = expectedTypes.length > 0 ? ', expected one of type [' + expectedTypes.join(', ') + ']' : '';
            return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`' + expectedTypesMessage + '.'));
        }
        return createChainableTypeChecker(validate);
    }
    function createNodeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
            if (!isNode(props[propName])) {
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` supplied to ' + ('`' + componentName + '`, expected a ReactNode.'));
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function invalidValidatorError(componentName, location, propFullName, key, type) {
        return new PropTypeError((componentName || 'React class') + ': ' + location + ' type `' + propFullName + '.' + key + '` is invalid; ' + 'it must be a function, usually from the `prop-types` package, but received `' + type + '`.');
    }
    function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== 'object') {
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
            }
            for(var key in shapeTypes){
                var checker = shapeTypes[key];
                if (typeof checker !== 'function') {
                    return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
                }
                var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
                if (error) {
                    return error;
                }
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
            var propValue = props[propName];
            var propType = getPropType(propValue);
            if (propType !== 'object') {
                return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` of type `' + propType + '` ' + ('supplied to `' + componentName + '`, expected `object`.'));
            }
            // We need to check all keys in case some are required but missing from props.
            var allKeys = assign({}, props[propName], shapeTypes);
            for(var key in allKeys){
                var checker = shapeTypes[key];
                if (has(shapeTypes, key) && typeof checker !== 'function') {
                    return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
                }
                if (!checker) {
                    return new PropTypeError('Invalid ' + location + ' `' + propFullName + '` key `' + key + '` supplied to `' + componentName + '`.' + '\nBad object: ' + JSON.stringify(props[propName], null, '  ') + '\nValid keys: ' + JSON.stringify(Object.keys(shapeTypes), null, '  '));
                }
                var error = checker(propValue, key, componentName, location, propFullName + '.' + key, ReactPropTypesSecret);
                if (error) {
                    return error;
                }
            }
            return null;
        }
        return createChainableTypeChecker(validate);
    }
    function isNode(propValue) {
        switch(typeof propValue){
            case 'number':
            case 'string':
            case 'undefined':
                return true;
            case 'boolean':
                return !propValue;
            case 'object':
                if (Array.isArray(propValue)) {
                    return propValue.every(isNode);
                }
                if (propValue === null || isValidElement(propValue)) {
                    return true;
                }
                var iteratorFn = getIteratorFn(propValue);
                if (iteratorFn) {
                    var iterator = iteratorFn.call(propValue);
                    var step;
                    if (iteratorFn !== propValue.entries) {
                        while(!(step = iterator.next()).done){
                            if (!isNode(step.value)) {
                                return false;
                            }
                        }
                    } else {
                        // Iterator will provide entry [k,v] tuples rather than values.
                        while(!(step = iterator.next()).done){
                            var entry = step.value;
                            if (entry) {
                                if (!isNode(entry[1])) {
                                    return false;
                                }
                            }
                        }
                    }
                } else {
                    return false;
                }
                return true;
            default:
                return false;
        }
    }
    function isSymbol(propType, propValue) {
        // Native Symbol.
        if (propType === 'symbol') {
            return true;
        }
        // falsy value can't be a Symbol
        if (!propValue) {
            return false;
        }
        // 19.4.3.5 Symbol.prototype[@@toStringTag] === 'Symbol'
        if (propValue['@@toStringTag'] === 'Symbol') {
            return true;
        }
        // Fallback for non-spec compliant Symbols which are polyfilled.
        if (typeof Symbol === 'function' && propValue instanceof Symbol) {
            return true;
        }
        return false;
    }
    // Equivalent of `typeof` but with special handling for array and regexp.
    function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) {
            return 'array';
        }
        if (propValue instanceof RegExp) {
            // Old webkits (at least until Android 4.0) return 'function' rather than
            // 'object' for typeof a RegExp. We'll normalize this here so that /bla/
            // passes PropTypes.object.
            return 'object';
        }
        if (isSymbol(propType, propValue)) {
            return 'symbol';
        }
        return propType;
    }
    // This handles more types than `getPropType`. Only used for error messages.
    // See `createPrimitiveTypeChecker`.
    function getPreciseType(propValue) {
        if (typeof propValue === 'undefined' || propValue === null) {
            return '' + propValue;
        }
        var propType = getPropType(propValue);
        if (propType === 'object') {
            if (propValue instanceof Date) {
                return 'date';
            } else if (propValue instanceof RegExp) {
                return 'regexp';
            }
        }
        return propType;
    }
    // Returns a string that is postfixed to a warning about an invalid type.
    // For example, "undefined" or "of type array"
    function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch(type){
            case 'array':
            case 'object':
                return 'an ' + type;
            case 'boolean':
            case 'date':
            case 'regexp':
                return 'a ' + type;
            default:
                return type;
        }
    }
    // Returns class name of the object, if any.
    function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) {
            return ANONYMOUS;
        }
        return propValue.constructor.name;
    }
    ReactPropTypes.checkPropTypes = checkPropTypes;
    ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
    ReactPropTypes.PropTypes = ReactPropTypes;
    return ReactPropTypes;
};
}),
"[project]/node_modules/prop-types/index.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
if ("TURBOPACK compile-time truthy", 1) {
    var ReactIs = __turbopack_context__.r("[project]/node_modules/react-is/index.js [app-client] (ecmascript)");
    // By explicitly using `prop-types` you are opting into new development behavior.
    // http://fb.me/prop-types-in-prod
    var throwOnDirectAccess = true;
    module.exports = __turbopack_context__.r("[project]/node_modules/prop-types/factoryWithTypeCheckers.js [app-client] (ecmascript)")(ReactIs.isElement, throwOnDirectAccess);
} else //TURBOPACK unreachable
;
}),
"[project]/node_modules/classnames/index.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {

/*!
	Copyright (c) 2018 Jed Watson.
	Licensed under the MIT License (MIT), see
	http://jedwatson.github.io/classnames
*/ /* global define */ (function() {
    'use strict';
    var hasOwn = {}.hasOwnProperty;
    function classNames() {
        var classes = '';
        for(var i = 0; i < arguments.length; i++){
            var arg = arguments[i];
            if (arg) {
                classes = appendClass(classes, parseValue(arg));
            }
        }
        return classes;
    }
    function parseValue(arg) {
        if (typeof arg === 'string' || typeof arg === 'number') {
            return arg;
        }
        if (typeof arg !== 'object') {
            return '';
        }
        if (Array.isArray(arg)) {
            return classNames.apply(null, arg);
        }
        if (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {
            return arg.toString();
        }
        var classes = '';
        for(var key in arg){
            if (hasOwn.call(arg, key) && arg[key]) {
                classes = appendClass(classes, key);
            }
        }
        return classes;
    }
    function appendClass(value, newClass) {
        if (!newClass) {
            return value;
        }
        if (value) {
            return value + ' ' + newClass;
        }
        return value + newClass;
    }
    if (("TURBOPACK compile-time value", "object") !== 'undefined' && module.exports) {
        classNames.default = classNames;
        module.exports = classNames;
    } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {
        // register as 'classnames', consistent with npm package name
        ((r)=>r !== undefined && __turbopack_context__.v(r))(function() {
            return classNames;
        }());
    } else {
        window.classNames = classNames;
    }
})();
}),
"[project]/node_modules/invariant/browser.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

/**
 * Copyright (c) 2013-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = /*#__PURE__*/ __turbopack_context__.i("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
'use strict';
/**
 * Use invariant() to assert state which your program assumes to be true.
 *
 * Provide sprintf-style format (only %s is supported) and arguments
 * to provide information about what broke and what you were
 * expecting.
 *
 * The invariant message will be stripped in production, but the invariant
 * will remain to ensure logic does not differ in production.
 */ var invariant = function(condition, format, a, b, c, d, e, f) {
    if ("TURBOPACK compile-time truthy", 1) {
        if (format === undefined) {
            throw new Error('invariant requires an error message argument');
        }
    }
    if (!condition) {
        var error;
        if (format === undefined) {
            error = new Error('Minified exception occurred; use the non-minified dev environment ' + 'for the full error message and additional helpful warnings.');
        } else {
            var args = [
                a,
                b,
                c,
                d,
                e,
                f
            ];
            var argIndex = 0;
            error = new Error(format.replace(/%s/g, function() {
                return args[argIndex++];
            }));
            error.name = 'Invariant Violation';
        }
        error.framesToPop = 1; // we don't care about invariant's own frame
        throw error;
    }
};
module.exports = invariant;
}),
"[project]/node_modules/lodash.isstring/index.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {

/**
 * lodash 4.0.1 (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 * Available under MIT license <https://lodash.com/license>
 */ /** `Object#toString` result references. */ var stringTag = '[object String]';
/** Used for built-in method references. */ var objectProto = Object.prototype;
/**
 * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)
 * of values.
 */ var objectToString = objectProto.toString;
/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @type Function
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */ var isArray = Array.isArray;
/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */ function isObjectLike(value) {
    return !!value && typeof value == 'object';
}
/**
 * Checks if `value` is classified as a `String` primitive or object.
 *
 * @static
 * @memberOf _
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.
 * @example
 *
 * _.isString('abc');
 * // => true
 *
 * _.isString(1);
 * // => false
 */ function isString(value) {
    return typeof value == 'string' || !isArray(value) && isObjectLike(value) && objectToString.call(value) == stringTag;
}
module.exports = isString;
}),
"[project]/node_modules/lodash.flatten/index.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {

/**
 * lodash (Custom Build) <https://lodash.com/>
 * Build: `lodash modularize exports="npm" -o ./`
 * Copyright jQuery Foundation and other contributors <https://jquery.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */ /** Used as references for various `Number` constants. */ var MAX_SAFE_INTEGER = 9007199254740991;
/** `Object#toString` result references. */ var argsTag = '[object Arguments]', funcTag = '[object Function]', genTag = '[object GeneratorFunction]';
/** Detect free variable `global` from Node.js. */ var freeGlobal = ("TURBOPACK compile-time value", "object") == 'object' && /*TURBOPACK member replacement*/ __turbopack_context__.g && /*TURBOPACK member replacement*/ __turbopack_context__.g.Object === Object && /*TURBOPACK member replacement*/ __turbopack_context__.g;
/** Detect free variable `self`. */ var freeSelf = typeof self == 'object' && self && self.Object === Object && self;
/** Used as a reference to the global object. */ var root = freeGlobal || freeSelf || Function('return this')();
/**
 * Appends the elements of `values` to `array`.
 *
 * @private
 * @param {Array} array The array to modify.
 * @param {Array} values The values to append.
 * @returns {Array} Returns `array`.
 */ function arrayPush(array, values) {
    var index = -1, length = values.length, offset = array.length;
    while(++index < length){
        array[offset + index] = values[index];
    }
    return array;
}
/** Used for built-in method references. */ var objectProto = Object.prototype;
/** Used to check objects for own properties. */ var hasOwnProperty = objectProto.hasOwnProperty;
/**
 * Used to resolve the
 * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)
 * of values.
 */ var objectToString = objectProto.toString;
/** Built-in value references. */ var Symbol = root.Symbol, propertyIsEnumerable = objectProto.propertyIsEnumerable, spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;
/**
 * The base implementation of `_.flatten` with support for restricting flattening.
 *
 * @private
 * @param {Array} array The array to flatten.
 * @param {number} depth The maximum recursion depth.
 * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.
 * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.
 * @param {Array} [result=[]] The initial result value.
 * @returns {Array} Returns the new flattened array.
 */ function baseFlatten(array, depth, predicate, isStrict, result) {
    var index = -1, length = array.length;
    predicate || (predicate = isFlattenable);
    result || (result = []);
    while(++index < length){
        var value = array[index];
        if (depth > 0 && predicate(value)) {
            if (depth > 1) {
                // Recursively flatten arrays (susceptible to call stack limits).
                baseFlatten(value, depth - 1, predicate, isStrict, result);
            } else {
                arrayPush(result, value);
            }
        } else if (!isStrict) {
            result[result.length] = value;
        }
    }
    return result;
}
/**
 * Checks if `value` is a flattenable `arguments` object or array.
 *
 * @private
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.
 */ function isFlattenable(value) {
    return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);
}
/**
 * Flattens `array` a single level deep.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Array
 * @param {Array} array The array to flatten.
 * @returns {Array} Returns the new flattened array.
 * @example
 *
 * _.flatten([1, [2, [3, [4]], 5]]);
 * // => [1, 2, [3, [4]], 5]
 */ function flatten(array) {
    var length = array ? array.length : 0;
    return length ? baseFlatten(array, 1) : [];
}
/**
 * Checks if `value` is likely an `arguments` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an `arguments` object,
 *  else `false`.
 * @example
 *
 * _.isArguments(function() { return arguments; }());
 * // => true
 *
 * _.isArguments([1, 2, 3]);
 * // => false
 */ function isArguments(value) {
    // Safari 8.1 makes `arguments.callee` enumerable in strict mode.
    return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') && (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);
}
/**
 * Checks if `value` is classified as an `Array` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array, else `false`.
 * @example
 *
 * _.isArray([1, 2, 3]);
 * // => true
 *
 * _.isArray(document.body.children);
 * // => false
 *
 * _.isArray('abc');
 * // => false
 *
 * _.isArray(_.noop);
 * // => false
 */ var isArray = Array.isArray;
/**
 * Checks if `value` is array-like. A value is considered array-like if it's
 * not a function and has a `value.length` that's an integer greater than or
 * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is array-like, else `false`.
 * @example
 *
 * _.isArrayLike([1, 2, 3]);
 * // => true
 *
 * _.isArrayLike(document.body.children);
 * // => true
 *
 * _.isArrayLike('abc');
 * // => true
 *
 * _.isArrayLike(_.noop);
 * // => false
 */ function isArrayLike(value) {
    return value != null && isLength(value.length) && !isFunction(value);
}
/**
 * This method is like `_.isArrayLike` except that it also checks if `value`
 * is an object.
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an array-like object,
 *  else `false`.
 * @example
 *
 * _.isArrayLikeObject([1, 2, 3]);
 * // => true
 *
 * _.isArrayLikeObject(document.body.children);
 * // => true
 *
 * _.isArrayLikeObject('abc');
 * // => false
 *
 * _.isArrayLikeObject(_.noop);
 * // => false
 */ function isArrayLikeObject(value) {
    return isObjectLike(value) && isArrayLike(value);
}
/**
 * Checks if `value` is classified as a `Function` object.
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a function, else `false`.
 * @example
 *
 * _.isFunction(_);
 * // => true
 *
 * _.isFunction(/abc/);
 * // => false
 */ function isFunction(value) {
    // The use of `Object#toString` avoids issues with the `typeof` operator
    // in Safari 8-9 which returns 'object' for typed array and other constructors.
    var tag = isObject(value) ? objectToString.call(value) : '';
    return tag == funcTag || tag == genTag;
}
/**
 * Checks if `value` is a valid array-like length.
 *
 * **Note:** This method is loosely based on
 * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.
 * @example
 *
 * _.isLength(3);
 * // => true
 *
 * _.isLength(Number.MIN_VALUE);
 * // => false
 *
 * _.isLength(Infinity);
 * // => false
 *
 * _.isLength('3');
 * // => false
 */ function isLength(value) {
    return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
}
/**
 * Checks if `value` is the
 * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)
 * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)
 *
 * @static
 * @memberOf _
 * @since 0.1.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is an object, else `false`.
 * @example
 *
 * _.isObject({});
 * // => true
 *
 * _.isObject([1, 2, 3]);
 * // => true
 *
 * _.isObject(_.noop);
 * // => true
 *
 * _.isObject(null);
 * // => false
 */ function isObject(value) {
    var type = typeof value;
    return !!value && (type == 'object' || type == 'function');
}
/**
 * Checks if `value` is object-like. A value is object-like if it's not `null`
 * and has a `typeof` result of "object".
 *
 * @static
 * @memberOf _
 * @since 4.0.0
 * @category Lang
 * @param {*} value The value to check.
 * @returns {boolean} Returns `true` if `value` is object-like, else `false`.
 * @example
 *
 * _.isObjectLike({});
 * // => true
 *
 * _.isObjectLike([1, 2, 3]);
 * // => true
 *
 * _.isObjectLike(_.noop);
 * // => false
 *
 * _.isObjectLike(null);
 * // => false
 */ function isObjectLike(value) {
    return !!value && typeof value == 'object';
}
module.exports = flatten;
}),
"[project]/node_modules/string-replace-to-array/string-replace-to-array.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {

// Inspiration: https://github.com/facebook/react/issues/3386
var invariant = __turbopack_context__.r("[project]/node_modules/invariant/browser.js [app-client] (ecmascript)"), isString = __turbopack_context__.r("[project]/node_modules/lodash.isstring/index.js [app-client] (ecmascript)"), flatten = __turbopack_context__.r("[project]/node_modules/lodash.flatten/index.js [app-client] (ecmascript)");
function replace(string, regexpOrSubstr, newValueOrFn) {
    invariant(typeof string === 'string', 'First param must be a string');
    invariant(typeof regexpOrSubstr === 'string' || regexpOrSubstr instanceof RegExp, 'Second param must be a string pattern or a regular expression');
    var fn = typeof regexpOrSubstr === 'string' ? replaceUsingString : replaceUsingRegexp;
    return fn(string, regexpOrSubstr, newValueOrFn);
}
function replaceUsingString(string, patternString, newValueOrFn) {
    var index = string.indexOf(patternString);
    if (index >= 0) {
        var arr = [];
        var endIndex = index + patternString.length;
        if (index > 0) {
            arr.push(string.substring(0, index));
        }
        arr.push(typeof newValueOrFn === 'function' ? newValueOrFn(string.substring(index, endIndex), index, string) : newValueOrFn);
        if (endIndex < string.length) {
            arr.push(string.substring(endIndex));
        }
        return arr;
    } else {
        return [
            string
        ];
    }
}
function replaceUsingRegexp(string, regexp, newValueOrFn) {
    var output = [];
    var replacerIsFn = typeof newValueOrFn === 'function';
    var storedLastIndex = regexp.lastIndex;
    regexp.lastIndex = 0;
    var result;
    var lastIndex = 0;
    while(result = regexp.exec(string)){
        var index = result.index;
        if (result[0] === '') {
            // When the regexp is an empty string
            // we still want to advance our cursor to the next item.
            // This is the behavior of String.replace.
            regexp.lastIndex++;
        }
        if (index !== lastIndex) {
            output.push(string.substring(lastIndex, index));
        }
        var match = result[0];
        lastIndex = index + match.length;
        var out = replacerIsFn ? newValueOrFn.apply(this, result.concat(index, result.input)) : newValueOrFn;
        output.push(out);
        if (!regexp.global) {
            break;
        }
    }
    if (lastIndex < string.length) {
        output.push(string.substring(lastIndex));
    }
    regexp.lastIndex = storedLastIndex;
    return output;
}
module.exports = function stringReplaceToArray(string, regexpOrSubstr, newSubStrOrFn) {
    if (isString(string)) {
        return replace(string, regexpOrSubstr, newSubStrOrFn);
    } else if (!Array.isArray(string) || !string[0]) {
        throw new TypeError('First argument must be an array or non-empty string');
    } else {
        return flatten(string.map(function(string) {
            if (!isString(string)) return string;
            return replace(string, regexpOrSubstr, newSubStrOrFn);
        }));
    }
};
}),
"[project]/node_modules/react-emoji-render/node_modules/emoji-regex/index.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

module.exports = function() {
    // https://mths.be/emoji
    return /\uD83C\uDFF4\uDB40\uDC67\uDB40\uDC62(?:\uDB40\uDC65\uDB40\uDC6E\uDB40\uDC67|\uDB40\uDC73\uDB40\uDC63\uDB40\uDC74|\uDB40\uDC77\uDB40\uDC6C\uDB40\uDC73)\uDB40\uDC7F|\uD83D\uDC68(?:\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68\uD83C\uDFFB|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFE])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D)?\uD83D\uDC68|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D[\uDC68\uDC69])\u200D(?:\uD83D[\uDC66\uDC67])|[\u2695\u2696\u2708]\uFE0F|\uD83D[\uDC66\uDC67]|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|(?:\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708])\uFE0F|\uD83C\uDFFB\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C[\uDFFB-\uDFFF])|(?:\uD83E\uDDD1\uD83C\uDFFB\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)\uD83C\uDFFB|\uD83E\uDDD1(?:\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1)|(?:\uD83E\uDDD1\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFF\u200D\uD83E\uDD1D\u200D(?:\uD83D[\uDC68\uDC69]))(?:\uD83C[\uDFFB-\uDFFE])|(?:\uD83E\uDDD1\uD83C\uDFFC\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB\uDFFC])|\uD83D\uDC69(?:\uD83C\uDFFE\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB-\uDFFD\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFC\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFD-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFB\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFC-\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFD\u200D(?:\uD83E\uDD1D\u200D\uD83D\uDC68(?:\uD83C[\uDFFB\uDFFC\uDFFE\uDFFF])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\u200D(?:\u2764\uFE0F\u200D(?:\uD83D\uDC8B\u200D(?:\uD83D[\uDC68\uDC69])|\uD83D[\uDC68\uDC69])|\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD])|\uD83C\uDFFF\u200D(?:\uD83C[\uDF3E\uDF73\uDF93\uDFA4\uDFA8\uDFEB\uDFED]|\uD83D[\uDCBB\uDCBC\uDD27\uDD2C\uDE80\uDE92]|\uD83E[\uDDAF-\uDDB3\uDDBC\uDDBD]))|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67]))|(?:\uD83E\uDDD1\uD83C\uDFFD\u200D\uD83E\uDD1D\u200D\uD83E\uDDD1|\uD83D\uDC69\uD83C\uDFFE\u200D\uD83E\uDD1D\u200D\uD83D\uDC69)(?:\uD83C[\uDFFB-\uDFFD])|\uD83D\uDC69\u200D\uD83D\uDC66\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC69\u200D(?:\uD83D[\uDC66\uDC67])|(?:\uD83D\uDC41\uFE0F\u200D\uD83D\uDDE8|\uD83D\uDC69(?:\uD83C\uDFFF\u200D[\u2695\u2696\u2708]|\uD83C\uDFFE\u200D[\u2695\u2696\u2708]|\uD83C\uDFFC\u200D[\u2695\u2696\u2708]|\uD83C\uDFFB\u200D[\u2695\u2696\u2708]|\uD83C\uDFFD\u200D[\u2695\u2696\u2708]|\u200D[\u2695\u2696\u2708])|(?:(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)\uFE0F|\uD83D\uDC6F|\uD83E[\uDD3C\uDDDE\uDDDF])\u200D[\u2640\u2642]|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:(?:\uD83C[\uDFFB-\uDFFF])\u200D[\u2640\u2642]|\u200D[\u2640\u2642])|\uD83C\uDFF4\u200D\u2620)\uFE0F|\uD83D\uDC69\u200D\uD83D\uDC67\u200D(?:\uD83D[\uDC66\uDC67])|\uD83C\uDFF3\uFE0F\u200D\uD83C\uDF08|\uD83D\uDC15\u200D\uD83E\uDDBA|\uD83D\uDC69\u200D\uD83D\uDC66|\uD83D\uDC69\u200D\uD83D\uDC67|\uD83C\uDDFD\uD83C\uDDF0|\uD83C\uDDF4\uD83C\uDDF2|\uD83C\uDDF6\uD83C\uDDE6|[#\*0-9]\uFE0F\u20E3|\uD83C\uDDE7(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEF\uDDF1-\uDDF4\uDDF6-\uDDF9\uDDFB\uDDFC\uDDFE\uDDFF])|\uD83C\uDDF9(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDED\uDDEF-\uDDF4\uDDF7\uDDF9\uDDFB\uDDFC\uDDFF])|\uD83C\uDDEA(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDED\uDDF7-\uDDFA])|\uD83E\uDDD1(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF7(?:\uD83C[\uDDEA\uDDF4\uDDF8\uDDFA\uDDFC])|\uD83D\uDC69(?:\uD83C[\uDFFB-\uDFFF])|\uD83C\uDDF2(?:\uD83C[\uDDE6\uDDE8-\uDDED\uDDF0-\uDDFF])|\uD83C\uDDE6(?:\uD83C[\uDDE8-\uDDEC\uDDEE\uDDF1\uDDF2\uDDF4\uDDF6-\uDDFA\uDDFC\uDDFD\uDDFF])|\uD83C\uDDF0(?:\uD83C[\uDDEA\uDDEC-\uDDEE\uDDF2\uDDF3\uDDF5\uDDF7\uDDFC\uDDFE\uDDFF])|\uD83C\uDDED(?:\uD83C[\uDDF0\uDDF2\uDDF3\uDDF7\uDDF9\uDDFA])|\uD83C\uDDE9(?:\uD83C[\uDDEA\uDDEC\uDDEF\uDDF0\uDDF2\uDDF4\uDDFF])|\uD83C\uDDFE(?:\uD83C[\uDDEA\uDDF9])|\uD83C\uDDEC(?:\uD83C[\uDDE6\uDDE7\uDDE9-\uDDEE\uDDF1-\uDDF3\uDDF5-\uDDFA\uDDFC\uDDFE])|\uD83C\uDDF8(?:\uD83C[\uDDE6-\uDDEA\uDDEC-\uDDF4\uDDF7-\uDDF9\uDDFB\uDDFD-\uDDFF])|\uD83C\uDDEB(?:\uD83C[\uDDEE-\uDDF0\uDDF2\uDDF4\uDDF7])|\uD83C\uDDF5(?:\uD83C[\uDDE6\uDDEA-\uDDED\uDDF0-\uDDF3\uDDF7-\uDDF9\uDDFC\uDDFE])|\uD83C\uDDFB(?:\uD83C[\uDDE6\uDDE8\uDDEA\uDDEC\uDDEE\uDDF3\uDDFA])|\uD83C\uDDF3(?:\uD83C[\uDDE6\uDDE8\uDDEA-\uDDEC\uDDEE\uDDF1\uDDF4\uDDF5\uDDF7\uDDFA\uDDFF])|\uD83C\uDDE8(?:\uD83C[\uDDE6\uDDE8\uDDE9\uDDEB-\uDDEE\uDDF0-\uDDF5\uDDF7\uDDFA-\uDDFF])|\uD83C\uDDF1(?:\uD83C[\uDDE6-\uDDE8\uDDEE\uDDF0\uDDF7-\uDDFB\uDDFE])|\uD83C\uDDFF(?:\uD83C[\uDDE6\uDDF2\uDDFC])|\uD83C\uDDFC(?:\uD83C[\uDDEB\uDDF8])|\uD83C\uDDFA(?:\uD83C[\uDDE6\uDDEC\uDDF2\uDDF3\uDDF8\uDDFE\uDDFF])|\uD83C\uDDEE(?:\uD83C[\uDDE8-\uDDEA\uDDF1-\uDDF4\uDDF6-\uDDF9])|\uD83C\uDDEF(?:\uD83C[\uDDEA\uDDF2\uDDF4\uDDF5])|(?:\uD83C[\uDFC3\uDFC4\uDFCA]|\uD83D[\uDC6E\uDC71\uDC73\uDC77\uDC81\uDC82\uDC86\uDC87\uDE45-\uDE47\uDE4B\uDE4D\uDE4E\uDEA3\uDEB4-\uDEB6]|\uD83E[\uDD26\uDD37-\uDD39\uDD3D\uDD3E\uDDB8\uDDB9\uDDCD-\uDDCF\uDDD6-\uDDDD])(?:\uD83C[\uDFFB-\uDFFF])|(?:\u26F9|\uD83C[\uDFCB\uDFCC]|\uD83D\uDD75)(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u261D\u270A-\u270D]|\uD83C[\uDF85\uDFC2\uDFC7]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66\uDC67\uDC6B-\uDC6D\uDC70\uDC72\uDC74-\uDC76\uDC78\uDC7C\uDC83\uDC85\uDCAA\uDD74\uDD7A\uDD90\uDD95\uDD96\uDE4C\uDE4F\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1C\uDD1E\uDD1F\uDD30-\uDD36\uDDB5\uDDB6\uDDBB\uDDD2-\uDDD5])(?:\uD83C[\uDFFB-\uDFFF])|(?:[\u231A\u231B\u23E9-\u23EC\u23F0\u23F3\u25FD\u25FE\u2614\u2615\u2648-\u2653\u267F\u2693\u26A1\u26AA\u26AB\u26BD\u26BE\u26C4\u26C5\u26CE\u26D4\u26EA\u26F2\u26F3\u26F5\u26FA\u26FD\u2705\u270A\u270B\u2728\u274C\u274E\u2753-\u2755\u2757\u2795-\u2797\u27B0\u27BF\u2B1B\u2B1C\u2B50\u2B55]|\uD83C[\uDC04\uDCCF\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE1A\uDE2F\uDE32-\uDE36\uDE38-\uDE3A\uDE50\uDE51\uDF00-\uDF20\uDF2D-\uDF35\uDF37-\uDF7C\uDF7E-\uDF93\uDFA0-\uDFCA\uDFCF-\uDFD3\uDFE0-\uDFF0\uDFF4\uDFF8-\uDFFF]|\uD83D[\uDC00-\uDC3E\uDC40\uDC42-\uDCFC\uDCFF-\uDD3D\uDD4B-\uDD4E\uDD50-\uDD67\uDD7A\uDD95\uDD96\uDDA4\uDDFB-\uDE4F\uDE80-\uDEC5\uDECC\uDED0-\uDED2\uDED5\uDEEB\uDEEC\uDEF4-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])|(?:[#\*0-9\xA9\xAE\u203C\u2049\u2122\u2139\u2194-\u2199\u21A9\u21AA\u231A\u231B\u2328\u23CF\u23E9-\u23F3\u23F8-\u23FA\u24C2\u25AA\u25AB\u25B6\u25C0\u25FB-\u25FE\u2600-\u2604\u260E\u2611\u2614\u2615\u2618\u261D\u2620\u2622\u2623\u2626\u262A\u262E\u262F\u2638-\u263A\u2640\u2642\u2648-\u2653\u265F\u2660\u2663\u2665\u2666\u2668\u267B\u267E\u267F\u2692-\u2697\u2699\u269B\u269C\u26A0\u26A1\u26AA\u26AB\u26B0\u26B1\u26BD\u26BE\u26C4\u26C5\u26C8\u26CE\u26CF\u26D1\u26D3\u26D4\u26E9\u26EA\u26F0-\u26F5\u26F7-\u26FA\u26FD\u2702\u2705\u2708-\u270D\u270F\u2712\u2714\u2716\u271D\u2721\u2728\u2733\u2734\u2744\u2747\u274C\u274E\u2753-\u2755\u2757\u2763\u2764\u2795-\u2797\u27A1\u27B0\u27BF\u2934\u2935\u2B05-\u2B07\u2B1B\u2B1C\u2B50\u2B55\u3030\u303D\u3297\u3299]|\uD83C[\uDC04\uDCCF\uDD70\uDD71\uDD7E\uDD7F\uDD8E\uDD91-\uDD9A\uDDE6-\uDDFF\uDE01\uDE02\uDE1A\uDE2F\uDE32-\uDE3A\uDE50\uDE51\uDF00-\uDF21\uDF24-\uDF93\uDF96\uDF97\uDF99-\uDF9B\uDF9E-\uDFF0\uDFF3-\uDFF5\uDFF7-\uDFFF]|\uD83D[\uDC00-\uDCFD\uDCFF-\uDD3D\uDD49-\uDD4E\uDD50-\uDD67\uDD6F\uDD70\uDD73-\uDD7A\uDD87\uDD8A-\uDD8D\uDD90\uDD95\uDD96\uDDA4\uDDA5\uDDA8\uDDB1\uDDB2\uDDBC\uDDC2-\uDDC4\uDDD1-\uDDD3\uDDDC-\uDDDE\uDDE1\uDDE3\uDDE8\uDDEF\uDDF3\uDDFA-\uDE4F\uDE80-\uDEC5\uDECB-\uDED2\uDED5\uDEE0-\uDEE5\uDEE9\uDEEB\uDEEC\uDEF0\uDEF3-\uDEFA\uDFE0-\uDFEB]|\uD83E[\uDD0D-\uDD3A\uDD3C-\uDD45\uDD47-\uDD71\uDD73-\uDD76\uDD7A-\uDDA2\uDDA5-\uDDAA\uDDAE-\uDDCA\uDDCD-\uDDFF\uDE70-\uDE73\uDE78-\uDE7A\uDE80-\uDE82\uDE90-\uDE95])\uFE0F|(?:[\u261D\u26F9\u270A-\u270D]|\uD83C[\uDF85\uDFC2-\uDFC4\uDFC7\uDFCA-\uDFCC]|\uD83D[\uDC42\uDC43\uDC46-\uDC50\uDC66-\uDC78\uDC7C\uDC81-\uDC83\uDC85-\uDC87\uDC8F\uDC91\uDCAA\uDD74\uDD75\uDD7A\uDD90\uDD95\uDD96\uDE45-\uDE47\uDE4B-\uDE4F\uDEA3\uDEB4-\uDEB6\uDEC0\uDECC]|\uD83E[\uDD0F\uDD18-\uDD1F\uDD26\uDD30-\uDD39\uDD3C-\uDD3E\uDDB5\uDDB6\uDDB8\uDDB9\uDDBB\uDDCD-\uDDCF\uDDD1-\uDDDD])/g;
};
}),
"[project]/node_modules/react-emoji-render/data/asciiAliases.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {

module.exports = {
    angry: [
        ">:(",
        ">:-("
    ],
    blush: [
        ':")',
        ':-")'
    ],
    broken_heart: [
        "</3",
        "<\\3"
    ],
    confused: [
        ":/",
        ":-/"
    ],
    cry: [
        ":'(",
        ":'-(",
        ":,(",
        ":,-("
    ],
    frowning: [
        ":(",
        ":-("
    ],
    heart: [
        "<3"
    ],
    imp: [
        "]:(",
        "]:-("
    ],
    innocent: [
        "o:)",
        "O:)",
        "o:-)",
        "O:-)",
        "0:)",
        "0:-)"
    ],
    joy: [
        ":')",
        ":'-)",
        ":,)",
        ":,-)",
        ":'D",
        ":'-D",
        ":,D",
        ":,-D"
    ],
    kissing: [
        ":*",
        ":-*"
    ],
    laughing: [
        "x-)",
        "X-)"
    ],
    neutral_face: [
        ":|",
        ":-|"
    ],
    open_mouth: [
        ":o",
        ":-o",
        ":O",
        ":-O"
    ],
    rage: [
        ":@",
        ":-@"
    ],
    smile: [
        ":D",
        ":-D"
    ],
    smiley: [
        ":)",
        ":-)"
    ],
    smiling_imp: [
        "]:)",
        "]:-)"
    ],
    sob: [
        ":,'(",
        ":,'-(",
        ";(",
        ";-("
    ],
    stuck_out_tongue: [
        ":P",
        ":-P",
        ":p",
        ":-p"
    ],
    sunglasses: [
        "8-)",
        "B-)"
    ],
    sweat: [
        ",:(",
        ",:-("
    ],
    sweat_smile: [
        ",:)",
        ",:-)"
    ],
    unamused: [
        ":s",
        ":-S",
        ":z",
        ":-Z",
        ":$",
        ":-$"
    ],
    wink: [
        ";)",
        ";-)"
    ]
};
}),
"[project]/node_modules/react-emoji-render/lib/utils.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.escapeStringToBeUsedInRegExp = escapeStringToBeUsedInRegExp;
exports.stripNonStringElements = stripNonStringElements;
exports.returnNonStringStrippedElements = returnNonStringStrippedElements;
function _toConsumableArray(arr) {
    if (Array.isArray(arr)) {
        for(var i = 0, arr2 = Array(arr.length); i < arr.length; i++){
            arr2[i] = arr[i];
        }
        return arr2;
    } else {
        return Array.from(arr);
    }
}
var NON_STRING_PLACEHOLDER = "__REACT_EMOJI_RENDER_PLACEHOLDER__";
function escapeStringToBeUsedInRegExp(string) {
    return string.replace(/[.*+?^${}()|[\]\\]/g, "\\$&"); // $& means the whole matched string
}
function stripNonStringElements(children) {
    var strippedChildren = children.map(function(child) {
        return typeof child === "string" ? child : NON_STRING_PLACEHOLDER;
    }).join("");
    var elements = children.filter(function(child) {
        return typeof child !== "string";
    });
    return [
        strippedChildren,
        elements
    ];
}
function flatMap(array, mapper) {
    var result = [];
    for(var i = 0; i < array.length; ++i){
        var item = mapper(array[i], i, array);
        if (!Array.isArray(item)) {
            item = [
                item
            ];
        }
        for(var j = 0; j < item.length; ++j){
            result.push(item[j]);
        }
    }
    return result;
}
function returnNonStringStrippedElements(stripped, elements) {
    if (!stripped || !Array.isArray(stripped)) return stripped;
    if (!elements || !elements.length) return stripped;
    var count = -1;
    function replacePlaceholder(string) {
        var split = string.split(NON_STRING_PLACEHOLDER);
        if (split.length > 1) {
            return flatMap(split, function(item, index) {
                if (index === 0) return [
                    item
                ];
                else {
                    count++;
                    return [
                        elements[count],
                        item
                    ];
                }
            });
        } else {
            count++;
            return [].concat(_toConsumableArray(split), [
                elements[count]
            ]);
        }
    }
    return flatMap(stripped, function(item) {
        if (typeof item === "string") {
            if (item.trim() === NON_STRING_PLACEHOLDER) {
                count++;
                return elements[count];
            } else if (item.includes(NON_STRING_PLACEHOLDER)) {
                return replacePlaceholder(item);
            }
        }
        return item;
    });
}
}),
"[project]/node_modules/react-emoji-render/lib/aliasRegex.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
var _asciiAliases = __turbopack_context__.r("[project]/node_modules/react-emoji-render/data/asciiAliases.js [app-client] (ecmascript)");
var _asciiAliases2 = _interopRequireDefault(_asciiAliases);
var _lodash = __turbopack_context__.r("[project]/node_modules/lodash.flatten/index.js [app-client] (ecmascript)");
var _lodash2 = _interopRequireDefault(_lodash);
var _utils = __turbopack_context__.r("[project]/node_modules/react-emoji-render/lib/utils.js [app-client] (ecmascript)");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var allowedAliasCharacters = "\\w\\-\\_\\+\\*\\(\\)\\!#&åô’çéãí“”,";
var startOfURL = "https?\\S*";
var names = (0, _lodash2.default)(Object.keys(_asciiAliases2.default).map(function(name) {
    return _asciiAliases2.default[name].map(_utils.escapeStringToBeUsedInRegExp);
})).sort().reverse().join("|"); // reverse sort for most specific match
var edgeCases = [
    startOfURL
].join("|");
function getAliasesRegex() {
    return new RegExp(// edge cases will be skipped
    // match both (and later distinguish between)
    // * ascii aliases like :o
    // * full emoji like :open_mouth:
    "(" + edgeCases + ")?(" + names + "|:)([" + allowedAliasCharacters + "]*:)?", "g");
}
exports.default = getAliasesRegex;
}),
"[project]/node_modules/react-emoji-render/lib/normalizeProtocol.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = normalizeProtocol;
// ensure protocol has trailing : if missing
function normalizeProtocol(protocol) {
    if (protocol && !protocol.endsWith(":")) return protocol + ":";
    return protocol;
}
}),
"[project]/node_modules/react-emoji-render/lib/unicodeToCodepoint.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.default = unicodeToCodepoint;
// avoid runtime RegExp creation for not so smart,
// not JIT based, and old browsers / engines
// https://github.com/twitter/twemoji/blob/gh-pages/2/twemoji.js#L232
var UFE0Fg = /\uFE0F/g;
// \u200D is a zero-width joiner character
// https://github.com/twitter/twemoji/blob/gh-pages/2/twemoji.js#L235
var U200D = String.fromCharCode(0x200d);
// convert utf16 into code points
function toCodePoint(input) {
    var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "-";
    var codePoints = [];
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;
    var _iteratorError = undefined;
    try {
        for(var _iterator = input[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){
            var codePoint = _step.value;
            codePoints.push(codePoint.codePointAt(0).toString(16));
        }
    } catch (err) {
        _didIteratorError = true;
        _iteratorError = err;
    } finally{
        try {
            if (!_iteratorNormalCompletion && _iterator.return) {
                _iterator.return();
            }
        } finally{
            if (_didIteratorError) {
                throw _iteratorError;
            }
        }
    }
    return codePoints.join(separator);
}
function unicodeToCodepoint(input) {
    return toCodePoint(input.indexOf(U200D) < 0 ? input.replace(UFE0Fg, "") : input);
}
}),
"[project]/node_modules/react-emoji-render/data/aliases.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {

module.exports = {
    "0": "0️⃣",
    "1": "1️⃣",
    "2": "2️⃣",
    "3": "3️⃣",
    "4": "4️⃣",
    "5": "5️⃣",
    "6": "6️⃣",
    "7": "7️⃣",
    "8": "8️⃣",
    "9": "9️⃣",
    "10": "🔟",
    "100": "💯",
    "1234": "🔢",
    grinning_face: "😀",
    grinning_face_with_big_eyes: "😃",
    grinning_face_with_smiling_eyes: "😁",
    beaming_face_with_smiling_eyes: "😁",
    grinning_squinting_face: "😆",
    grinning_face_with_sweat: "😅",
    rolling_on_the_floor_laughing: "🤣",
    face_with_tears_of_joy: "😂",
    slightly_smiling_face: "🙂",
    upside_down_face: "🙃",
    winking_face: "😉",
    smiling_face_with_smiling_eyes: "😊",
    smiling_face_with_halo: "😇",
    smiling_face_with_hearts: "🥰",
    smiling_face_with_heart_eyes: "😍",
    smiling_face_with_tear: "🥲",
    star_struck: "🤩",
    face_blowing_a_kiss: "😘",
    kissing_face: "😗",
    smiling_face: "☺️",
    kissing_face_with_closed_eyes: "😚",
    kissing_face_with_smiling_eyes: "😙",
    face_savoring_food: "😋",
    face_with_tongue: "😛",
    winking_face_with_tongue: "😜",
    zany_face: "🤪",
    squinting_face_with_tongue: "😝",
    money_mouth_face: "🤑",
    hugging_face: "🤗",
    face_with_hand_over_mouth: "🤭",
    shushing_face: "🤫",
    thinking_face: "🤔",
    zipper_mouth_face: "🤐",
    face_with_raised_eyebrow: "🤨",
    neutral_face: "😐",
    expressionless_face: "😑",
    face_without_mouth: "😶",
    smirking_face: "😏",
    unamused_face: "😒",
    face_with_rolling_eyes: "🙄",
    grimacing_face: "😬",
    lying_face: "🤥",
    relieved_face: "😌",
    pensive_face: "😔",
    sleepy_face: "😪",
    drooling_face: "🤤",
    sleeping_face: "😴",
    face_with_medical_mask: "😷",
    face_with_thermometer: "🤒",
    face_with_head_bandage: "🤕",
    nauseated_face: "🤢",
    face_vomiting: "🤮",
    sneezing_face: "🤧",
    hot_face: "🥵",
    cold_face: "🥶",
    woozy_face: "🥴",
    dizzy_face: "😵",
    exploding_head: "🤯",
    cowboy_hat_face: "🤠",
    partying_face: "🥳",
    smiling_face_with_sunglasses: "😎",
    nerd_face: "🤓",
    face_with_monocle: "🧐",
    confused_face: "😕",
    worried_face: "😟",
    slightly_frowning_face: "🙁",
    frowning_face: "☹",
    face_with_open_mouth: "😮",
    hushed_face: "😯",
    astonished_face: "😲",
    flushed_face: "😳",
    pleading_face: "🥺",
    frowning_face_with_open_mouth: "😦",
    anguished_face: "😧",
    fearful_face: "😨",
    anxious_face_with_sweat: "😰",
    sad_but_relieved_face: "😥",
    crying_face: "😢",
    loudly_crying_face: "😭",
    face_screaming_in_fear: "😱",
    confounded_face: "😖",
    persevering_face: "😣",
    disappointed_face: "😞",
    downcast_face_with_sweat: "😓",
    weary_face: "😩",
    tired_face: "😫",
    yawning_face: "🥱",
    face_with_steam_from_nose: "😤",
    pouting_face: "😡",
    angry_face: "😠",
    face_with_symbols_on_mouth: "🤬",
    smiling_face_with_horns: "😈",
    angry_face_with_horns: "👿",
    skull: "💀",
    skull_and_crossbones: "☠️",
    pile_of_poo: "💩",
    clown_face: "🤡",
    ogre: "👹",
    goblin: "👺",
    ghost: "👻",
    alien: "👽",
    alien_monster: "👾",
    robot: "🤖",
    grinning_cat: "😺",
    grinning_cat_with_smiling_eyes: "😸",
    cat_with_tears_of_joy: "😹",
    smiling_cat_with_heart_eyes: "😻",
    cat_with_wry_smile: "😼",
    kissing_cat: "😽",
    weary_cat: "🙀",
    crying_cat: "😿",
    pouting_cat: "😾",
    see_no_evil_monkey: "🙈",
    hear_no_evil_monkey: "🙉",
    speak_no_evil_monkey: "🙊",
    kiss_mark: "💋",
    love_letter: "💌",
    heart_with_arrow: "💘",
    heart_with_ribbon: "💝",
    sparkling_heart: "💖",
    growing_heart: "💗",
    beating_heart: "💓",
    revolving_hearts: "💞",
    two_hearts: "💕",
    heart_decoration: "💟",
    heart_exclamation: "❣️",
    broken_heart: "💔",
    red_heart: "❤️",
    orange_heart: "🧡",
    yellow_heart: "💛",
    green_heart: "💚",
    blue_heart: "💙",
    purple_heart: "💜",
    brown_heart: "🤎",
    black_heart: "🖤",
    white_heart: "🤍",
    hundred_points: "💯",
    anger_symbol: "💢",
    collision: "💥",
    dizzy: "💫",
    sweat_droplets: "💦",
    dashing_away: "💨",
    hole: "🕳️",
    bomb: "💣",
    speech_balloon: "💬",
    eye_in_speech_bubble: "👁‍🗨",
    left_speech_bubble: "🗨️",
    right_anger_bubble: "🗯️",
    thought_balloon: "💭",
    zzz: "💤",
    waving_hand: "👋",
    raised_back_of_hand: "🤚",
    hand_with_fingers_splayed: "🖐",
    raised_hand: "✋",
    vulcan_salute: "🖖",
    ok_hand: "👌",
    pinching_hand: "🤏",
    victory_hand: "✌",
    crossed_fingers: "🤞",
    love_you_gesture: "🤟",
    sign_of_the_horns: "🤘",
    call_me_hand: "🤙",
    backhand_index_pointing_left: "👈",
    backhand_index_pointing_right: "👉",
    backhand_index_pointing_up: "👆",
    middle_finger: "🖕",
    backhand_index_pointing_down: "👇",
    index_pointing_up: "☝️",
    thumbs_up: "👍",
    thumbs_down: "👎",
    raised_fist: "✊",
    oncoming_fist: "👊",
    left_facing_fist: "🤛",
    right_facing_fist: "🤜",
    clapping_hands: "👏",
    raising_hands: "🙌",
    open_hands: "👐",
    palms_up_together: "🤲",
    handshake: "🤝",
    folded_hands: "🙏",
    writing_hand: "✍️",
    nail_polish: "💅",
    selfie: "🤳",
    flexed_biceps: "💪",
    mechanical_arm: "🦾",
    mechanical_leg: "🦿",
    leg: "🦵",
    foot: "🦶",
    ear: "👂",
    ear_with_hearing_aid: "🦻",
    nose: "👃",
    brain: "🧠",
    tooth: "🦷",
    bone: "🦴",
    eyes: "👀",
    eye: "👁️",
    tongue: "👅",
    mouth: "👄",
    baby: "👶",
    child: "🧒",
    boy: "👦",
    girl: "👧",
    person: "🧑",
    person_blond_hair: "👱",
    man: "👨",
    man_beard: "🧔",
    man_red_hair: "👨‍🦰",
    man_curly_hair: "👨‍🦱",
    man_white_hair: "👨‍🦳",
    man_bald: "👨‍🦲",
    woman: "👩",
    woman_red_hair: "👩‍🦰",
    person_red_hair: "🧑‍🦰",
    woman_curly_hair: "👩‍🦱",
    person_curly_hair: "🧑‍🦱",
    woman_white_hair: "👩‍🦳",
    person_white_hair: "🧑‍🦳",
    woman_bald: "👩‍🦲",
    person_bald: "🧑‍🦲",
    woman_blond_hair: "👱‍♀️",
    man_blond_hair: "👱‍♂️",
    older_person: "🧓",
    old_man: "👴",
    old_woman: "👵",
    person_frowning: "🙍",
    man_frowning: "🙍‍♂",
    woman_frowning: "🙍‍♀",
    person_pouting: "🙎",
    man_pouting: "🙎‍♂",
    woman_pouting: "🙎‍♀",
    person_gesturing_no: "🙅",
    man_gesturing_no: "🙅‍♂",
    woman_gesturing_no: "🙅‍♀",
    person_gesturing_ok: "🙆",
    man_gesturing_ok: "🙆‍♂",
    woman_gesturing_ok: "🙆‍♀",
    person_tipping_hand: "💁",
    man_tipping_hand: "💁‍♂",
    woman_tipping_hand: "💁‍♀",
    person_raising_hand: "🙋",
    man_raising_hand: "🙋‍♂",
    woman_raising_hand: "🙋‍♀",
    deaf_person: "🧏",
    deaf_man: "🧏‍♂",
    deaf_woman: "🧏‍♀",
    person_bowing: "🙇",
    man_bowing: "🙇‍♂",
    woman_bowing: "🙇‍♀",
    person_facepalming: "🤦",
    man_facepalming: "🤦‍♂",
    woman_facepalming: "🤦‍♀",
    person_shrugging: "🤷",
    man_shrugging: "🤷‍♂",
    woman_shrugging: "🤷‍♀",
    health_worker: "🧑‍⚕️",
    man_health_worker: "👨‍⚕️",
    woman_health_worker: "👩‍⚕️",
    student: "🧑‍🎓",
    man_student: "👨‍🎓",
    woman_student: "👩‍🎓",
    teacher: "🧑‍🏫",
    man_teacher: "👨‍🏫",
    woman_teacher: "👩‍🏫",
    judge: "🧑‍⚖️",
    man_judge: "👨‍⚖️",
    woman_judge: "👩‍⚖️",
    farmer: "🧑‍🌾",
    man_farmer: "👨‍🌾",
    woman_farmer: "👩‍🌾",
    cook: "🧑‍🍳",
    man_cook: "👨‍🍳",
    woman_cook: "👩‍🍳",
    mechanic: "🧑‍🔧",
    man_mechanic: "👨‍🔧",
    woman_mechanic: "👩‍🔧",
    factory_worker: "🧑‍🏭",
    man_factory_worker: "👨‍🏭",
    woman_factory_worker: "👩‍🏭",
    office_worker: "🧑‍💼",
    man_office_worker: "👨‍💼",
    woman_office_worker: "👩‍💼",
    scientist: "🧑‍🔬",
    man_scientist: "👨‍🔬",
    woman_scientist: "👩‍🔬",
    technologist: "🧑‍💻",
    man_technologist: "👨‍💻",
    woman_technologist: "👩‍💻",
    singer: "🧑‍🎤",
    man_singer: "👨‍🎤",
    woman_singer: "👩‍🎤",
    artist: "🧑‍🎨",
    man_artist: "👨‍🎨",
    woman_artist: "👩‍🎨",
    pilot: "🧑‍✈️",
    man_pilot: "👨‍✈️",
    woman_pilot: "👩‍✈️",
    astronaut: "🧑‍🚀",
    man_astronaut: "👨‍🚀",
    woman_astronaut: "👩‍🚀",
    firefighter: "🧑‍🚒",
    man_firefighter: "👨‍🚒",
    woman_firefighter: "👩‍🚒",
    police_officer: "👮",
    man_police_officer: "👮‍♂",
    woman_police_officer: "👮‍♀",
    detective: "🕵",
    man_detective: "🕵️‍♂️",
    woman_detective: "🕵️‍♀️",
    guard: "💂",
    man_guard: "💂‍♂",
    woman_guard: "💂‍♀",
    construction_worker: "👷",
    man_construction_worker: "👷‍♂",
    woman_construction_worker: "👷‍♀",
    prince: "🤴",
    princess: "👸",
    person_wearing_turban: "👳",
    man_wearing_turban: "👳‍♂",
    woman_wearing_turban: "👳‍♀",
    man_with_skullcap: "👲",
    woman_with_headscarf: "🧕",
    man_in_tuxedo: "🤵",
    bride_with_veil: "👰",
    pregnant_woman: "🤰",
    breast_feeding: "🤱",
    baby_angel: "👼",
    santa_claus: "🎅",
    mrs_claus: "🤶",
    superhero: "🦸",
    man_superhero: "🦸‍♂",
    woman_superhero: "🦸‍♀",
    supervillain: "🦹",
    man_supervillain: "🦹‍♂",
    woman_supervillain: "🦹‍♀",
    mage: "🧙",
    man_mage: "🧙‍♂",
    woman_mage: "🧙‍♀",
    fairy: "🧚",
    man_fairy: "🧚‍♂",
    woman_fairy: "🧚‍♀",
    vampire: "🧛",
    man_vampire: "🧛‍♂",
    woman_vampire: "🧛‍♀",
    merperson: "🧜",
    merman: "🧜‍♂️",
    mermaid: "🧜‍♀️",
    elf: "🧝",
    man_elf: "🧝‍♂",
    woman_elf: "🧝‍♀",
    genie: "🧞",
    man_genie: "🧞‍♂",
    woman_genie: "🧞‍♀",
    zombie: "🧟",
    man_zombie: "🧟‍♂",
    woman_zombie: "🧟‍♀",
    person_getting_massage: "💆",
    man_getting_massage: "💆‍♂",
    woman_getting_massage: "💆‍♀",
    person_getting_haircut: "💇",
    man_getting_haircut: "💇‍♂",
    woman_getting_haircut: "💇‍♀",
    person_walking: "🚶",
    man_walking: "🚶‍♂",
    woman_walking: "🚶‍♀",
    person_standing: "🧍",
    man_standing: "🧍‍♂",
    woman_standing: "🧍‍♀",
    person_kneeling: "🧎",
    man_kneeling: "🧎‍♂",
    woman_kneeling: "🧎‍♀",
    person_with_probing_cane: "🧑‍🦯",
    man_with_probing_cane: "👨‍🦯",
    woman_with_probing_cane: "👩‍🦯",
    person_in_motorized_wheelchair: "🧑‍🦼",
    man_in_motorized_wheelchair: "👨‍🦼",
    woman_in_motorized_wheelchair: "👩‍🦼",
    person_in_manual_wheelchair: "🧑‍🦽",
    man_in_manual_wheelchair: "👨‍🦽",
    woman_in_manual_wheelchair: "👩‍🦽",
    person_running: "🏃",
    man_running: "🏃‍♂",
    woman_running: "🏃‍♀",
    woman_dancing: "💃",
    man_dancing: "🕺",
    man_in_suit_levitating: "🕴",
    people_with_bunny_ears: "👯",
    men_with_bunny_ears: "👯‍♂",
    women_with_bunny_ears: "👯‍♀",
    person_in_steamy_room: "🧖",
    man_in_steamy_room: "🧖‍♂️",
    woman_in_steamy_room: "🧖‍♀️",
    person_climbing: "🧗",
    man_climbing: "🧗‍♂️",
    woman_climbing: "🧗‍♀️",
    person_fencing: "🤺",
    horse_racing: "🏇",
    skier: "⛷️",
    snowboarder: "🏂",
    person_golfing: "🏌",
    man_golfing: "🏌♂️",
    woman_golfing: "🏌‍♀️",
    person_surfing: "🏄",
    man_surfing: "🏄‍♂",
    woman_surfing: "🏄‍♀",
    person_rowing_boat: "🚣",
    man_rowing_boat: "🚣‍♂",
    woman_rowing_boat: "🚣‍♀",
    person_swimming: "🏊",
    man_swimming: "🏊‍♂",
    woman_swimming: "🏊‍♀",
    person_bouncing_ball: "⛹",
    man_bouncing_ball: "⛹️‍♂️",
    woman_bouncing_ball: "⛹️‍♀️",
    person_lifting_weights: "🏋",
    man_lifting_weights: "🏋️‍♂️",
    woman_lifting_weights: "🏋️‍♀️",
    person_biking: "🚴",
    man_biking: "🚴‍♂",
    woman_biking: "🚴‍♀",
    person_mountain_biking: "🚵",
    man_mountain_biking: "🚵‍♂",
    woman_mountain_biking: "🚵‍♀",
    person_cartwheeling: "🤸",
    man_cartwheeling: "🤸‍♂",
    woman_cartwheeling: "🤸‍♀",
    people_wrestling: "🤼",
    men_wrestling: "🤼‍♂",
    women_wrestling: "🤼‍♀",
    person_playing_water_polo: "🤽",
    man_playing_water_polo: "🤽‍♂",
    woman_playing_water_polo: "🤽‍♀",
    person_playing_handball: "🤾",
    man_playing_handball: "🤾‍♂",
    woman_playing_handball: "🤾‍♀",
    person_juggling: "🤹",
    man_juggling: "🤹‍♂️",
    woman_juggling: "🤹‍♀️",
    person_in_lotus_position: "🧘",
    man_in_lotus_position: "🧘‍♂️",
    woman_in_lotus_position: "🧘‍♀️",
    person_taking_bath: "🛀",
    person_in_bed: "🛌",
    people_holding_hands: "🧑‍🤝‍🧑",
    women_holding_hands: "👭",
    woman_and_man_holding_hands: "👫",
    men_holding_hands: "👬",
    kiss: "💋",
    kiss_woman_man: "👩‍❤️‍💋‍👨",
    kiss_man_man: "👨‍❤️‍💋‍👨",
    kiss_woman_woman: "👩‍❤️‍💋‍👩",
    couple_with_heart: "💑",
    couple_with_heart_woman_man: "👩‍❤️‍👨",
    couple_with_heart_man_man: "👨‍❤‍👨",
    couple_with_heart_woman_woman: "👩‍❤‍👩",
    family: "👪",
    family_man_woman_boy: "👨‍👩‍👦",
    family_man_woman_girl: "👨‍👩‍👧",
    family_man_woman_girl_boy: "👨‍👩‍👧‍👦",
    family_man_woman_boy_boy: "👨‍👩‍👦‍👦",
    family_man_woman_girl_girl: "👨‍👩‍👧‍👧",
    family_man_man_boy: "👨‍👨‍👦",
    family_man_man_girl: "👨‍👨‍👧",
    family_man_man_girl_boy: "👨‍👨‍👧‍👦",
    family_man_man_boy_boy: "👨‍👨‍👦‍👦",
    family_man_man_girl_girl: "👨‍👨‍👧‍👧",
    family_woman_woman_boy: "👩‍👩‍👦",
    family_woman_woman_girl: "👩‍👩‍👧",
    family_woman_woman_girl_boy: "👩‍👩‍👧‍👦",
    family_woman_woman_boy_boy: "👩‍👩‍👦‍👦",
    family_woman_woman_girl_girl: "👩‍👩‍👧‍👧",
    family_man_boy: "👨‍👦",
    family_man_boy_boy: "👨‍👦‍👦",
    family_man_girl: "👨‍👧",
    family_man_girl_boy: "👨‍👧‍👦",
    family_man_girl_girl: "👨‍👧‍👧",
    family_woman_boy: "👩‍👦",
    family_woman_boy_boy: "👩‍👦‍👦",
    family_woman_girl: "👩‍👧",
    family_woman_girl_boy: "👩‍👧‍👦",
    family_woman_girl_girl: "👩‍👧‍👧",
    speaking_head: "🗣",
    bust_in_silhouette: "👤",
    busts_in_silhouette: "👥",
    footprints: "👣",
    monkey_face: "🐵",
    monkey: "🐒",
    gorilla: "🦍",
    orangutan: "🦧",
    dog_face: "🐶",
    dog: "🐶",
    guide_dog: "🦮",
    service_dog: "🐕‍🦺",
    poodle: "🐩",
    wolf: "🐺",
    fox: "🦊",
    raccoon: "🦝",
    cat_face: "🐱",
    cat: "🐱",
    lion: "🦁",
    tiger_face: "🐯",
    tiger: "🐯",
    leopard: "🐆",
    horse_face: "🐴",
    horse: "🐴",
    unicorn: "🦄",
    zebra: "🦓",
    deer: "🦌",
    cow_face: "🐮",
    ox: "🐂",
    water_buffalo: "🐃",
    cow: "🐮",
    pig_face: "🐷",
    pig: "🐷",
    boar: "🐗",
    pig_nose: "🐽",
    ram: "🐏",
    ewe: "🐑",
    goat: "🐐",
    camel: "🐫",
    two_hump_camel: "🐫",
    llama: "🦙",
    giraffe: "🦒",
    elephant: "🐘",
    rhinoceros: "🦏",
    hippopotamus: "🦛",
    mouse_face: "🐭",
    mouse: "🐭",
    rat: "🐀",
    hamster: "🐹",
    rabbit_face: "🐰",
    rabbit: "🐰",
    chipmunk: "🐿️",
    hedgehog: "🦔",
    bat: "🦇",
    bear: "🐻",
    koala: "🐨",
    panda: "🐼",
    sloth: "🦥",
    otter: "🦦",
    skunk: "🦨",
    kangaroo: "🦘",
    badger: "🦡",
    paw_prints: "🐾",
    turkey: "🦃",
    chicken: "🐔",
    rooster: "🐓",
    hatching_chick: "🐣",
    baby_chick: "🐤",
    front_facing_baby_chick: "🐥",
    bird: "🐦",
    penguin: "🐧",
    dove: "🕊",
    eagle: "🦅",
    duck: "🦆",
    swan: "🦢",
    owl: "🦉",
    flamingo: "🦩",
    peacock: "🦚",
    parrot: "🦜",
    frog: "🐸",
    crocodile: "🐊",
    turtle: "🐢",
    lizard: "🦎",
    snake: "🐍",
    dragon_face: "🐲",
    dragon: "🐉",
    sauropod: "🦕",
    t_rex: "🦖",
    spouting_whale: "🐳",
    whale: "🐳",
    dolphin: "🐬",
    fish: "🐟",
    tropical_fish: "🐠",
    blowfish: "🐡",
    shark: "🦈",
    octopus: "🐙",
    spiral_shell: "🐚",
    snail: "🐌",
    butterfly: "🦋",
    bug: "🐛",
    ant: "🐜",
    honeybee: "🐝",
    lady_beetle: "🐞",
    cricket: "🦗",
    spider: "🕷️",
    spider_web: "🕸️",
    scorpion: "🦂",
    mosquito: "🦟",
    microbe: "🦠",
    bouquet: "💐",
    cherry_blossom: "🌸",
    white_flower: "💮",
    rosette: "🏵️",
    rose: "🌹",
    wilted_flower: "🥀",
    hibiscus: "🌺",
    sunflower: "🌻",
    blossom: "🌼",
    tulip: "🌷",
    seedling: "🌱",
    evergreen_tree: "🌲",
    deciduous_tree: "🌳",
    palm_tree: "🌴",
    cactus: "🌵",
    sheaf_of_rice: "🌾",
    herb: "🌿",
    shamrock: "☘️",
    four_leaf_clover: "🍀",
    maple_leaf: "🍁",
    fallen_leaf: "🍂",
    leaf_fluttering_in_wind: "🍃",
    grapes: "🍇",
    melon: "🍈",
    watermelon: "🍉",
    tangerine: "🍊",
    lemon: "🍋",
    banana: "🍌",
    pineapple: "🍍",
    mango: "🥭",
    red_apple: "🍎",
    green_apple: "🍏",
    pear: "🍐",
    peach: "🍑",
    cherries: "🍒",
    strawberry: "🍓",
    kiwi_fruit: "🥝",
    tomato: "🍅",
    coconut: "🥥",
    avocado: "🥑",
    eggplant: "🍆",
    potato: "🥔",
    carrot: "🥕",
    ear_of_corn: "🌽",
    hot_pepper: "🌶️",
    cucumber: "🥒",
    leafy_green: "🥬",
    broccoli: "🥦",
    garlic: "🧄",
    onion: "🧅",
    mushroom: "🍄",
    peanuts: "🥜",
    chestnut: "🌰",
    bread: "🍞",
    croissant: "🥐",
    baguette_bread: "🥖",
    pretzel: "🥨",
    bagel: "🥯",
    pancakes: "🥞",
    waffle: "🧇",
    cheese_wedge: "🧀",
    meat_on_bone: "🍖",
    poultry_leg: "🍗",
    cut_of_meat: "🥩",
    bacon: "🥓",
    hamburger: "🍔",
    french_fries: "🍟",
    pizza: "🍕",
    hot_dog: "🌭",
    sandwich: "🥪",
    taco: "🌮",
    burrito: "🌯",
    stuffed_flatbread: "🥙",
    falafel: "🧆",
    egg: "🥚",
    cooking: "🍳",
    shallow_pan_of_food: "🥘",
    pot_of_food: "🍲",
    bowl_with_spoon: "🥣",
    green_salad: "🥗",
    popcorn: "🍿",
    butter: "🧈",
    salt: "🧂",
    canned_food: "🥫",
    bento_box: "🍱",
    rice_cracker: "🍘",
    rice_ball: "🍙",
    cooked_rice: "🍚",
    curry_rice: "🍛",
    steaming_bowl: "🍜",
    spaghetti: "🍝",
    roasted_sweet_potato: "🍠",
    oden: "🍢",
    sushi: "🍣",
    fried_shrimp: "🍤",
    fish_cake_with_swirl: "🍥",
    moon_cake: "🥮",
    dango: "🍡",
    dumpling: "🥟",
    fortune_cookie: "🥠",
    takeout_box: "🥡",
    crab: "🦀",
    lobster: "🦞",
    shrimp: "🦐",
    squid: "🦑",
    oyster: "🦪",
    soft_ice_cream: "🍦",
    shaved_ice: "🍧",
    ice_cream: "🍨",
    doughnut: "🍩",
    cookie: "🍪",
    birthday_cake: "🎂",
    shortcake: "🍰",
    cupcake: "🧁",
    pie: "🥧",
    chocolate_bar: "🍫",
    candy: "🍬",
    lollipop: "🍭",
    custard: "🍮",
    honey_pot: "🍯",
    baby_bottle: "🍼",
    glass_of_milk: "🥛",
    hot_beverage: "☕",
    teacup_without_handle: "🍵",
    sake: "🍶",
    bottle_with_popping_cork: "🍾",
    wine_glass: "🍷",
    cocktail_glass: "🍸",
    tropical_drink: "🍹",
    beer_mug: "🍺",
    clinking_beer_mugs: "🍻",
    clinking_glasses: "🥂",
    tumbler_glass: "🥃",
    cup_with_straw: "🥤",
    beverage_box: "🧃",
    mate: "🧉",
    ice: "🧊",
    chopsticks: "🥢",
    fork_and_knife_with_plate: "🍽",
    fork_and_knife: "🍴",
    spoon: "🥄",
    kitchen_knife: "🔪",
    amphora: "🏺",
    globe_showing_europe_africa: "🌍",
    globe_showing_americas: "🌎",
    globe_showing_asia_australia: "🌏",
    globe_with_meridians: "🌐",
    world_map: "🗺️",
    map_of_japan: "🗾",
    compass: "🧭",
    snow_capped_mountain: "🏔️",
    mountain: "⛰️",
    volcano: "🌋",
    mount_fuji: "🗻",
    camping: "🏕️",
    beach_with_umbrella: "🏖️",
    desert: "🏜️",
    desert_island: "🏝️",
    national_park: "🏞️",
    stadium: "🏟️",
    classical_building: "🏛️",
    building_construction: "🏗️",
    brick: "🧱",
    houses: "🏘",
    derelict_house: "🏚",
    house: "🏠",
    house_with_garden: "🏡",
    office_building: "🏢",
    japanese_post_office: "🏣",
    post_office: "🏣",
    hospital: "🏥",
    bank: "🏦",
    hotel: "🏨",
    love_hotel: "🏩",
    convenience_store: "🏪",
    school: "🏫",
    department_store: "🏬",
    factory: "🏭",
    japanese_castle: "🏯",
    castle: "🏰",
    wedding: "💒",
    tokyo_tower: "🗼",
    statue_of_liberty: "🗽",
    church: "⛪",
    mosque: "🕌",
    hindu_temple: "🛕",
    synagogue: "🕍",
    shinto_shrine: "⛩️",
    kaaba: "🕋",
    fountain: "⛲",
    tent: "⛺",
    foggy: "🌁",
    night_with_stars: "🌃",
    cityscape: "🏙️",
    sunrise_over_mountains: "🌄",
    sunrise: "🌅",
    cityscape_at_dusk: "🌆",
    sunset: "🌇",
    bridge_at_night: "🌉",
    hot_springs: "♨",
    carousel_horse: "🎠",
    ferris_wheel: "🎡",
    roller_coaster: "🎢",
    barber_pole: "💈",
    circus_tent: "🎪",
    locomotive: "🚂",
    railway_car: "🚃",
    high_speed_train: "🚄",
    bullet_train: "🚅",
    train: "🚋",
    metro: "🚇",
    light_rail: "🚈",
    station: "🚉",
    tram: "🚊",
    monorail: "🚝",
    mountain_railway: "🚞",
    tram_car: "🚋",
    bus: "🚌",
    oncoming_bus: "🚍",
    trolleybus: "🚎",
    minibus: "🚐",
    ambulance: "🚑",
    fire_engine: "🚒",
    police_car: "🚓",
    oncoming_police_car: "🚔",
    taxi: "🚕",
    oncoming_taxi: "🚖",
    automobile: "🚗",
    oncoming_automobile: "🚘",
    sport_utility_vehicle: "🚙",
    delivery_truck: "🚚",
    articulated_lorry: "🚛",
    tractor: "🚜",
    racing_car: "🏎️",
    motorcycle: "🏍",
    motor_scooter: "🛵",
    manual_wheelchair: "🦽",
    motorized_wheelchair: "🦼",
    auto_rickshaw: "🛺",
    bicycle: "🚲",
    kick_scooter: "🛴",
    skateboard: "🛹",
    bus_stop: "🚏",
    motorway: "🛣️",
    railway_track: "🛤️",
    oil_drum: "🛢️",
    fuel_pump: "⛽",
    police_car_light: "🚨",
    horizontal_traffic_light: "🚥",
    vertical_traffic_light: "🚦",
    stop_sign: "🛑",
    construction: "🚧",
    anchor: "⚓",
    sailboat: "⛵",
    canoe: "🛶",
    speedboat: "🚤",
    passenger_ship: "🛳️",
    ferry: "⛴️",
    motor_boat: "🛥️",
    ship: "🚢",
    airplane: "✈️",
    small_airplane: "🛩️",
    airplane_departure: "🛫",
    airplane_arrival: "🛬",
    parachute: "🪂",
    seat: "💺",
    helicopter: "🚁",
    suspension_railway: "🚟",
    mountain_cableway: "🚠",
    aerial_tramway: "🚡",
    satellite: "🛰️",
    rocket: "🚀",
    flying_saucer: "🛸",
    bellhop_bell: "🛎️",
    luggage: "🧳",
    hourglass_done: "⌛",
    hourglass_not_done: "⏳",
    watch: "⌚",
    alarm_clock: "⏰",
    stopwatch: "⏱️",
    timer_clock: "⏲️",
    mantelpiece_clock: "🕰️",
    twelve_o_clock: "🕛",
    twelve_thirty: "🕧",
    one_o_clock: "🕐",
    one_thirty: "🕜",
    two_o_clock: "🕑",
    two_thirty: "🕝",
    three_o_clock: "🕒",
    three_thirty: "🕞",
    four_o_clock: "🕓",
    four_thirty: "🕟",
    five_o_clock: "🕔",
    five_thirty: "🕠",
    six_o_clock: "🕕",
    six_thirty: "🕡",
    seven_o_clock: "🕖",
    seven_thirty: "🕢",
    eight_o_clock: "🕗",
    eight_thirty: "🕣",
    nine_o_clock: "🕘",
    nine_thirty: "🕤",
    ten_o_clock: "🕙",
    ten_thirty: "🕥",
    eleven_o_clock: "🕚",
    eleven_thirty: "🕦",
    new_moon: "🌑",
    waxing_crescent_moon: "🌒",
    first_quarter_moon: "🌓",
    waxing_gibbous_moon: "🌔",
    full_moon: "🌕",
    waning_gibbous_moon: "🌖",
    last_quarter_moon: "🌗",
    waning_crescent_moon: "🌘",
    crescent_moon: "🌙",
    new_moon_face: "🌚",
    first_quarter_moon_face: "🌛",
    last_quarter_moon_face: "🌜",
    thermometer: "🌡️",
    sun: "☀️",
    full_moon_face: "🌝",
    sun_with_face: "🌞",
    ringed_planet: "🪐",
    star: "⭐",
    glowing_star: "🌟",
    shooting_star: "🌠",
    milky_way: "🌌",
    cloud: "☁️",
    sun_behind_cloud: "⛅",
    cloud_with_lightning_and_rain: "⛈",
    sun_behind_small_cloud: "🌤",
    sun_behind_large_cloud: "🌥",
    sun_behind_rain_cloud: "🌦",
    cloud_with_rain: "🌧",
    cloud_with_snow: "🌨",
    cloud_with_lightning: "🌩",
    tornado: "🌪️",
    fog: "🌫️",
    wind_face: "🌬",
    cyclone: "🌀",
    rainbow: "🌈",
    closed_umbrella: "🌂",
    umbrella: "☂️",
    umbrella_with_rain_drops: "☔",
    umbrella_on_ground: "⛱️",
    high_voltage: "⚡",
    snowflake: "❄️",
    snowman: "☃️",
    snowman_without_snow: "⛄",
    comet: "☄️",
    fire: "🔥",
    droplet: "💧",
    water_wave: "🌊",
    jack_o_lantern: "🎃",
    christmas_tree: "🎄",
    fireworks: "🎆",
    sparkler: "🎇",
    firecracker: "🧨",
    sparkles: "✨",
    balloon: "🎈",
    party_popper: "🎉",
    confetti_ball: "🎊",
    tanabata_tree: "🎋",
    pine_decoration: "🎍",
    japanese_dolls: "🎎",
    carp_streamer: "🎏",
    wind_chime: "🎐",
    moon_viewing_ceremony: "🎑",
    red_envelope: "🧧",
    ribbon: "🎀",
    wrapped_gift: "🎁",
    reminder_ribbon: "🎗️",
    admission_tickets: "🎟️",
    ticket: "🎫",
    military_medal: "🎖",
    trophy: "🏆",
    sports_medal: "🏅",
    "1st_place_medal": "🥇",
    "2nd_place_medal": "🥈",
    "3rd_place_medal": "🥉",
    soccer_ball: "⚽",
    baseball: "⚾",
    softball: "🥎",
    basketball: "🏀",
    volleyball: "🏐",
    american_football: "🏈",
    rugby_football: "🏉",
    tennis: "🎾",
    flying_disc: "🥏",
    bowling: "🎳",
    cricket_game: "🏏",
    field_hockey: "🏑",
    ice_hockey: "🏒",
    lacrosse: "🥍",
    ping_pong: "🏓",
    badminton: "🏸",
    boxing_glove: "🥊",
    martial_arts_uniform: "🥋",
    goal_net: "🥅",
    flag_in_hole: "⛳",
    ice_skate: "⛸️",
    fishing_pole: "🎣",
    diving_mask: "🤿",
    running_shirt: "🎽",
    skis: "🎿",
    sled: "🛷",
    curling_stone: "🥌",
    direct_hit: "🎯",
    yo_yo: "🪀",
    kite: "🪁",
    pool_8_ball: "🎱",
    crystal_ball: "🔮",
    nazar_amulet: "🧿",
    video_game: "🎮",
    joystick: "🕹️",
    slot_machine: "🎰",
    game_die: "🎲",
    puzzle_piece: "🧩",
    teddy_bear: "🧸",
    spade_suit: "♠️",
    heart_suit: "♥️",
    diamond_suit: "♦️",
    club_suit: "♣️",
    chess_pawn: "♟",
    joker: "🃏",
    mahjong_red_dragon: "🀄",
    flower_playing_cards: "🎴",
    performing_arts: "🎭",
    framed_picture: "🖼",
    artist_palette: "🎨",
    thread: "🧵",
    yarn: "🧶",
    glasses: "👓",
    sunglasses: "😎",
    goggles: "🥽",
    lab_coat: "🥼",
    safety_vest: "🦺",
    necktie: "👔",
    t_shirt: "👕",
    jeans: "👖",
    scarf: "🧣",
    gloves: "🧤",
    coat: "🧥",
    socks: "🧦",
    dress: "👗",
    kimono: "👘",
    sari: "🥻",
    one_piece_swimsuit: "🩱",
    briefs: "🩲",
    shorts: "🩳",
    bikini: "👙",
    woman_s_clothes: "👚",
    purse: "👛",
    handbag: "👜",
    clutch_bag: "👝",
    shopping_bags: "🛍️",
    backpack: "🎒",
    man_s_shoe: "👞",
    running_shoe: "👟",
    hiking_boot: "🥾",
    flat_shoe: "🥿",
    high_heeled_shoe: "👠",
    woman_s_sandal: "👡",
    ballet_shoes: "🩰",
    woman_s_boot: "👢",
    crown: "👑",
    woman_s_hat: "👒",
    top_hat: "🎩",
    graduation_cap: "🎓",
    billed_cap: "🧢",
    rescue_worker_s_helmet: "⛑️",
    prayer_beads: "📿",
    lipstick: "💄",
    ring: "💍",
    gem_stone: "💎",
    muted_speaker: "🔇",
    speaker_low_volume: "🔈",
    speaker_medium_volume: "🔉",
    speaker_high_volume: "🔊",
    loudspeaker: "📢",
    megaphone: "📣",
    postal_horn: "📯",
    bell: "🔔",
    bell_with_slash: "🔕",
    musical_score: "🎼",
    musical_note: "🎵",
    musical_notes: "🎶",
    studio_microphone: "🎙️",
    level_slider: "🎚️",
    control_knobs: "🎛️",
    microphone: "🎤",
    headphone: "🎧",
    radio: "📻",
    saxophone: "🎷",
    guitar: "🎸",
    musical_keyboard: "🎹",
    trumpet: "🎺",
    violin: "🎻",
    banjo: "🪕",
    drum: "🥁",
    mobile_phone: "📱",
    mobile_phone_with_arrow: "📲",
    telephone: "☎",
    telephone_receiver: "📞",
    pager: "📟",
    fax_machine: "📠",
    battery: "🔋",
    electric_plug: "🔌",
    laptop: "💻",
    desktop_computer: "🖥️",
    printer: "🖨️",
    keyboard: "⌨️",
    computer_mouse: "🖱",
    trackball: "🖲️",
    computer_disk: "💽",
    floppy_disk: "💾",
    optical_disk: "💿",
    dvd: "📀",
    abacus: "🧮",
    movie_camera: "🎥",
    film_frames: "🎞️",
    film_projector: "📽️",
    clapper_board: "🎬",
    television: "📺",
    camera: "📷",
    camera_with_flash: "📸",
    video_camera: "📹",
    videocassette: "📼",
    magnifying_glass_tilted_left: "🔍",
    magnifying_glass_tilted_right: "🔎",
    candle: "🕯️",
    light_bulb: "💡",
    flashlight: "🔦",
    red_paper_lantern: "🏮",
    diya_lamp: "🪔",
    notebook_with_decorative_cover: "📔",
    closed_book: "📕",
    open_book: "📖",
    green_book: "📗",
    blue_book: "📘",
    orange_book: "📙",
    books: "📚",
    notebook: "📓",
    ledger: "📒",
    page_with_curl: "📃",
    scroll: "📜",
    page_facing_up: "📄",
    newspaper: "📰",
    rolled_up_newspaper: "🗞️",
    bookmark_tabs: "📑",
    bookmark: "🔖",
    label: "🏷️",
    money_bag: "💰",
    yen_banknote: "💴",
    dollar_banknote: "💵",
    euro_banknote: "💶",
    pound_banknote: "💷",
    money_with_wings: "💸",
    credit_card: "💳",
    receipt: "🧾",
    chart_increasing_with_yen: "💹",
    currency_exchange: "💱",
    heavy_dollar_sign: "💲",
    envelope: "✉",
    e_mail: "📧",
    incoming_envelope: "📨",
    envelope_with_arrow: "📩",
    outbox_tray: "📤",
    inbox_tray: "📥",
    package: "📦",
    closed_mailbox_with_raised_flag: "📫",
    closed_mailbox_with_lowered_flag: "📪",
    open_mailbox_with_raised_flag: "📬",
    open_mailbox_with_lowered_flag: "📭",
    postbox: "📮",
    ballot_box_with_ballot: "🗳️",
    pencil: "📝",
    black_nib: "✒️",
    fountain_pen: "🖋",
    pen: "🖊",
    paintbrush: "🖌",
    crayon: "🖍",
    memo: "📝",
    briefcase: "💼",
    file_folder: "📁",
    open_file_folder: "📂",
    card_index_dividers: "🗂️",
    calendar: "📆",
    tear_off_calendar: "📆",
    spiral_notepad: "🗒",
    spiral_calendar: "🗓",
    card_index: "📇",
    chart_increasing: "📈",
    chart_decreasing: "📉",
    bar_chart: "📊",
    clipboard: "📋",
    pushpin: "📌",
    round_pushpin: "📍",
    paperclip: "📎",
    linked_paperclips: "🖇️",
    straight_ruler: "📏",
    triangular_ruler: "📐",
    scissors: "✂️",
    card_file_box: "🗃️",
    file_cabinet: "🗄️",
    wastebasket: "🗑️",
    locked: "🔒",
    unlocked: "🔓",
    locked_with_pen: "🔏",
    locked_with_key: "🔐",
    key: "🔑",
    old_key: "🗝️",
    hammer: "🔨",
    axe: "🪓",
    pick: "⛏️",
    hammer_and_pick: "⚒️",
    hammer_and_wrench: "🛠️",
    dagger: "🗡",
    crossed_swords: "⚔️",
    pistol: "🔫",
    bow_and_arrow: "🏹",
    shield: "🛡️",
    wrench: "🔧",
    nut_and_bolt: "🔩",
    gear: "⚙️",
    clamp: "🗜",
    balance_scale: "⚖",
    probing_cane: "🦯",
    link: "🔗",
    chains: "⛓️",
    toolbox: "🧰",
    magnet: "🧲",
    alembic: "⚗️",
    test_tube: "🧪",
    petri_dish: "🧫",
    dna: "🧬",
    microscope: "🔬",
    telescope: "🔭",
    satellite_antenna: "📡",
    syringe: "💉",
    drop_of_blood: "🩸",
    pill: "💊",
    adhesive_bandage: "🩹",
    stethoscope: "🩺",
    door: "🚪",
    bed: "🛏️",
    couch_and_lamp: "🛋️",
    chair: "🪑",
    toilet: "🚽",
    shower: "🚿",
    bathtub: "🛁",
    razor: "🪒",
    lotion_bottle: "🧴",
    safety_pin: "🧷",
    broom: "🧹",
    basket: "🧺",
    roll_of_paper: "🧻",
    soap: "🧼",
    sponge: "🧽",
    fire_extinguisher: "🧯",
    shopping_cart: "🛒",
    cigarette: "🚬",
    coffin: "⚰️",
    funeral_urn: "⚱️",
    moai: "🗿",
    atm_sign: "🏧",
    litter_in_bin_sign: "🚮",
    potable_water: "🚰",
    wheelchair_symbol: "♿",
    men_s_room: "🚹",
    women_s_room: "🚺",
    restroom: "🚻",
    baby_symbol: "🚼",
    water_closet: "🚾",
    passport_control: "🛂",
    customs: "🛃",
    baggage_claim: "🛄",
    left_luggage: "🛅",
    warning: "⚠️",
    children_crossing: "🚸",
    no_entry: "⛔",
    prohibited: "🚫",
    no_bicycles: "🚳",
    no_smoking: "🚭",
    no_littering: "🚯",
    non_potable_water: "🚱",
    no_pedestrians: "🚷",
    no_mobile_phones: "📵",
    no_one_under_eighteen: "🔞",
    radioactive: "☢",
    biohazard: "☣",
    up_arrow: "⬆️",
    up_right_arrow: "↗️",
    right_arrow: "➡️",
    down_right_arrow: "↘️",
    down_arrow: "⬇️",
    down_left_arrow: "↙️",
    left_arrow: "⬅️",
    up_left_arrow: "↖️",
    up_down_arrow: "↕",
    left_right_arrow: "↔️",
    right_arrow_curving_left: "↩️",
    left_arrow_curving_right: "↪️",
    right_arrow_curving_up: "⤴️",
    right_arrow_curving_down: "⤵️",
    clockwise_vertical_arrows: "🔃",
    counterclockwise_arrows_button: "🔄",
    back_arrow: "🔙",
    end_arrow: "🔚",
    on_arrow: "🔛",
    soon_arrow: "🔜",
    top_arrow: "🔝",
    place_of_worship: "🛐",
    atom_symbol: "⚛️",
    om: "🇴🇲",
    star_of_david: "✡️",
    wheel_of_dharma: "☸️",
    yin_yang: "☯️",
    latin_cross: "✝️",
    orthodox_cross: "☦️",
    star_and_crescent: "☪️",
    peace_symbol: "☮️",
    menorah: "🕎",
    dotted_six_pointed_star: "🔯",
    aries: "♈",
    taurus: "♉",
    gemini: "♊",
    cancer: "♋",
    leo: "♌",
    virgo: "♍",
    libra: "♎",
    scorpio: "♏",
    sagittarius: "♐",
    capricorn: "♑",
    aquarius: "♒",
    pisces: "♓",
    ophiuchus: "⛎",
    shuffle_tracks_button: "🔀",
    repeat_button: "🔁",
    repeat_single_button: "🔂",
    play_button: "▶️",
    fast_forward_button: "⏩",
    next_track_button: "⏭",
    play_or_pause_button: "⏯",
    reverse_button: "◀️",
    fast_reverse_button: "⏪",
    last_track_button: "⏮",
    upwards_button: "🔼",
    fast_up_button: "⏫",
    downwards_button: "🔽",
    fast_down_button: "⏬",
    pause_button: "⏸",
    stop_button: "⏹",
    record_button: "⏺",
    eject_button: "⏏️",
    cinema: "🎦",
    dim_button: "🔅",
    bright_button: "🔆",
    antenna_bars: "📶",
    vibration_mode: "📳",
    mobile_phone_off: "📴",
    female_sign: "♀️",
    male_sign: "♂️",
    medical_symbol: "⚕️",
    infinity: "♾",
    recycling_symbol: "♻️",
    fleur_de_lis: "⚜️",
    trident_emblem: "🔱",
    name_badge: "📛",
    japanese_symbol_for_beginner: "🔰",
    hollow_red_circle: "⭕",
    check_mark_button: "✅",
    check_box_with_check: "☑️",
    check_mark: "✔️",
    multiplication_sign: "✖️",
    cross_mark: "❌",
    cross_mark_button: "❎",
    plus_sign: "➕",
    minus_sign: "➖",
    division_sign: "➗",
    curly_loop: "➰",
    double_curly_loop: "➿",
    part_alternation_mark: "〽️",
    eight_spoked_asterisk: "✳️",
    eight_pointed_star: "✴️",
    sparkle: "❇️",
    double_exclamation_mark: "‼",
    exclamation_question_mark: "⁉",
    question_mark: "❓",
    white_question_mark: "❔",
    white_exclamation_mark: "❕",
    exclamation_mark: "❗",
    wavy_dash: "〰️",
    copyright: "©️",
    registered: "®️",
    trade_mark: "™️",
    keycap_: "*️⃣",
    keycap_0: "0️⃣",
    keycap_1: "1️⃣",
    keycap_2: "2️⃣",
    keycap_3: "3️⃣",
    keycap_4: "4️⃣",
    keycap_5: "5️⃣",
    keycap_6: "6️⃣",
    keycap_7: "7️⃣",
    keycap_8: "8️⃣",
    keycap_9: "9️⃣",
    keycap_10: "🔟",
    input_latin_uppercase: "🔠",
    input_latin_lowercase: "🔡",
    input_numbers: "🔢",
    input_symbols: "🔣",
    input_latin_letters: "🔤",
    a_button: "🅰️",
    ab_button: "🆎",
    b_button: "🅱️",
    cl_button: "🆑",
    cool_button: "🆒",
    free_button: "🆓",
    information: "ℹ️",
    id_button: "🆔",
    circled_m: "Ⓜ️",
    new_button: "🆕",
    ng_button: "🆖",
    o_button: "🅾️",
    ok_button: "🆗",
    p_button: "🅿️",
    sos_button: "🆘",
    up_button: "🆙",
    vs_button: "🆚",
    japanese_here_button: "🈁",
    japanese_service_charge_button: "🈂️",
    japanese_monthly_amount_button: "🈷️",
    japanese_not_free_of_charge_button: "🈶",
    japanese_reserved_button: "🈯",
    japanese_bargain_button: "🉐",
    japanese_discount_button: "🈹",
    japanese_free_of_charge_button: "🈚",
    japanese_prohibited_button: "🈲",
    japanese_acceptable_button: "🉑",
    japanese_application_button: "🈸",
    japanese_passing_grade_button: "🈴",
    japanese_vacancy_button: "🈳",
    japanese_congratulations_button: "㊗️",
    japanese_secret_button: "㊙️",
    japanese_open_for_business_button: "🈺",
    japanese_no_vacancy_button: "🈵",
    red_circle: "🔴",
    orange_circle: "🟠",
    yellow_circle: "🟡",
    green_circle: "🟢",
    blue_circle: "🔵",
    purple_circle: "🟣",
    brown_circle: "🟤",
    black_circle: "⚫",
    white_circle: "⚪",
    red_square: "🟥",
    orange_square: "🟧",
    yellow_square: "🟨",
    green_square: "🟩",
    blue_square: "🟦",
    purple_square: "🟪",
    brown_square: "🟫",
    black_large_square: "⬛",
    white_large_square: "⬜",
    large_red_square: "🟥",
    black_medium_square: "◼️",
    white_medium_square: "◻️",
    black_medium_small_square: "◾",
    white_medium_small_square: "◽",
    black_small_square: "▪️",
    white_small_square: "▫️",
    large_orange_diamond: "🔶",
    large_blue_diamond: "🔷",
    small_orange_diamond: "🔸",
    small_blue_diamond: "🔹",
    red_triangle_pointed_up: "🔺",
    red_triangle_pointed_down: "🔻",
    diamond_with_a_dot: "💠",
    radio_button: "🔘",
    white_square_button: "🔳",
    black_square_button: "🔲",
    chequered_flag: "🏁",
    triangular_flag: "🚩",
    crossed_flags: "🎌",
    black_flag: "🏴",
    white_flag: "🏳",
    rainbow_flag: "🏳️‍🌈",
    pirate_flag: "🏴‍☠",
    flag_ascension_island: "🇦🇨",
    flag_andorra: "🇦🇩",
    flag_united_arab_emirates: "🇦🇪",
    flag_afghanistan: "🇦🇫",
    flag_antigua_barbuda: "🇦🇬",
    flag_anguilla: "🇦🇮",
    flag_albania: "🇦🇱",
    flag_armenia: "🇦🇲",
    flag_angola: "🇦🇴",
    flag_antarctica: "🇦🇶",
    flag_argentina: "🇦🇷",
    flag_american_samoa: "🇦🇸",
    flag_austria: "🇦🇹",
    flag_australia: "🇦🇺",
    flag_aruba: "🇦🇼",
    flag_land_islands: "🇦🇽",
    flag_azerbaijan: "🇦🇿",
    flag_bosnia_herzegovina: "🇧🇦",
    flag_barbados: "🇧🇧",
    flag_bangladesh: "🇧🇩",
    flag_belgium: "🇧🇪",
    flag_burkina_faso: "🇧🇫",
    flag_bulgaria: "🇧🇬",
    flag_bahrain: "🇧🇭",
    flag_burundi: "🇧🇮",
    flag_benin: "🇧🇯",
    flag_st_barth_lemy: "🇧🇱",
    flag_bermuda: "🇧🇲",
    flag_brunei: "🇧🇳",
    flag_bolivia: "🇧🇴",
    flag_caribbean_netherlands: "🇧🇶",
    flag_brazil: "🇧🇷",
    flag_bahamas: "🇧🇸",
    flag_bhutan: "🇧🇹",
    flag_bouvet_island: "🇧🇻",
    flag_botswana: "🇧🇼",
    flag_belarus: "🇧🇾",
    flag_belize: "🇧🇿",
    flag_canada: "🇨🇦",
    flag_cocos_islands: "🇨🇨",
    flag_congo_kinshasa: "🇨🇩",
    flag_central_african_republic: "🇨🇫",
    flag_congo_brazzaville: "🇨🇬",
    flag_switzerland: "🇨🇭",
    flag_c_te_d_ivoire: "🇨🇮",
    flag_cook_islands: "🇨🇰",
    flag_chile: "🇨🇱",
    flag_cameroon: "🇨🇲",
    flag_china: "🇨🇳",
    flag_colombia: "🇨🇴",
    flag_clipperton_island: "🇨🇵",
    flag_costa_rica: "🇨🇷",
    flag_cuba: "🇨🇺",
    flag_cape_verde: "🇨🇻",
    flag_cura_ao: "🇨🇼",
    flag_christmas_island: "🇨🇽",
    flag_cyprus: "🇨🇾",
    flag_czechia: "🇨🇿",
    flag_germany: "🇩🇪",
    flag_diego_garcia: "🇩🇬",
    flag_djibouti: "🇩🇯",
    flag_denmark: "🇩🇰",
    flag_dominica: "🇩🇲",
    flag_dominican_republic: "🇩🇴",
    flag_algeria: "🇩🇿",
    flag_ceuta_melilla: "🇪🇦",
    flag_ecuador: "🇪🇨",
    flag_estonia: "🇪🇪",
    flag_egypt: "🇪🇬",
    flag_western_sahara: "🇪🇭",
    flag_eritrea: "🇪🇷",
    flag_spain: "🇪🇸",
    flag_ethiopia: "🇪🇹",
    flag_european_union: "🇪🇺",
    flag_finland: "🇫🇮",
    flag_fiji: "🇫🇯",
    flag_falkland_islands: "🇫🇰",
    flag_micronesia: "🇫🇲",
    flag_faroe_islands: "🇫🇴",
    flag_france: "🇫🇷",
    flag_gabon: "🇬🇦",
    flag_united_kingdom: "🇬🇧",
    flag_grenada: "🇬🇩",
    flag_georgia: "🇬🇪",
    flag_french_guiana: "🇬🇫",
    flag_guernsey: "🇬🇬",
    flag_ghana: "🇬🇭",
    flag_gibraltar: "🇬🇮",
    flag_greenland: "🇬🇱",
    flag_gambia: "🇬🇲",
    flag_guinea: "🇬🇳",
    flag_guadeloupe: "🇬🇵",
    flag_equatorial_guinea: "🇬🇶",
    flag_greece: "🇬🇷",
    flag_south_georgia_south_sandwich_islands: "🇬🇸",
    flag_guatemala: "🇬🇹",
    flag_guam: "🇬🇺",
    flag_guinea_bissau: "🇬🇼",
    flag_guyana: "🇬🇾",
    flag_hong_kong_sar_china: "🇭🇰",
    flag_heard_mcdonald_islands: "🇭🇲",
    flag_honduras: "🇭🇳",
    flag_croatia: "🇭🇷",
    flag_haiti: "🇭🇹",
    flag_hungary: "🇭🇺",
    flag_canary_islands: "🇮🇨",
    flag_indonesia: "🇮🇩",
    flag_ireland: "🇮🇪",
    flag_israel: "🇮🇱",
    flag_isle_of_man: "🇮🇲",
    flag_india: "🇮🇳",
    flag_british_indian_ocean_territory: "🇮🇴",
    flag_iraq: "🇮🇶",
    flag_iran: "🇮🇷",
    flag_iceland: "🇮🇸",
    flag_italy: "🇮🇹",
    flag_jersey: "🇯🇪",
    flag_jamaica: "🇯🇲",
    flag_jordan: "🇯🇴",
    flag_japan: "🇯🇵",
    flag_kenya: "🇰🇪",
    flag_kyrgyzstan: "🇰🇬",
    flag_cambodia: "🇰🇭",
    flag_kiribati: "🇰🇮",
    flag_comoros: "🇰🇲",
    flag_st_kitts_nevis: "🇰🇳",
    flag_north_korea: "🇰🇵",
    flag_south_korea: "🇰🇷",
    flag_kuwait: "🇰🇼",
    flag_cayman_islands: "🇰🇾",
    flag_kazakhstan: "🇰🇿",
    flag_laos: "🇱🇦",
    flag_lebanon: "🇱🇧",
    flag_st_lucia: "🇱🇨",
    flag_liechtenstein: "🇱🇮",
    flag_sri_lanka: "🇱🇰",
    flag_liberia: "🇱🇷",
    flag_lesotho: "🇱🇸",
    flag_lithuania: "🇱🇹",
    flag_luxembourg: "🇱🇺",
    flag_latvia: "🇱🇻",
    flag_libya: "🇱🇾",
    flag_morocco: "🇲🇦",
    flag_monaco: "🇲🇨",
    flag_moldova: "🇲🇩",
    flag_montenegro: "🇲🇪",
    flag_st_martin: "🇲🇫",
    flag_madagascar: "🇲🇬",
    flag_marshall_islands: "🇲🇭",
    flag_north_macedonia: "🇲🇰",
    flag_mali: "🇲🇱",
    flag_myanmar: "🇲🇲",
    flag_mongolia: "🇲🇳",
    flag_macao_sar_china: "🇲🇴",
    flag_northern_mariana_islands: "🇲🇵",
    flag_martinique: "🇲🇶",
    flag_mauritania: "🇲🇷",
    flag_montserrat: "🇲🇸",
    flag_malta: "🇲🇹",
    flag_mauritius: "🇲🇺",
    flag_maldives: "🇲🇻",
    flag_malawi: "🇲🇼",
    flag_mexico: "🇲🇽",
    flag_malaysia: "🇲🇾",
    flag_mozambique: "🇲🇿",
    flag_namibia: "🇳🇦",
    flag_new_caledonia: "🇳🇨",
    flag_niger: "🇳🇪",
    flag_norfolk_island: "🇳🇫",
    flag_nigeria: "🇳🇬",
    flag_nicaragua: "🇳🇮",
    flag_netherlands: "🇳🇱",
    flag_norway: "🇳🇴",
    flag_nepal: "🇳🇵",
    flag_nauru: "🇳🇷",
    flag_niue: "🇳🇺",
    flag_new_zealand: "🇳🇿",
    flag_oman: "🇴🇲",
    flag_panama: "🇵🇦",
    flag_peru: "🇵🇪",
    flag_french_polynesia: "🇵🇫",
    flag_papua_new_guinea: "🇵🇬",
    flag_philippines: "🇵🇭",
    flag_pakistan: "🇵🇰",
    flag_poland: "🇵🇱",
    flag_st_pierre_miquelon: "🇵🇲",
    flag_pitcairn_islands: "🇵🇳",
    flag_puerto_rico: "🇵🇷",
    flag_palestinian_territories: "🇵🇸",
    flag_portugal: "🇵🇹",
    flag_palau: "🇵🇼",
    flag_paraguay: "🇵🇾",
    flag_qatar: "🇶🇦",
    flag_r_union: "🇷🇪",
    flag_romania: "🇷🇴",
    flag_serbia: "🇷🇸",
    flag_russia: "🇷🇺",
    flag_rwanda: "🇷🇼",
    flag_saudi_arabia: "🇸🇦",
    flag_solomon_islands: "🇸🇧",
    flag_seychelles: "🇸🇨",
    flag_sudan: "🇸🇩",
    flag_sweden: "🇸🇪",
    flag_singapore: "🇸🇬",
    flag_st_helena: "🇸🇭",
    flag_slovenia: "🇸🇮",
    flag_svalbard_jan_mayen: "🇸🇯",
    flag_slovakia: "🇸🇰",
    flag_sierra_leone: "🇸🇱",
    flag_san_marino: "🇸🇲",
    flag_senegal: "🇸🇳",
    flag_somalia: "🇸🇴",
    flag_suriname: "🇸🇷",
    flag_south_sudan: "🇸🇸",
    flag_s_o_tom_pr_ncipe: "🇸🇹",
    flag_el_salvador: "🇸🇻",
    flag_sint_maarten: "🇸🇽",
    flag_syria: "🇸🇾",
    flag_eswatini: "🇸🇿",
    flag_tristan_da_cunha: "🇹🇦",
    flag_turks_caicos_islands: "🇹🇨",
    flag_chad: "🇹🇩",
    flag_french_southern_territories: "🇹🇫",
    flag_togo: "🇹🇬",
    flag_thailand: "🇹🇭",
    flag_tajikistan: "🇹🇯",
    flag_tokelau: "🇹🇰",
    flag_timor_leste: "🇹🇱",
    flag_turkmenistan: "🇹🇲",
    flag_tunisia: "🇹🇳",
    flag_tonga: "🇹🇴",
    flag_turkey: "🇹🇷",
    flag_trinidad_tobago: "🇹🇹",
    flag_tuvalu: "🇹🇻",
    flag_taiwan: "🇹🇼",
    flag_tanzania: "🇹🇿",
    flag_ukraine: "🇺🇦",
    flag_uganda: "🇺🇬",
    flag_u_s_outlying_islands: "🇺🇲",
    flag_united_nations: "🇺🇳",
    flag_united_states: "🇺🇸",
    flag_uruguay: "🇺🇾",
    flag_uzbekistan: "🇺🇿",
    flag_vatican_city: "🇻🇦",
    flag_st_vincent_grenadines: "🇻🇨",
    flag_venezuela: "🇻🇪",
    flag_british_virgin_islands: "🇻🇬",
    flag_u_s_virgin_islands: "🇻🇮",
    flag_vietnam: "🇻🇳",
    flag_vanuatu: "🇻🇺",
    flag_wallis_futuna: "🇼🇫",
    flag_samoa: "🇼🇸",
    flag_kosovo: "🇽🇰",
    flag_yemen: "🇾🇪",
    flag_mayotte: "🇾🇹",
    flag_south_africa: "🇿🇦",
    flag_zambia: "🇿🇲",
    flag_zimbabwe: "🇿🇼",
    flag_england: "🏴󠁧󠁢󠁥󠁮󠁧󠁿",
    flag_scotland: "🏴󠁧󠁢󠁳󠁣󠁴󠁿",
    flag_wales: "🏴󠁧󠁢󠁷󠁬󠁳󠁿",
    grinning: "😀",
    smiley: "😃",
    smile: "😄",
    grin: "😁",
    laughing: "😆",
    satisfied: "😆",
    sweat_smile: "😅",
    rofl: "🤣",
    joy: "😂",
    wink: "😉",
    blush: "😊",
    innocent: "😇",
    smiling_face_with_three_hearts: "🥰",
    smiling_face_with_3_hearts: "🥰",
    heart_eyes: "😍",
    kissing_heart: "😘",
    kissing: "😗",
    relaxed: "☺️",
    kissing_closed_eyes: "😚",
    kissing_smiling_eyes: "😙",
    yum: "😋",
    stuck_out_tongue: "😛",
    stuck_out_tongue_winking_eye: "😜",
    stuck_out_tongue_closed_eyes: "😝",
    hugs: "🤗",
    hand_over_mouth: "🤭",
    thinking: "🤔",
    raised_eyebrow: "🤨",
    expressionless: "😑",
    no_mouth: "😶",
    smirk: "😏",
    unamused: "😒",
    roll_eyes: "🙄",
    grimacing: "😬",
    relieved: "😌",
    pensive: "😔",
    sleepy: "😪",
    sleeping: "😴",
    mask: "😷",
    vomiting_face: "🤮",
    monocle_face: "🧐",
    confused: "😕",
    worried: "😟",
    open_mouth: "😮",
    hushed: "😯",
    astonished: "😲",
    flushed: "😳",
    frowning: "😦",
    anguished: "😧",
    fearful: "😨",
    cold_sweat: "😰",
    disappointed_relieved: "😥",
    cry: "😢",
    sob: "😭",
    scream: "😱",
    confounded: "😖",
    persevere: "😣",
    disappointed: "😞",
    sweat: "😓",
    weary: "😩",
    triumph: "😤",
    rage: "😡",
    pout: "😡",
    angry: "😠",
    cursing_face: "🤬",
    smiling_imp: "😈",
    imp: "👿",
    hankey: "💩",
    poop: "💩",
    shit: "💩",
    japanese_ogre: "👹",
    japanese_goblin: "👺",
    space_invader: "👾",
    smiley_cat: "😺",
    smile_cat: "😸",
    joy_cat: "😹",
    heart_eyes_cat: "😻",
    smirk_cat: "😼",
    scream_cat: "🙀",
    crying_cat_face: "😿",
    see_no_evil: "🙈",
    hear_no_evil: "🙉",
    speak_no_evil: "🙊",
    cupid: "💘",
    gift_heart: "💝",
    heartpulse: "💗",
    heartbeat: "💓",
    heavy_heart_exclamation: "❣️",
    heart: "❤️",
    anger: "💢",
    boom: "💥",
    sweat_drops: "💦",
    dash: "💨",
    eye_speech_bubble: "👁️‍🗨️",
    wave: "👋",
    raised_hand_with_fingers_splayed: "🖐️",
    hand: "✋",
    v: "✌️",
    metal: "🤘",
    point_left: "👈",
    point_right: "👉",
    point_up_2: "👆",
    fu: "🖕",
    point_down: "👇",
    point_up: "☝️",
    "+1": "👍",
    thumbsup: "👍",
    "-1": "👎",
    thumbsdown: "👎",
    fist_raised: "✊",
    fist: "✊",
    fist_oncoming: "👊",
    facepunch: "👊",
    punch: "👊",
    fist_left: "🤛",
    fist_right: "🤜",
    clap: "👏",
    raised_hands: "🙌",
    pray: "🙏",
    nail_care: "💅",
    muscle: "💪",
    lips: "👄",
    adult: "🧑",
    blond_haired_person: "👱",
    bearded_person: "🧔",
    red_haired_man: "👨‍🦰",
    curly_haired_man: "👨‍🦱",
    white_haired_man: "👨‍🦳",
    bald_man: "👨‍🦲",
    red_haired_woman: "👩‍🦰",
    curly_haired_woman: "👩‍🦱",
    white_haired_woman: "👩‍🦳",
    bald_woman: "👩‍🦲",
    blond_haired_woman: "👱‍♀",
    blonde_woman: "👱‍♀",
    blond_haired_man: "👱‍♂",
    older_adult: "🧓",
    older_man: "👴",
    older_woman: "👵",
    frowning_person: "🙍",
    frowning_man: "🙍‍♂",
    frowning_woman: "🙍‍♀",
    pouting_man: "🙎‍♂",
    pouting_woman: "🙎‍♀",
    no_good: "🙅",
    no_good_man: "🙅‍♂",
    ng_man: "🙅‍♂",
    no_good_woman: "🙅‍♀",
    ng_woman: "🙅‍♀",
    ok_person: "🙆",
    ok_man: "🙆‍♂",
    ok_woman: "🙆",
    tipping_hand_person: "💁",
    information_desk_person: "💁",
    tipping_hand_man: "💁‍♂",
    sassy_man: "💁‍♂",
    tipping_hand_woman: "💁‍♀",
    sassy_woman: "💁‍♀",
    raising_hand: "🙋",
    raising_hand_man: "🙋‍♂",
    raising_hand_woman: "🙋‍♀",
    bow: "🙇",
    bowing_man: "🙇‍♂",
    bowing_woman: "🙇‍♀",
    facepalm: "🤦",
    shrug: "🤷",
    cop: "👮",
    policeman: "👮‍♂",
    policewoman: "👮‍♀",
    male_detective: "🕵️‍♂️",
    female_detective: "🕵️‍♀️",
    guardsman: "💂",
    guardswoman: "💂‍♀",
    construction_worker_man: "👷‍♂",
    construction_worker_woman: "👷‍♀",
    person_with_turban: "👳",
    man_with_turban: "👳",
    woman_with_turban: "👳‍♀",
    man_with_gua_pi_mao: "👲",
    angel: "👼",
    santa: "🎅",
    superhero_man: "🦸‍♂",
    superhero_woman: "🦸‍♀",
    supervillain_man: "🦹‍♂",
    supervillain_woman: "🦹‍♀",
    mage_man: "🧙‍♂",
    mage_woman: "🧙‍♀",
    fairy_man: "🧚‍♂",
    fairy_woman: "🧚‍♀",
    vampire_man: "🧛‍♂",
    vampire_woman: "🧛‍♀",
    elf_man: "🧝‍♂",
    elf_woman: "🧝‍♀",
    genie_man: "🧞‍♂",
    genie_woman: "🧞‍♀",
    zombie_man: "🧟‍♂",
    zombie_woman: "🧟‍♀",
    massage: "💆",
    massage_man: "💆‍♂",
    massage_woman: "💆‍♀",
    haircut: "💇",
    haircut_man: "💇‍♂",
    haircut_woman: "💇‍♀",
    walking: "🚶",
    walking_man: "🚶‍♂",
    walking_woman: "🚶‍♀",
    standing_person: "🧍",
    standing_man: "🧍‍♂",
    standing_woman: "🧍‍♀",
    kneeling_person: "🧎",
    kneeling_man: "🧎‍♂",
    kneeling_woman: "🧎‍♀",
    runner: "🏃",
    running: "🏃",
    running_man: "🏃‍♂",
    running_woman: "🏃‍♀",
    dancer: "💃",
    business_suit_levitating: "🕴",
    dancers: "👯",
    dancing_men: "👯‍♂",
    dancing_women: "👯‍♀",
    sauna_person: "🧖",
    sauna_man: "🧖‍♂",
    sauna_woman: "🧖‍♀",
    climbing: "🧗",
    climbing_man: "🧗‍♂",
    climbing_woman: "🧗‍♀",
    golfing: "🏌",
    golfing_man: "🏌️‍♂️",
    golfing_woman: "🏌️‍♀️",
    surfer: "🏄",
    surfing_man: "🏄‍♂",
    surfing_woman: "🏄‍♀",
    rowboat: "🚣",
    rowing_man: "🚣‍♂",
    rowing_woman: "🚣‍♀",
    swimmer: "🏊",
    swimming_man: "🏊‍♂",
    swimming_woman: "🏊‍♀",
    bouncing_ball_person: "⛹",
    bouncing_ball_man: "⛹️‍♂️",
    basketball_man: "⛹️‍♂️",
    bouncing_ball_woman: "⛹️‍♀️",
    basketball_woman: "⛹️‍♀️",
    weight_lifting: "🏋",
    weight_lifting_man: "🏋️‍♂️",
    weight_lifting_woman: "🏋️‍♀️",
    bicyclist: "🚴",
    biking_man: "🚴‍♂",
    biking_woman: "🚴‍♀",
    mountain_bicyclist: "🚵",
    mountain_biking_man: "🚵‍♂",
    mountain_biking_woman: "🚵‍♀",
    cartwheeling: "🤸",
    wrestling: "🤼",
    water_polo: "🤽",
    handball_person: "🤾",
    juggling_person: "🤹",
    lotus_position: "🧘",
    lotus_position_man: "🧘‍♂",
    lotus_position_woman: "🧘‍♀",
    bath: "🛀",
    sleeping_bed: "🛌",
    two_women_holding_hands: "👭",
    couple: "👫",
    two_men_holding_hands: "👬",
    couplekiss: "💏",
    couplekiss_man_woman: "👩‍❤️‍💋‍👨",
    couplekiss_man_man: "‍👨❤️💋‍👨",
    couplekiss_woman_woman: "👩‍❤️‍💋‍👩",
    dog2: "🐕",
    fox_face: "🦊",
    cat2: "🐈",
    tiger2: "🐅",
    racehorse: "🐎",
    cow2: "🐄",
    pig2: "🐖",
    sheep: "🐑",
    dromedary_camel: "🐪",
    mouse2: "🐁",
    rabbit2: "🐇",
    panda_face: "🐼",
    feet: "🐾",
    hatched_chick: "🐥",
    "t-rex": "🦖",
    whale2: "🐋",
    flipper: "🐬",
    shell: "🐚",
    bee: "🐝",
    beetle: "🐞",
    ear_of_rice: "🌾",
    leaves: "🍃",
    orange: "🍊",
    mandarin: "🍊",
    apple: "🍎",
    corn: "🌽",
    cheese: "🧀",
    fries: "🍟",
    hotdog: "🌭",
    fried_egg: "🍳",
    stew: "🍲",
    bento: "🍱",
    rice: "🍚",
    curry: "🍛",
    ramen: "🍜",
    sweet_potato: "🍠",
    fish_cake: "🍥",
    icecream: "🍦",
    birthday: "🎂",
    cake: "🍰",
    milk_glass: "🥛",
    coffee: "☕",
    tea: "🍵",
    champagne: "🍾",
    cocktail: "🍸",
    beer: "🍺",
    beers: "🍻",
    ice_cube: "🧊",
    plate_with_cutlery: "🍽",
    hocho: "🔪",
    knife: "🔪",
    earth_africa: "🌍",
    earth_americas: "🌎",
    earth_asia: "🌏",
    japan: "🗾",
    mountain_snow: "🏔",
    beach_umbrella: "🏖",
    bricks: "🧱",
    office: "🏢",
    european_post_office: "🏤",
    european_castle: "🏰",
    city_sunset: "🌆",
    city_sunrise: "🌇",
    hotsprings: "♨️",
    barber: "💈",
    steam_locomotive: "🚂",
    bullettrain_side: "🚄",
    bullettrain_front: "🚅",
    train2: "🚆",
    car: "🚗",
    red_car: "🚗",
    blue_car: "🚙",
    truck: "🚚",
    bike: "🚲",
    busstop: "🚏",
    fuelpump: "⛽",
    rotating_light: "🚨",
    traffic_light: "🚥",
    boat: "⛵",
    flight_departure: "🛫",
    flight_arrival: "🛬",
    artificial_satellite: "🛰",
    hourglass: "⌛",
    hourglass_flowing_sand: "⏳",
    clock12: "🕛",
    clock1230: "🕧",
    clock1: "🕐",
    clock130: "🕜",
    clock2: "🕑",
    clock230: "🕝",
    clock3: "🕒",
    clock330: "🕞",
    clock4: "🕓",
    clock430: "🕟",
    clock5: "🕔",
    clock530: "🕠",
    clock6: "🕕",
    clock630: "🕡",
    clock7: "🕖",
    clock730: "🕢",
    clock8: "🕗",
    clock830: "🕣",
    clock9: "🕘",
    clock930: "🕤",
    clock10: "🕙",
    clock1030: "🕥",
    clock11: "🕚",
    clock1130: "🕦",
    moon: "🌔",
    new_moon_with_face: "🌚",
    first_quarter_moon_with_face: "🌛",
    last_quarter_moon_with_face: "🌜",
    sunny: "☀️",
    full_moon_with_face: "🌝",
    star2: "🌟",
    stars: "🌠",
    partly_sunny: "⛅",
    open_umbrella: "☂",
    parasol_on_ground: "⛱",
    zap: "⚡",
    snowman_with_snow: "☃",
    ocean: "🌊",
    tada: "🎉",
    bamboo: "🎍",
    dolls: "🎎",
    flags: "🎏",
    rice_scene: "🎑",
    gift: "🎁",
    tickets: "🎟",
    medal_military: "🎖",
    medal_sports: "🏅",
    soccer: "⚽",
    football: "🏈",
    golf: "⛳",
    fishing_pole_and_fish: "🎣",
    running_shirt_with_sash: "🎽",
    ski: "🎿",
    dart: "🎯",
    "8ball": "🎱",
    jigsaw: "🧩",
    spades: "♠️",
    hearts: "♥️",
    diamonds: "♦️",
    clubs: "♣️",
    black_joker: "🃏",
    mahjong: "🀄",
    art: "🎨",
    eyeglasses: "👓",
    dark_sunglasses: "🕶️",
    shirt: "👕",
    tshirt: "👕",
    swim_brief: "🩲",
    womans_clothes: "👚",
    pouch: "👝",
    shopping: "🛍",
    school_satchel: "🎒",
    mans_shoe: "👞",
    shoe: "👞",
    athletic_shoe: "👟",
    high_heel: "👠",
    sandal: "👡",
    boot: "👢",
    womans_hat: "👒",
    tophat: "🎩",
    mortar_board: "🎓",
    rescue_worker_helmet: "⛑",
    gem: "💎",
    mute: "🔇",
    speaker: "🔈",
    sound: "🔉",
    loud_sound: "🔊",
    mega: "📣",
    no_bell: "🔕",
    notes: "🎶",
    headphones: "🎧",
    iphone: "📱",
    calling: "📲",
    phone: "☎️",
    fax: "📠",
    computer: "💻",
    minidisc: "💽",
    cd: "💿",
    film_strip: "🎞",
    clapper: "🎬",
    tv: "📺",
    camera_flash: "📸",
    vhs: "📼",
    mag: "🔍",
    mag_right: "🔎",
    bulb: "💡",
    izakaya_lantern: "🏮",
    lantern: "🏮",
    book: "📖",
    newspaper_roll: "🗞",
    moneybag: "💰",
    yen: "💴",
    dollar: "💵",
    euro: "💶",
    pound: "💷",
    chart: "💹",
    email: "✉️",
    "e-mail": "📧",
    mailbox: "📫",
    mailbox_closed: "📪",
    mailbox_with_mail: "📬",
    mailbox_with_no_mail: "📭",
    ballot_box: "🗳",
    pencil2: "✏️",
    date: "📅",
    chart_with_upwards_trend: "📈",
    chart_with_downwards_trend: "📉",
    paperclips: "🖇",
    lock: "🔒",
    unlock: "🔓",
    lock_with_ink_pen: "🔏",
    closed_lock_with_key: "🔐",
    gun: "🔫",
    smoking: "🚬",
    moyai: "🗿",
    atm: "🏧",
    put_litter_in_its_place: "🚮",
    wheelchair: "♿",
    mens: "🚹",
    womens: "🚺",
    wc: "🚾",
    no_entry_sign: "🚫",
    do_not_litter: "🚯",
    "non-potable_water": "🚱",
    underage: "🔞",
    arrow_up: "⬆️",
    arrow_upper_right: "↗️",
    arrow_right: "➡️",
    arrow_lower_right: "↘️",
    arrow_down: "⬇️",
    arrow_lower_left: "↙️",
    arrow_left: "⬅️",
    arrow_upper_left: "↖️",
    arrow_up_down: "↕️",
    leftwards_arrow_with_hook: "↩️",
    arrow_right_hook: "↪️",
    arrow_heading_up: "⤴️",
    arrow_heading_down: "⤵️",
    arrows_clockwise: "🔃",
    arrows_counterclockwise: "🔄",
    back: "🔙",
    end: "🔚",
    on: "🔛",
    soon: "🔜",
    top: "🔝",
    six_pointed_star: "🔯",
    scorpius: "♏",
    twisted_rightwards_arrows: "🔀",
    repeat: "🔁",
    repeat_one: "🔂",
    arrow_forward: "▶️",
    fast_forward: "⏩",
    arrow_backward: "◀️",
    rewind: "⏪",
    previous_track_button: "⏮",
    arrow_up_small: "🔼",
    arrow_double_up: "⏫",
    arrow_down_small: "🔽",
    arrow_double_down: "⏬",
    low_brightness: "🔅",
    high_brightness: "🔆",
    signal_strength: "📶",
    recycle: "♻️",
    trident: "🔱",
    beginner: "🔰",
    o: "⭕",
    white_check_mark: "✅",
    ballot_box_with_check: "☑️",
    heavy_check_mark: "✔️",
    heavy_multiplication_x: "✖️",
    x: "❌",
    negative_squared_cross_mark: "❎",
    heavy_plus_sign: "➕",
    heavy_minus_sign: "➖",
    heavy_division_sign: "➗",
    loop: "➿",
    eight_pointed_black_star: "✴️",
    bangbang: "‼️",
    interrobang: "⁉️",
    question: "❓",
    grey_question: "❔",
    grey_exclamation: "❕",
    exclamation: "❗",
    heavy_exclamation_mark: "❗",
    tm: "™️",
    hash: "#️⃣",
    asterisk: "*️⃣",
    zero: "0️⃣",
    one: "1️⃣",
    two: "2️⃣",
    three: "3️⃣",
    four: "4️⃣",
    five: "5️⃣",
    six: "6️⃣",
    seven: "7️⃣",
    eight: "8️⃣",
    nine: "9️⃣",
    keycap_ten: "🔟",
    capital_abcd: "🔠",
    abcd: "🔡",
    symbols: "🔣",
    abc: "🔤",
    a: "🅰️",
    ab: "🆎",
    b: "🅱️",
    cl: "🆑",
    cool: "🆒",
    free: "🆓",
    information_source: "ℹ️",
    id: "🆔",
    m: "Ⓜ️",
    new: "🆕",
    ng: "🆖",
    o2: "🅾️",
    ok: "🆗",
    parking: "🅿️",
    sos: "🆘",
    up: "🆙",
    vs: "🆚",
    koko: "🈁",
    sa: "🈂️",
    u6708: "🈷️",
    u6709: "🈶",
    u6307: "🈯",
    ideograph_advantage: "🉐",
    u5272: "🈹",
    u7121: "🈚",
    u7981: "🈲",
    accept: "🉑",
    u7533: "🈸",
    u5408: "🈴",
    u7a7a: "🈳",
    congratulations: "㊗️",
    secret: "㊙️",
    u55b6: "🈺",
    u6e80: "🈵",
    large_blue_circle: "🔵",
    small_red_triangle: "🔺",
    small_red_triangle_down: "🔻",
    diamond_shape_with_a_dot_inside: "💠",
    checkered_flag: "🏁",
    triangular_flag_on_post: "🚩",
    ascension_island: "🇦🇨",
    andorra: "🇦🇩",
    united_arab_emirates: "🇦🇪",
    afghanistan: "🇦🇫",
    antigua_barbuda: "🇦🇬",
    anguilla: "🇦🇮",
    albania: "🇦🇱",
    armenia: "🇦🇲",
    angola: "🇦🇴",
    antarctica: "🇦🇶",
    argentina: "🇦🇷",
    american_samoa: "🇦🇸",
    austria: "🇦🇹",
    australia: "🇦🇺",
    aruba: "🇦🇼",
    aland_islands: "🇦🇽",
    azerbaijan: "🇦🇿",
    bosnia_herzegovina: "🇧🇦",
    barbados: "🇧🇧",
    bangladesh: "🇧🇩",
    belgium: "🇧🇪",
    burkina_faso: "🇧🇫",
    bulgaria: "🇧🇬",
    bahrain: "🇧🇭",
    burundi: "🇧🇮",
    benin: "🇧🇯",
    st_barthelemy: "🇧🇱",
    bermuda: "🇧🇲",
    brunei: "🇧🇳",
    bolivia: "🇧🇴",
    caribbean_netherlands: "🇧🇶",
    brazil: "🇧🇷",
    bahamas: "🇧🇸",
    bhutan: "🇧🇹",
    bouvet_island: "🇧🇻",
    botswana: "🇧🇼",
    belarus: "🇧🇾",
    belize: "🇧🇿",
    canada: "🇨🇦",
    cocos_islands: "🇨🇨",
    congo_kinshasa: "🇨🇩",
    central_african_republic: "🇨🇫",
    congo_brazzaville: "🇨🇬",
    switzerland: "🇨🇭",
    cote_divoire: "🇨🇮",
    cook_islands: "🇨🇰",
    chile: "🇨🇱",
    cameroon: "🇨🇲",
    cn: "🇨🇳",
    colombia: "🇨🇴",
    clipperton_island: "🇨🇵",
    costa_rica: "🇨🇷",
    cuba: "🇨🇺",
    cape_verde: "🇨🇻",
    curacao: "🇨🇼",
    christmas_island: "🇨🇽",
    cyprus: "🇨🇾",
    czech_republic: "🇨🇿",
    de: "🇩🇪",
    diego_garcia: "🇩🇬",
    djibouti: "🇩🇯",
    denmark: "🇩🇰",
    dominica: "🇩🇲",
    dominican_republic: "🇩🇴",
    algeria: "🇩🇿",
    ceuta_melilla: "🇪🇦",
    ecuador: "🇪🇨",
    estonia: "🇪🇪",
    egypt: "🇪🇬",
    western_sahara: "🇪🇭",
    eritrea: "🇪🇷",
    es: "🇪🇸",
    ethiopia: "🇪🇹",
    eu: "🇪🇺",
    european_union: "🇪🇺",
    finland: "🇫🇮",
    fiji: "🇫🇯",
    falkland_islands: "🇫🇰",
    micronesia: "🇫🇲",
    faroe_islands: "🇫🇴",
    fr: "🇫🇷",
    gabon: "🇬🇦",
    gb: "🇬🇧",
    uk: "🇬🇧",
    grenada: "🇬🇩",
    georgia: "🇬🇪",
    french_guiana: "🇬🇫",
    guernsey: "🇬🇬",
    ghana: "🇬🇭",
    gibraltar: "🇬🇮",
    greenland: "🇬🇱",
    gambia: "🇬🇲",
    guinea: "🇬🇳",
    guadeloupe: "🇬🇵",
    equatorial_guinea: "🇬🇶",
    greece: "🇬🇷",
    south_georgia_south_sandwich_islands: "🇬🇸",
    guatemala: "🇬🇹",
    guam: "🇬🇺",
    guinea_bissau: "🇬🇼",
    guyana: "🇬🇾",
    hong_kong: "🇭🇰",
    heard_mcdonald_islands: "🇭🇲",
    honduras: "🇭🇳",
    croatia: "🇭🇷",
    haiti: "🇭🇹",
    hungary: "🇭🇺",
    canary_islands: "🇮🇨",
    indonesia: "🇮🇩",
    ireland: "🇮🇪",
    israel: "🇮🇱",
    isle_of_man: "🇮🇲",
    india: "🇮🇳",
    british_indian_ocean_territory: "🇮🇴",
    iraq: "🇮🇶",
    iran: "🇮🇷",
    iceland: "🇮🇸",
    it: "🇮🇹",
    jersey: "🇯🇪",
    jamaica: "🇯🇲",
    jordan: "🇯🇴",
    jp: "🇯🇵",
    kenya: "🇰🇪",
    kyrgyzstan: "🇰🇬",
    cambodia: "🇰🇭",
    kiribati: "🇰🇮",
    comoros: "🇰🇲",
    st_kitts_nevis: "🇰🇳",
    north_korea: "🇰🇵",
    kr: "🇰🇷",
    kuwait: "🇰🇼",
    cayman_islands: "🇰🇾",
    kazakhstan: "🇰🇿",
    laos: "🇱🇦",
    lebanon: "🇱🇧",
    st_lucia: "🇱🇨",
    liechtenstein: "🇱🇮",
    sri_lanka: "🇱🇰",
    liberia: "🇱🇷",
    lesotho: "🇱🇸",
    lithuania: "🇱🇹",
    luxembourg: "🇱🇺",
    latvia: "🇱🇻",
    libya: "🇱🇾",
    morocco: "🇲🇦",
    monaco: "🇲🇨",
    moldova: "🇲🇩",
    montenegro: "🇲🇪",
    st_martin: "🇲🇫",
    madagascar: "🇲🇬",
    marshall_islands: "🇲🇭",
    macedonia: "🇲🇰",
    mali: "🇲🇱",
    myanmar: "🇲🇲",
    mongolia: "🇲🇳",
    macau: "🇲🇴",
    northern_mariana_islands: "🇲🇵",
    martinique: "🇲🇶",
    mauritania: "🇲🇷",
    montserrat: "🇲🇸",
    malta: "🇲🇹",
    mauritius: "🇲🇺",
    maldives: "🇲🇻",
    malawi: "🇲🇼",
    mexico: "🇲🇽",
    malaysia: "🇲🇾",
    mozambique: "🇲🇿",
    namibia: "🇳🇦",
    new_caledonia: "🇳🇨",
    niger: "🇳🇪",
    norfolk_island: "🇳🇫",
    nigeria: "🇳🇬",
    nicaragua: "🇳🇮",
    netherlands: "🇳🇱",
    norway: "🇳🇴",
    nepal: "🇳🇵",
    nauru: "🇳🇷",
    niue: "🇳🇺",
    new_zealand: "🇳🇿",
    oman: "🇴🇲",
    panama: "🇵🇦",
    peru: "🇵🇪",
    french_polynesia: "🇵🇫",
    papua_new_guinea: "🇵🇬",
    philippines: "🇵🇭",
    pakistan: "🇵🇰",
    poland: "🇵🇱",
    st_pierre_miquelon: "🇵🇲",
    pitcairn_islands: "🇵🇳",
    puerto_rico: "🇵🇷",
    palestinian_territories: "🇵🇸",
    portugal: "🇵🇹",
    palau: "🇵🇼",
    paraguay: "🇵🇾",
    qatar: "🇶🇦",
    reunion: "🇷🇪",
    romania: "🇷🇴",
    serbia: "🇷🇸",
    ru: "🇷🇺",
    rwanda: "🇷🇼",
    saudi_arabia: "🇸🇦",
    solomon_islands: "🇸🇧",
    seychelles: "🇸🇨",
    sudan: "🇸🇩",
    sweden: "🇸🇪",
    singapore: "🇸🇬",
    st_helena: "🇸🇭",
    slovenia: "🇸🇮",
    svalbard_jan_mayen: "🇸🇯",
    slovakia: "🇸🇰",
    sierra_leone: "🇸🇱",
    san_marino: "🇸🇲",
    senegal: "🇸🇳",
    somalia: "🇸🇴",
    suriname: "🇸🇷",
    south_sudan: "🇸🇸",
    sao_tome_principe: "🇸🇹",
    el_salvador: "🇸🇻",
    sint_maarten: "🇸🇽",
    syria: "🇸🇾",
    swaziland: "🇸🇿",
    tristan_da_cunha: "🇹🇦",
    turks_caicos_islands: "🇹🇨",
    chad: "🇹🇩",
    french_southern_territories: "🇹🇫",
    togo: "🇹🇬",
    thailand: "🇹🇭",
    tajikistan: "🇹🇯",
    tokelau: "🇹🇰",
    timor_leste: "🇹🇱",
    turkmenistan: "🇹🇲",
    tunisia: "🇹🇳",
    tonga: "🇹🇴",
    tr: "🇹🇷",
    trinidad_tobago: "🇹🇹",
    tuvalu: "🇹🇻",
    taiwan: "🇹🇼",
    tanzania: "🇹🇿",
    ukraine: "🇺🇦",
    uganda: "🇺🇬",
    us_outlying_islands: "🇺🇲",
    united_nations: "🇺🇳",
    us: "🇺🇸",
    uruguay: "🇺🇾",
    uzbekistan: "🇺🇿",
    vatican_city: "🇻🇦",
    st_vincent_grenadines: "🇻🇨",
    venezuela: "🇻🇪",
    british_virgin_islands: "🇻🇬",
    us_virgin_islands: "🇻🇮",
    vietnam: "🇻🇳",
    vanuatu: "🇻🇺",
    wallis_futuna: "🇼🇫",
    samoa: "🇼🇸",
    kosovo: "🇽🇰",
    yemen: "🇾🇪",
    mayotte: "🇾🇹",
    south_africa: "🇿🇦",
    zambia: "🇿🇲",
    zimbabwe: "🇿🇼",
    england: "🏴󠁧󠁢󠁥󠁮󠁧󠁿",
    scotland: "🏴󠁧󠁢󠁳󠁣󠁴󠁿",
    wales: "🏴󠁧󠁢󠁷󠁬󠁳󠁿",
    hundred_points_symbol: "💯",
    input_symbol_for_numbers: "🔢",
    "#": "#️⃣",
    keycap_star: "*️⃣",
    "*": "*️⃣",
    mahjong_tile_red_dragon: "🀄",
    playing_card_black_joker: "🃏",
    "a_button_(blood_type)": "🅰️",
    "b_button_(blood_type)": "🅱️",
    "o_button_(blood_type)": "🅾️",
    negative_squared_ab: "🆎",
    "ab_button_(blood_type)": "🆎",
    squared_cl: "🆑",
    squared_cool: "🆒",
    squared_free: "🆓",
    squared_id: "🆔",
    squared_new: "🆕",
    squared_ng: "🆖",
    squared_ok: "🆗",
    squared_sos: "🆘",
    squared_up_with_exclamation_mark: "🆙",
    "up!_button": "🆙",
    squared_vs: "🆚",
    "flag-ac": "🇦🇨",
    "flag-ad": "🇦🇩",
    ad: "🇦🇩",
    "flag-ae": "🇦🇪",
    ae: "🇦🇪",
    "flag-af": "🇦🇫",
    af: "🇦🇫",
    "flag-ag": "🇦🇬",
    ag: "🇦🇬",
    "antigua_&_barbuda": "🇦🇬",
    "flag-ai": "🇦🇮",
    ai: "🇦🇮",
    "flag-al": "🇦🇱",
    al: "🇦🇱",
    "flag-am": "🇦🇲",
    am: "🇦🇲",
    "flag-ao": "🇦🇴",
    ao: "🇦🇴",
    "flag-aq": "🇦🇶",
    "flag-ar": "🇦🇷",
    ar: "🇦🇷",
    "flag-as": "🇦🇸",
    as: "🇦🇸",
    "flag-at": "🇦🇹",
    at: "🇦🇹",
    "flag-au": "🇦🇺",
    au: "🇦🇺",
    "flag-aw": "🇦🇼",
    aw: "🇦🇼",
    "flag-ax": "🇦🇽",
    åland_islands: "🇦🇽",
    "flag-az": "🇦🇿",
    az: "🇦🇿",
    "flag-ba": "🇧🇦",
    ba: "🇧🇦",
    "bosnia_&_herzegovina": "🇧🇦",
    "flag-bb": "🇧🇧",
    bb: "🇧🇧",
    "flag-bd": "🇧🇩",
    bd: "🇧🇩",
    "flag-be": "🇧🇪",
    be: "🇧🇪",
    "flag-bf": "🇧🇫",
    bf: "🇧🇫",
    "flag-bg": "🇧🇬",
    bg: "🇧🇬",
    "flag-bh": "🇧🇭",
    bh: "🇧🇭",
    "flag-bi": "🇧🇮",
    bi: "🇧🇮",
    "flag-bj": "🇧🇯",
    bj: "🇧🇯",
    "flag-bl": "🇧🇱",
    "flag-bm": "🇧🇲",
    bm: "🇧🇲",
    "flag-bn": "🇧🇳",
    bn: "🇧🇳",
    "flag-bo": "🇧🇴",
    bo: "🇧🇴",
    "flag-bq": "🇧🇶",
    "flag-br": "🇧🇷",
    br: "🇧🇷",
    "flag-bs": "🇧🇸",
    bs: "🇧🇸",
    "flag-bt": "🇧🇹",
    bt: "🇧🇹",
    "flag-bv": "🇧🇻",
    "flag-bw": "🇧🇼",
    bw: "🇧🇼",
    "flag-by": "🇧🇾",
    by: "🇧🇾",
    "flag-bz": "🇧🇿",
    bz: "🇧🇿",
    "flag-ca": "🇨🇦",
    ca: "🇨🇦",
    "flag-cc": "🇨🇨",
    "cocos_(keeling)_islands": "🇨🇨",
    "flag-cd": "🇨🇩",
    cd_flag: "🇨🇩",
    "congo_-_kinshasa": "🇨🇩",
    "flag-cf": "🇨🇫",
    cf: "🇨🇫",
    "flag-cg": "🇨🇬",
    cg: "🇨🇬",
    "congo_-_brazzaville": "🇨🇬",
    "flag-ch": "🇨🇭",
    ch: "🇨🇭",
    "flag-ci": "🇨🇮",
    ci: "🇨🇮",
    "côte_d’ivoire": "🇨🇮",
    "flag-ck": "🇨🇰",
    ck: "🇨🇰",
    "flag-cl": "🇨🇱",
    cl_flag: "🇨🇱",
    "flag-cm": "🇨🇲",
    cm: "🇨🇲",
    "flag-cn": "🇨🇳",
    china: "🇨🇳",
    "flag-co": "🇨🇴",
    co: "🇨🇴",
    "flag-cp": "🇨🇵",
    "flag-cr": "🇨🇷",
    cr: "🇨🇷",
    "flag-cu": "🇨🇺",
    cu: "🇨🇺",
    "flag-cv": "🇨🇻",
    cv: "🇨🇻",
    "flag-cw": "🇨🇼",
    cw: "🇨🇼",
    curaçao: "🇨🇼",
    "flag-cx": "🇨🇽",
    "flag-cy": "🇨🇾",
    cy: "🇨🇾",
    "flag-cz": "🇨🇿",
    cz: "🇨🇿",
    czechia: "🇨🇿",
    "flag-de": "🇩🇪",
    germany: "🇩🇪",
    "flag-dg": "🇩🇬",
    "flag-dj": "🇩🇯",
    dj: "🇩🇯",
    "flag-dk": "🇩🇰",
    dk: "🇩🇰",
    "flag-dm": "🇩🇲",
    dm: "🇩🇲",
    "flag-do": "🇩🇴",
    do: "🇩🇴",
    "flag-dz": "🇩🇿",
    dz: "🇩🇿",
    "flag-ea": "🇪🇦",
    "ceuta_&_melilla": "🇪🇦",
    "flag-ec": "🇪🇨",
    ec: "🇪🇨",
    "flag-ee": "🇪🇪",
    ee: "🇪🇪",
    "flag-eg": "🇪🇬",
    eg: "🇪🇬",
    "flag-eh": "🇪🇭",
    "flag-er": "🇪🇷",
    er: "🇪🇷",
    "flag-es": "🇪🇸",
    spain: "🇪🇸",
    "flag-et": "🇪🇹",
    et: "🇪🇹",
    "flag-eu": "🇪🇺",
    "flag-fi": "🇫🇮",
    fi: "🇫🇮",
    "flag-fj": "🇫🇯",
    fj: "🇫🇯",
    "flag-fk": "🇫🇰",
    "flag-fm": "🇫🇲",
    "flag-fo": "🇫🇴",
    fo: "🇫🇴",
    "flag-fr": "🇫🇷",
    france: "🇫🇷",
    "flag-ga": "🇬🇦",
    ga: "🇬🇦",
    "flag-gb": "🇬🇧",
    united_kingdom: "🇬🇧",
    "flag-gd": "🇬🇩",
    gd: "🇬🇩",
    "flag-ge": "🇬🇪",
    ge: "🇬🇪",
    "flag-gf": "🇬🇫",
    gf: "🇬🇫",
    "flag-gg": "🇬🇬",
    "flag-gh": "🇬🇭",
    gh: "🇬🇭",
    "flag-gi": "🇬🇮",
    gi: "🇬🇮",
    "flag-gl": "🇬🇱",
    "flag-gm": "🇬🇲",
    gm: "🇬🇲",
    "flag-gn": "🇬🇳",
    gn: "🇬🇳",
    "flag-gp": "🇬🇵",
    gp: "🇬🇵",
    "flag-gq": "🇬🇶",
    gq: "🇬🇶",
    "flag-gr": "🇬🇷",
    gr: "🇬🇷",
    "flag-gs": "🇬🇸",
    "south_georgia_&_south_sandwich_islands": "🇬🇸",
    "flag-gt": "🇬🇹",
    gt: "🇬🇹",
    "flag-gu": "🇬🇺",
    gu: "🇬🇺",
    "flag-gw": "🇬🇼",
    gw: "🇬🇼",
    "guinea-bissau": "🇬🇼",
    "flag-gy": "🇬🇾",
    gy: "🇬🇾",
    "flag-hk": "🇭🇰",
    hk: "🇭🇰",
    hong_kong_sar_china: "🇭🇰",
    "flag-hm": "🇭🇲",
    "heard_&_mcdonald_islands": "🇭🇲",
    "flag-hn": "🇭🇳",
    hn: "🇭🇳",
    "flag-hr": "🇭🇷",
    hr: "🇭🇷",
    "flag-ht": "🇭🇹",
    ht: "🇭🇹",
    "flag-hu": "🇭🇺",
    hu: "🇭🇺",
    "flag-ic": "🇮🇨",
    "flag-id": "🇮🇩",
    id_flag: "🇮🇩",
    "flag-ie": "🇮🇪",
    ie: "🇮🇪",
    "flag-il": "🇮🇱",
    il: "🇮🇱",
    "flag-im": "🇮🇲",
    "flag-in": "🇮🇳",
    in: "🇮🇳",
    "flag-io": "🇮🇴",
    "flag-iq": "🇮🇶",
    iq: "🇮🇶",
    "flag-ir": "🇮🇷",
    ir: "🇮🇷",
    "flag-is": "🇮🇸",
    is: "🇮🇸",
    "flag-it": "🇮🇹",
    italy: "🇮🇹",
    "flag-je": "🇯🇪",
    "flag-jm": "🇯🇲",
    jm: "🇯🇲",
    "flag-jo": "🇯🇴",
    jo: "🇯🇴",
    "flag-jp": "🇯🇵",
    "flag-ke": "🇰🇪",
    ke: "🇰🇪",
    "flag-kg": "🇰🇬",
    kg: "🇰🇬",
    "flag-kh": "🇰🇭",
    kh: "🇰🇭",
    "flag-ki": "🇰🇮",
    ki: "🇰🇮",
    "flag-km": "🇰🇲",
    km: "🇰🇲",
    "flag-kn": "🇰🇳",
    "flag-kp": "🇰🇵",
    kp: "🇰🇵",
    "flag-kr": "🇰🇷",
    south_korea: "🇰🇷",
    "flag-kw": "🇰🇼",
    kw: "🇰🇼",
    "flag-ky": "🇰🇾",
    ky: "🇰🇾",
    "flag-kz": "🇰🇿",
    kz: "🇰🇿",
    "flag-la": "🇱🇦",
    la: "🇱🇦",
    "flag-lb": "🇱🇧",
    lb: "🇱🇧",
    "flag-lc": "🇱🇨",
    "flag-li": "🇱🇮",
    li: "🇱🇮",
    "flag-lk": "🇱🇰",
    lk: "🇱🇰",
    "flag-lr": "🇱🇷",
    lr: "🇱🇷",
    "flag-ls": "🇱🇸",
    ls: "🇱🇸",
    "flag-lt": "🇱🇹",
    lt: "🇱🇹",
    "flag-lu": "🇱🇺",
    lu: "🇱🇺",
    "flag-lv": "🇱🇻",
    lv: "🇱🇻",
    "flag-ly": "🇱🇾",
    ly: "🇱🇾",
    "flag-ma": "🇲🇦",
    ma: "🇲🇦",
    "flag-mc": "🇲🇨",
    "flag-md": "🇲🇩",
    md: "🇲🇩",
    "flag-me": "🇲🇪",
    me: "🇲🇪",
    "flag-mf": "🇲🇫",
    "flag-mg": "🇲🇬",
    mg: "🇲🇬",
    "flag-mh": "🇲🇭",
    "flag-mk": "🇲🇰",
    mk: "🇲🇰",
    "flag-ml": "🇲🇱",
    ml: "🇲🇱",
    "flag-mm": "🇲🇲",
    mm: "🇲🇲",
    "myanmar_(burma)": "🇲🇲",
    "flag-mn": "🇲🇳",
    mn: "🇲🇳",
    "flag-mo": "🇲🇴",
    mo: "🇲🇴",
    macao_sar_china: "🇲🇴",
    "flag-mp": "🇲🇵",
    mp: "🇲🇵",
    "flag-mq": "🇲🇶",
    mq: "🇲🇶",
    "flag-mr": "🇲🇷",
    mr: "🇲🇷",
    "flag-ms": "🇲🇸",
    ms: "🇲🇸",
    "flag-mt": "🇲🇹",
    mt: "🇲🇹",
    "flag-mu": "🇲🇺",
    "flag-mv": "🇲🇻",
    mv: "🇲🇻",
    "flag-mw": "🇲🇼",
    mw: "🇲🇼",
    "flag-mx": "🇲🇽",
    mx: "🇲🇽",
    "flag-my": "🇲🇾",
    my: "🇲🇾",
    "flag-mz": "🇲🇿",
    mz: "🇲🇿",
    "flag-na": "🇳🇦",
    na: "🇳🇦",
    "flag-nc": "🇳🇨",
    nc: "🇳🇨",
    "flag-ne": "🇳🇪",
    ne: "🇳🇪",
    "flag-nf": "🇳🇫",
    "flag-ng": "🇳🇬",
    "flag-ni": "🇳🇮",
    ni: "🇳🇮",
    "flag-nl": "🇳🇱",
    nl: "🇳🇱",
    "flag-no": "🇳🇴",
    no: "🇳🇴",
    "flag-np": "🇳🇵",
    np: "🇳🇵",
    "flag-nr": "🇳🇷",
    "flag-nu": "🇳🇺",
    nu: "🇳🇺",
    "flag-nz": "🇳🇿",
    nz: "🇳🇿",
    "flag-om": "🇴🇲",
    "flag-pa": "🇵🇦",
    pa: "🇵🇦",
    "flag-pe": "🇵🇪",
    pe: "🇵🇪",
    "flag-pf": "🇵🇫",
    "flag-pg": "🇵🇬",
    pg: "🇵🇬",
    "flag-ph": "🇵🇭",
    ph: "🇵🇭",
    "flag-pk": "🇵🇰",
    pk: "🇵🇰",
    "flag-pl": "🇵🇱",
    pl: "🇵🇱",
    "flag-pm": "🇵🇲",
    "flag-pn": "🇵🇳",
    "flag-pr": "🇵🇷",
    pr: "🇵🇷",
    "flag-ps": "🇵🇸",
    ps: "🇵🇸",
    "flag-pt": "🇵🇹",
    pt: "🇵🇹",
    "flag-pw": "🇵🇼",
    pw: "🇵🇼",
    "flag-py": "🇵🇾",
    py: "🇵🇾",
    "flag-qa": "🇶🇦",
    qa: "🇶🇦",
    "flag-re": "🇷🇪",
    re: "🇷🇪",
    réunion: "🇷🇪",
    "flag-ro": "🇷🇴",
    ro: "🇷🇴",
    "flag-rs": "🇷🇸",
    rs: "🇷🇸",
    "flag-ru": "🇷🇺",
    russia: "🇷🇺",
    "flag-rw": "🇷🇼",
    rw: "🇷🇼",
    "flag-sa": "🇸🇦",
    sa_flag: "🇸🇦",
    "flag-sb": "🇸🇧",
    sb: "🇸🇧",
    "flag-sc": "🇸🇨",
    sc: "🇸🇨",
    "flag-sd": "🇸🇩",
    sd: "🇸🇩",
    "flag-se": "🇸🇪",
    se: "🇸🇪",
    "flag-sg": "🇸🇬",
    sg: "🇸🇬",
    "flag-sh": "🇸🇭",
    "flag-si": "🇸🇮",
    si: "🇸🇮",
    "flag-sj": "🇸🇯",
    "svalbard_&_jan_mayen": "🇸🇯",
    "flag-sk": "🇸🇰",
    sk: "🇸🇰",
    "flag-sl": "🇸🇱",
    sl: "🇸🇱",
    "flag-sm": "🇸🇲",
    sm: "🇸🇲",
    "flag-sn": "🇸🇳",
    sn: "🇸🇳",
    "flag-so": "🇸🇴",
    so: "🇸🇴",
    "flag-sr": "🇸🇷",
    sr: "🇸🇷",
    "flag-ss": "🇸🇸",
    ss: "🇸🇸",
    "flag-st": "🇸🇹",
    st: "🇸🇹",
    "são_tomé_&_príncipe": "🇸🇹",
    "flag-sv": "🇸🇻",
    sv: "🇸🇻",
    "flag-sx": "🇸🇽",
    "flag-sy": "🇸🇾",
    sy: "🇸🇾",
    "flag-sz": "🇸🇿",
    sz: "🇸🇿",
    eswatini: "🇸🇿",
    "flag-ta": "🇹🇦",
    "flag-tc": "🇹🇨",
    tc: "🇹🇨",
    "turks_&_caicos_islands": "🇹🇨",
    "flag-td": "🇹🇩",
    "flag-tf": "🇹🇫",
    tf: "🇹🇫",
    "flag-tg": "🇹🇬",
    tg: "🇹🇬",
    "flag-th": "🇹🇭",
    th: "🇹🇭",
    "flag-tj": "🇹🇯",
    tj: "🇹🇯",
    "flag-tk": "🇹🇰",
    "flag-tl": "🇹🇱",
    tl: "🇹🇱",
    "timor-leste": "🇹🇱",
    "flag-tm": "🇹🇲",
    tm_flag: "🇹🇲",
    "flag-tn": "🇹🇳",
    tn: "🇹🇳",
    "flag-to": "🇹🇴",
    to: "🇹🇴",
    "flag-tr": "🇹🇷",
    "flag-tt": "🇹🇹",
    tt: "🇹🇹",
    "trinidad_&_tobago": "🇹🇹",
    "flag-tv": "🇹🇻",
    tv_flag: "🇹🇻",
    "flag-tw": "🇹🇼",
    "flag-tz": "🇹🇿",
    tz: "🇹🇿",
    "flag-ua": "🇺🇦",
    ua: "🇺🇦",
    "flag-ug": "🇺🇬",
    ug: "🇺🇬",
    "flag-um": "🇺🇲",
    "flag-un": "🇺🇳",
    "flag-us": "🇺🇸",
    united_states: "🇺🇸",
    "flag-uy": "🇺🇾",
    uy: "🇺🇾",
    "flag-uz": "🇺🇿",
    uz: "🇺🇿",
    "flag-va": "🇻🇦",
    "flag-vc": "🇻🇨",
    vc: "🇻🇨",
    "flag-ve": "🇻🇪",
    ve: "🇻🇪",
    "flag-vg": "🇻🇬",
    vg: "🇻🇬",
    "flag-vi": "🇻🇮",
    vi: "🇻🇮",
    "flag-vn": "🇻🇳",
    vn: "🇻🇳",
    "flag-vu": "🇻🇺",
    vu: "🇻🇺",
    "flag-wf": "🇼🇫",
    "wallis_&_futuna": "🇼🇫",
    "flag-ws": "🇼🇸",
    ws: "🇼🇸",
    "flag-xk": "🇽🇰",
    "flag-ye": "🇾🇪",
    ye: "🇾🇪",
    "flag-yt": "🇾🇹",
    "flag-za": "🇿🇦",
    za: "🇿🇦",
    "flag-zm": "🇿🇲",
    zm: "🇿🇲",
    "flag-zw": "🇿🇼",
    zw: "🇿🇼",
    squared_katakana_koko: "🈁",
    "japanese_“here”_button": "🈁",
    "japanese_“service_charge”_button": "🈂️",
    "squared_cjk_unified_ideograph-7121": "🈚",
    "japanese_“free_of_charge”_button": "🈚",
    "squared_cjk_unified_ideograph-6307": "🈯",
    "japanese_“reserved”_button": "🈯",
    "squared_cjk_unified_ideograph-7981": "🈲",
    "japanese_“prohibited”_button": "🈲",
    "squared_cjk_unified_ideograph-7a7a": "🈳",
    "japanese_“vacancy”_button": "🈳",
    "squared_cjk_unified_ideograph-5408": "🈴",
    "japanese_“passing_grade”_button": "🈴",
    "squared_cjk_unified_ideograph-6e80": "🈵",
    "japanese_“no_vacancy”_button": "🈵",
    "squared_cjk_unified_ideograph-6709": "🈶",
    "japanese_“not_free_of_charge”_button": "🈶",
    "japanese_“monthly_amount”_button": "🈷️",
    "squared_cjk_unified_ideograph-7533": "🈸",
    "japanese_“application”_button": "🈸",
    "squared_cjk_unified_ideograph-5272": "🈹",
    "japanese_“discount”_button": "🈹",
    "squared_cjk_unified_ideograph-55b6": "🈺",
    "japanese_“open_for_business”_button": "🈺",
    circled_ideograph_advantage: "🉐",
    "japanese_“bargain”_button": "🉐",
    circled_ideograph_accept: "🉑",
    "japanese_“acceptable”_button": "🉑",
    sunset_over_buildings: "🌇",
    "earth_globe_europe-africa": "🌍",
    "globe_showing_europe-africa": "🌍",
    earth_globe_americas: "🌎",
    "earth_globe_asia-australia": "🌏",
    "globe_showing_asia-australia": "🌏",
    new_moon_symbol: "🌑",
    waxing_crescent_moon_symbol: "🌒",
    first_quarter_moon_symbol: "🌓",
    waxing_gibbous_moon_symbol: "🌔",
    full_moon_symbol: "🌕",
    waning_gibbous_moon_symbol: "🌖",
    last_quarter_moon_symbol: "🌗",
    waning_crescent_moon_symbol: "🌘",
    mostly_sunny: "🌤️",
    barely_sunny: "🌥️",
    partly_sunny_rain: "🌦️",
    rain_cloud: "🌧️",
    snow_cloud: "🌨️",
    lightning: "🌩️",
    wind_blowing_face: "🌬️",
    wrap: "🌯",
    ear_of_maize: "🌽",
    aubergine: "🍆",
    slice_of_pizza: "🍕",
    curry_and_rice: "🍛",
    fish_cake_with_swirl_design: "🍥",
    sake_bottle_and_cup: "🍶",
    knife_fork_plate: "🍽️",
    sparkling_wine: "🍾",
    wrapped_present: "🎁",
    "jack-o-lantern": "🎃",
    father_christmas: "🎅",
    firework_sparkler: "🎇",
    medal: "🎖️",
    billiards: "🎱",
    multiple_musical_notes: "🎶",
    tennis_racquet_and_ball: "🎾",
    ski_and_ski_boot: "🎿",
    basketball_and_hoop: "🏀",
    "woman-running": "🏃‍♀️",
    "man-running": "🏃‍♂️",
    "woman-surfing": "🏄‍♀️",
    "man-surfing": "🏄‍♂️",
    sports_decoration: "🏅",
    "woman-swimming": "🏊‍♀️",
    "man-swimming": "🏊‍♂️",
    "woman-lifting-weights": "🏋️‍♀️",
    "man-lifting-weights": "🏋️‍♂️",
    weight_lifter: "🏋️",
    "woman-golfing": "🏌️‍♀️",
    "man-golfing": "🏌️‍♂️",
    golfer: "🏌️",
    racing_motorcycle: "🏍️",
    cricket_bat_and_ball: "🏏",
    field_hockey_stick_and_ball: "🏑",
    ice_hockey_stick_and_puck: "🏒",
    table_tennis_paddle_and_ball: "🏓",
    table_tennis: "🏓",
    house_buildings: "🏘️",
    derelict_house_building: "🏚️",
    house_building: "🏠",
    automated_teller_machine: "🏧",
    "rainbow-flag": "🏳️‍🌈",
    waving_white_flag: "🏳️",
    "flag-england": "🏴󠁧󠁢󠁥󠁮󠁧󠁿",
    "flag-scotland": "🏴󠁧󠁢󠁳󠁣󠁴󠁿",
    "flag-wales": "🏴󠁧󠁢󠁷󠁬󠁳󠁿",
    waving_black_flag: "🏴",
    badminton_racquet_and_shuttlecock: "🏸",
    badminton_racket_and_shuttlecock: "🏸",
    bow_arrow: "🏹",
    archery: "🏹",
    jar: "🏺",
    vase: "🏺",
    "skin-tone-2": "🏻",
    "skin-tone-3": "🏼",
    "skin-tone-4": "🏽",
    "skin-tone-5": "🏾",
    "skin-tone-6": "🏿",
    "front-facing_baby_chick": "🐥",
    bactrian_camel: "🐫",
    "two-hump_camel": "🐫",
    frog_face: "🐸",
    hamster_face: "🐹",
    wolf_face: "🐺",
    bear_face: "🐻",
    "eye-in-speech-bubble": "👁️‍🗨️",
    white_up_pointing_backhand_index: "👆",
    white_down_pointing_backhand_index: "👇",
    white_left_pointing_backhand_index: "👈",
    white_right_pointing_backhand_index: "👉",
    fisted_hand_sign: "👊",
    waving_hand_sign: "👋",
    ok_hand_sign: "👌",
    thumbs_up_sign: "👍",
    thumbs_down_sign: "👎",
    clapping_hands_sign: "👏",
    open_hands_sign: "👐",
    "woman’s_hat": "👒",
    "t-shirt": "👕",
    "woman’s_clothes": "👚",
    "man’s_shoe": "👞",
    "high-heeled_shoe": "👠",
    womans_sandal: "👡",
    "woman’s_sandal": "👡",
    womans_boots: "👢",
    "woman’s_boot": "👢",
    "male-farmer": "👨‍🌾",
    male_farmer: "👨‍🌾",
    "male-cook": "👨‍🍳",
    male_cook: "👨‍🍳",
    "male-student": "👨‍🎓",
    male_student: "👨‍🎓",
    "male-singer": "👨‍🎤",
    male_singer: "👨‍🎤",
    "male-artist": "👨‍🎨",
    male_artist: "👨‍🎨",
    "male-teacher": "👨‍🏫",
    male_teacher: "👨‍🏫",
    "male-factory-worker": "👨‍🏭",
    male_factory_worker: "👨‍🏭",
    "man-boy-boy": "👨‍👦‍👦",
    "man,_boy,_boy": "👨‍👦‍👦",
    "man-boy": "👨‍👦",
    "man,_boy": "👨‍👦",
    "man-girl-boy": "👨‍👧‍👦",
    "man,_girl,_boy": "👨‍👧‍👦",
    "man-girl-girl": "👨‍👧‍👧",
    "man,_girl,_girl": "👨‍👧‍👧",
    "man-girl": "👨‍👧",
    "man,_girl": "👨‍👧",
    "man-man-boy": "👨‍👨‍👦",
    "family_(man,_man,_boy)": "👨‍👨‍👦",
    "man,_man,_boy": "👨‍👨‍👦",
    "man-man-boy-boy": "👨‍👨‍👦‍👦",
    "family_(man,_man,_boy,_boy)": "👨‍👨‍👦‍👦",
    "man,_man,_boy,_boy": "👨‍👨‍👦‍👦",
    "man-man-girl": "👨‍👨‍👧",
    "family_(man,_man,_girl)": "👨‍👨‍👧",
    "man,_man,_girl": "👨‍👨‍👧",
    "man-man-girl-boy": "👨‍👨‍👧‍👦",
    "family_(man,_man,_girl,_boy)": "👨‍👨‍👧‍👦",
    "man,_man,_girl,_boy": "👨‍👨‍👧‍👦",
    "man-man-girl-girl": "👨‍👨‍👧‍👧",
    "family_(man,_man,_girl,_girl)": "👨‍👨‍👧‍👧",
    "man,_man,_girl,_girl": "👨‍👨‍👧‍👧",
    "man-woman-boy": "👨‍👩‍👦",
    "family_(man,_woman,_boy)": "👨‍👩‍👦",
    "man,_woman,_boy": "👨‍👩‍👦",
    "man-woman-boy-boy": "👨‍👩‍👦‍👦",
    "family_(man,_woman,_boy,_boy)": "👨‍👩‍👦‍👦",
    "man,_woman,_boy,_boy": "👨‍👩‍👦‍👦",
    "man-woman-girl": "👨‍👩‍👧",
    "family_(man,_woman,_girl)": "👨‍👩‍👧",
    "man,_woman,_girl": "👨‍👩‍👧",
    "man-woman-girl-boy": "👨‍👩‍👧‍👦",
    "family_(man,_woman,_girl,_boy)": "👨‍👩‍👧‍👦",
    "man,_woman,_girl,_boy": "👨‍👩‍👧‍👦",
    "man-woman-girl-girl": "👨‍👩‍👧‍👧",
    "family_(man,_woman,_girl,_girl)": "👨‍👩‍👧‍👧",
    "man,_woman,_girl,_girl": "👨‍👩‍👧‍👧",
    "male-technologist": "👨‍💻",
    male_technologist: "👨‍💻",
    "male-office-worker": "👨‍💼",
    male_office_worker: "👨‍💼",
    "male-mechanic": "👨‍🔧",
    male_mechanic: "👨‍🔧",
    "male-scientist": "👨‍🔬",
    male_scientist: "👨‍🔬",
    "male-astronaut": "👨‍🚀",
    male_astronaut: "👨‍🚀",
    "male-firefighter": "👨‍🚒",
    male_firefighter: "👨‍🚒",
    "male-doctor": "👨‍⚕️",
    male_health_worker: "👨‍⚕️",
    "male-judge": "👨‍⚖️",
    male_judge: "👨‍⚖️",
    "male-pilot": "👨‍✈️",
    male_pilot: "👨‍✈️",
    "man-heart-man": "👨‍❤️‍👨",
    "man-kiss-man": "👨‍❤️‍💋‍👨",
    "man,_man": "👨‍❤️‍💋‍👨",
    "female-farmer": "👩‍🌾",
    female_farmer: "👩‍🌾",
    woman_famer: "👩‍🌾",
    "female-cook": "👩‍🍳",
    female_cook: "👩‍🍳",
    "female-student": "👩‍🎓",
    female_student: "👩‍🎓",
    "female-singer": "👩‍🎤",
    female_singer: "👩‍🎤",
    "female-artist": "👩‍🎨",
    female_artist: "👩‍🎨",
    "female-teacher": "👩‍🏫",
    female_teacher: "👩‍🏫",
    "female-factory-worker": "👩‍🏭",
    female_factory_worker: "👩‍🏭",
    "woman-boy-boy": "👩‍👦‍👦",
    "woman,_boy,_boy": "👩‍👦‍👦",
    "woman-boy": "👩‍👦",
    "woman,_boy": "👩‍👦",
    "woman-girl-boy": "👩‍👧‍👦",
    "woman,_girl,_boy": "👩‍👧‍👦",
    "woman-girl-girl": "👩‍👧‍👧",
    "woman,_girl,_girl": "👩‍👧‍👧",
    "woman-girl": "👩‍👧",
    "woman,_girl": "👩‍👧",
    "woman-woman-boy": "👩‍👩‍👦",
    "family_(woman,_woman,_boy)": "👩‍👩‍👦",
    "woman,_woman,_boy": "👩‍👩‍👦",
    "woman-woman-boy-boy": "👩‍👩‍👦‍👦",
    "family_(woman,_woman,_boy,_boy)": "👩‍👩‍👦‍👦",
    "woman,_woman,_boy,_boy": "👩‍👩‍👦‍👦",
    "woman-woman-girl": "👩‍👩‍👧",
    "family_(woman,_woman,_girl)": "👩‍👩‍👧",
    "woman,_woman,_girl": "👩‍👩‍👧",
    "woman-woman-girl-boy": "👩‍👩‍👧‍👦",
    "family_(woman,_woman,_girl,_boy)": "👩‍👩‍👧‍👦",
    "woman,_woman,_girl,_boy": "👩‍👩‍👧‍👦",
    "woman-woman-girl-girl": "👩‍👩‍👧‍👧",
    "family_(woman,_woman,_girl,_girl)": "👩‍👩‍👧‍👧",
    "woman,_woman,_girl,_girl": "👩‍👩‍👧‍👧",
    "female-technologist": "👩‍💻",
    female_technologist: "👩‍💻",
    "female-office-worker": "👩‍💼",
    female_office_worker: "👩‍💼",
    "female-mechanic": "👩‍🔧",
    female_mechanic: "👩‍🔧",
    "female-scientist": "👩‍🔬",
    female_scientist: "👩‍🔬",
    "female-astronaut": "👩‍🚀",
    female_astronaut: "👩‍🚀",
    "female-firefighter": "👩‍🚒",
    female_firefighter: "👩‍🚒",
    "female-doctor": "👩‍⚕️",
    female_health_worker: "👩‍⚕️",
    "female-judge": "👩‍⚖️",
    female_judge: "👩‍⚖️",
    "female-pilot": "👩‍✈️",
    female_pilot: "👩‍✈️",
    "woman-heart-man": "👩‍❤️‍👨",
    "woman-heart-woman": "👩‍❤️‍👩",
    "woman-kiss-man": "👩‍❤️‍💋‍👨",
    "woman,_man": "👩‍❤️‍💋‍👨",
    "woman-kiss-woman": "👩‍❤️‍💋‍👩",
    "kiss_(woman,_woman)": "👩‍❤️‍💋‍👩",
    "woman,_woman": "👩‍❤️‍💋‍👩",
    man_and_woman_holding_hands: "👫",
    "female-police-officer": "👮‍♀️",
    "male-police-officer": "👮‍♂️",
    "woman-with-bunny-ears-partying": "👯‍♀️",
    "man-with-bunny-ears-partying": "👯‍♂️",
    woman_with_bunny_ears: "👯",
    "blond-haired-woman": "👱‍♀️",
    "blond-haired-man": "👱‍♂️",
    person_with_blond_hair: "👱",
    blond_hair: "👱",
    man_with_chinese_cap: "👲",
    "woman-wearing-turban": "👳‍♀️",
    "man-wearing-turban": "👳‍♂️",
    "female-construction-worker": "👷‍♀️",
    "male-construction-worker": "👷‍♂️",
    extraterrestrial_alien: "👽",
    "woman-tipping-hand": "💁‍♀️",
    "man-tipping-hand": "💁‍♂️",
    "female-guard": "💂‍♀️",
    "male-guard": "💂‍♂️",
    "woman-getting-massage": "💆‍♀️",
    "man-getting-massage": "💆‍♂️",
    face_massage: "💆",
    "woman-getting-haircut": "💇‍♀️",
    "man-getting-haircut": "💇‍♂️",
    electric_light_bulb: "💡",
    sleeping_symbol: "💤",
    collision_symbol: "💥",
    splashing_sweat_symbol: "💦",
    dash_symbol: "💨",
    dizzy_symbol: "💫",
    banknote_with_yen_sign: "💴",
    banknote_with_dollar_sign: "💵",
    banknote_with_euro_sign: "💶",
    banknote_with_pound_sign: "💷",
    chart_with_upwards_trend_and_yen_sign: "💹",
    personal_computer: "💻",
    laptop_computer: "💻",
    optical_disc: "💿",
    "tear-off_calendar": "📆",
    public_address_loudspeaker: "📢",
    cheering_megaphone: "📣",
    "e-mail_symbol": "📧",
    envelope_with_downwards_arrow_above: "📩",
    mobile_phone_with_rightwards_arrow_at_left: "📲",
    antenna_with_bars: "📶",
    dhikr_beads: "📿",
    rosary_beads: "📿",
    clockwise_rightwards_and_leftwards_open_circle_arrows: "🔁",
    clockwise_rightwards_and_leftwards_open_circle_arrows_with_circled_one_overlay: "🔂",
    clockwise_downwards_and_upwards_open_circle_arrows: "🔃",
    anticlockwise_downwards_and_upwards_open_circle_arrows: "🔄",
    low_brightness_symbol: "🔅",
    high_brightness_symbol: "🔆",
    speaker_with_cancellation_stroke: "🔇",
    speaker_with_one_sound_wave: "🔉",
    speaker_with_three_sound_waves: "🔊",
    "left-pointing_magnifying_glass": "🔍",
    "right-pointing_magnifying_glass": "🔎",
    open_lock: "🔓",
    bell_with_cancellation_stroke: "🔕",
    link_symbol: "🔗",
    back_with_leftwards_arrow_above: "🔙",
    end_with_leftwards_arrow_above: "🔚",
    on_with_exclamation_mark_with_left_right_arrow_above: "🔛",
    "on!_arrow": "🔛",
    soon_with_rightwards_arrow_above: "🔜",
    top_with_upwards_arrow_above: "🔝",
    no_one_under_eighteen_symbol: "🔞",
    input_symbol_for_latin_capital_letters: "🔠",
    input_symbol_for_latin_small_letters: "🔡",
    input_symbol_for_symbols: "🔣",
    input_symbol_for_latin_letters: "🔤",
    electric_torch: "🔦",
    six_pointed_star_with_middle_dot: "🔯",
    "dotted_six-pointed_star": "🔯",
    large_red_circle: "🔴",
    "up-pointing_red_triangle": "🔺",
    "down-pointing_red_triangle": "🔻",
    "up-pointing_small_red_triangle": "🔼",
    "down-pointing_small_red_triangle": "🔽",
    om_symbol: "🕉️",
    dove_of_peace: "🕊️",
    mecca: "🕋",
    minaret: "🕌",
    domed_roof: "🕌",
    mosque_with_domed_roof_and_minaret: "🕌",
    temple: "🕍",
    jewish: "🕍",
    synagogue_with_star_of_david: "🕍",
    menorah_with_nine_branches: "🕎",
    candelabrum: "🕎",
    chanukiah: "🕎",
    clock_face_one_oclock: "🕐",
    "one_o’clock": "🕐",
    clock_face_two_oclock: "🕑",
    "two_o’clock": "🕑",
    clock_face_three_oclock: "🕒",
    "three_o’clock": "🕒",
    clock_face_four_oclock: "🕓",
    "four_o’clock": "🕓",
    clock_face_five_oclock: "🕔",
    "five_o’clock": "🕔",
    clock_face_six_oclock: "🕕",
    "six_o’clock": "🕕",
    clock_face_seven_oclock: "🕖",
    "seven_o’clock": "🕖",
    clock_face_eight_oclock: "🕗",
    "eight_o’clock": "🕗",
    clock_face_nine_oclock: "🕘",
    "nine_o’clock": "🕘",
    clock_face_ten_oclock: "🕙",
    "ten_o’clock": "🕙",
    clock_face_eleven_oclock: "🕚",
    "eleven_o’clock": "🕚",
    clock_face_twelve_oclock: "🕛",
    "twelve_o’clock": "🕛",
    "clock_face_one-thirty": "🕜",
    "one-thirty": "🕜",
    "clock_face_two-thirty": "🕝",
    "two-thirty": "🕝",
    "clock_face_three-thirty": "🕞",
    "three-thirty": "🕞",
    "clock_face_four-thirty": "🕟",
    "four-thirty": "🕟",
    "clock_face_five-thirty": "🕠",
    "five-thirty": "🕠",
    "clock_face_six-thirty": "🕡",
    "six-thirty": "🕡",
    "clock_face_seven-thirty": "🕢",
    "seven-thirty": "🕢",
    "clock_face_eight-thirty": "🕣",
    "eight-thirty": "🕣",
    "clock_face_nine-thirty": "🕤",
    "nine-thirty": "🕤",
    "clock_face_ten-thirty": "🕥",
    "ten-thirty": "🕥",
    "clock_face_eleven-thirty": "🕦",
    "eleven-thirty": "🕦",
    "clock_face_twelve-thirty": "🕧",
    "twelve-thirty": "🕧",
    man_in_business_suit_levitating: "🕴️",
    "female-detective": "🕵️‍♀️",
    "male-detective": "🕵️‍♂️",
    sleuth_or_spy: "🕵️",
    lower_left_ballpoint_pen: "🖊️",
    lower_left_fountain_pen: "🖋️",
    lower_left_paintbrush: "🖌️",
    lower_left_crayon: "🖍️",
    reversed_hand_with_middle_finger_extended: "🖕",
    "spock-hand": "🖖",
    raised_hand_with_part_between_middle_and_ring_fingers: "🖖",
    three_button_mouse: "🖱️",
    frame_with_picture: "🖼️",
    spiral_note_pad: "🗒️",
    spiral_calendar_pad: "🗓️",
    compression: "🗜️",
    dagger_knife: "🗡️",
    speaking_head_in_silhouette: "🗣️",
    silhouette_of_japan: "🗾",
    smiling_face_with_open_mouth: "😃",
    smiling_face_with_open_mouth_and_smiling_eyes: "😄",
    smiling_face_with_open_mouth_and_cold_sweat: "😅",
    "smiling_face_with_open_mouth_and_tightly-closed_eyes": "😆",
    face_savouring_delicious_food: "😋",
    "smiling_face_with_heart-shaped_eyes": "😍",
    "smiling_face_with_heart-eyes": "😍",
    face_with_cold_sweat: "😓",
    face_throwing_a_kiss: "😘",
    "face_with_stuck-out_tongue": "😛",
    "face_with_stuck-out_tongue_and_winking_eye": "😜",
    "face_with_stuck-out_tongue_and_tightly-closed_eyes": "😝",
    face_with_look_of_triumph: "😤",
    disappointed_but_relieved_face: "😥",
    face_with_open_mouth_and_cold_sweat: "😰",
    grinning_cat_face_with_smiling_eyes: "😸",
    cat_face_with_tears_of_joy: "😹",
    smiling_cat_face_with_open_mouth: "😺",
    "smiling_cat_face_with_heart-shaped_eyes": "😻",
    "smiling_cat_with_heart-eyes": "😻",
    cat_face_with_wry_smile: "😼",
    kissing_cat_face_with_closed_eyes: "😽",
    pouting_cat_face: "😾",
    weary_cat_face: "🙀",
    slightly_frowning: "🙁",
    slightly_smiling: "🙂",
    slight_smile: "🙂",
    upside_down: "🙃",
    flipped_face: "🙃",
    "upside-down_face": "🙃",
    eye_roll: "🙄",
    rolling_eyes: "🙄",
    "woman-gesturing-no": "🙅‍♀️",
    "man-gesturing-no": "🙅‍♂️",
    face_with_no_good_gesture: "🙅",
    "woman-gesturing-ok": "🙆‍♀️",
    "man-gesturing-ok": "🙆‍♂️",
    face_with_ok_gesture: "🙆",
    "woman-bowing": "🙇‍♀️",
    woman_bow: "🙇‍♀️",
    female_bow: "🙇‍♀️",
    woman_bowing_deeply: "🙇‍♀️",
    "man-bowing": "🙇‍♂️",
    man_bow: "🙇‍♂️",
    male_bow: "🙇‍♂️",
    man_bowing_deeply: "🙇‍♂️",
    person_bowing_deeply: "🙇",
    "see-no-evil_monkey": "🙈",
    "hear-no-evil_monkey": "🙉",
    "speak-no-evil_monkey": "🙊",
    "woman-raising-hand": "🙋‍♀️",
    "man-raising-hand": "🙋‍♂️",
    happy_person_raising_one_hand: "🙋",
    person_raising_both_hands_in_celebration: "🙌",
    "woman-frowning": "🙍‍♀️",
    "man-frowning": "🙍‍♂️",
    "woman-pouting": "🙎‍♀️",
    "man-pouting": "🙎‍♂️",
    person_with_pouting_face: "🙎",
    person_with_folded_hands: "🙏",
    "high-speed_train": "🚄",
    "high-speed_train_with_bullet_nose": "🚅",
    recreational_vehicle: "🚙",
    "woman-rowing-boat": "🚣‍♀️",
    "man-rowing-boat": "🚣‍♂️",
    construction_sign: "🚧",
    police_cars_revolving_light: "🚨",
    smoking_symbol: "🚬",
    no_smoking_symbol: "🚭",
    put_litter_in_its_place_symbol: "🚮",
    do_not_litter_symbol: "🚯",
    potable_water_symbol: "🚰",
    "non-potable_water_symbol": "🚱",
    "woman-biking": "🚴‍♀️",
    "man-biking": "🚴‍♂️",
    "woman-mountain-biking": "🚵‍♀️",
    "man-mountain-biking": "🚵‍♂️",
    "woman-walking": "🚶‍♀️",
    "man-walking": "🚶‍♂️",
    pedestrian: "🚶",
    mens_symbol: "🚹",
    "men’s_room": "🚹",
    womens_symbol: "🚺",
    "women’s_room": "🚺",
    sleeping_accommodation: "🛌",
    worship_building: "🛐",
    worship_place: "🛐",
    religious_building: "🛐",
    religious_place: "🛐",
    octagonal_sign: "🛑",
    shopping_trolley: "🛒",
    take_off: "🛫",
    airplane_arriving: "🛬",
    landing: "🛬",
    scooter: "🛴",
    zipper_mouth: "🤐",
    zip_it: "🤐",
    sealed_lips: "🤐",
    lips_sealed: "🤐",
    "zipper-mouth_face": "🤐",
    money_mouth: "🤑",
    money_face: "🤑",
    "money-mouth_face": "🤑",
    sick: "🤒",
    ill: "🤒",
    thermometer_face: "🤒",
    nerd: "🤓",
    nerdy: "🤓",
    think: "🤔",
    thinker: "🤔",
    injured: "🤕",
    head_bandage: "🤕",
    head_bandaged: "🤕",
    bandaged: "🤕",
    "face_with_head-bandage": "🤕",
    robot_face: "🤖",
    bot_face: "🤖",
    hugging: "🤗",
    hug: "🤗",
    the_horns: "🤘",
    horns_sign: "🤘",
    rock_on: "🤘",
    heavy_metal: "🤘",
    devil_fingers: "🤘",
    "left-facing_fist": "🤛",
    "right-facing_fist": "🤜",
    hand_with_index_and_middle_fingers_crossed: "🤞",
    i_love_you_hand_sign: "🤟",
    "love-you_gesture": "🤟",
    face_with_cowboy_hat: "🤠",
    cowboy: "🤠",
    clown: "🤡",
    "woman-facepalming": "🤦‍♀️",
    female_facepalm: "🤦‍♀️",
    woman_facepalm: "🤦‍♀️",
    "man-facepalming": "🤦‍♂️",
    face_palm: "🤦",
    "star-struck": "🤩",
    "breast-feeding": "🤱",
    mother_christmas: "🤶",
    "woman-shrugging": "🤷‍♀️",
    female_shrug: "🤷‍♀️",
    woman_shrug: "🤷‍♀️",
    "man-shrugging": "🤷‍♂️",
    male_shrug: "🤷‍♂️",
    man_shrug: "🤷‍♂️",
    "woman-cartwheeling": "🤸‍♀️",
    woman_doing_cartwheel: "🤸‍♀️",
    female_doing_cartwheel: "🤸‍♀️",
    "man-cartwheeling": "🤸‍♂️",
    man_doing_cartwheel: "🤸‍♂️",
    male_doing_cartwheel: "🤸‍♂️",
    person_doing_cartwheel: "🤸",
    "woman-juggling": "🤹‍♀️",
    female_juggling: "🤹‍♀️",
    "man-juggling": "🤹‍♂️",
    male_juggling: "🤹‍♂️",
    juggling: "🤹",
    fencer: "🤺",
    "woman-wrestling": "🤼‍♀️",
    woman_wrestlers: "🤼‍♀️",
    female_wrestlers: "🤼‍♀️",
    "man-wrestling": "🤼‍♂️",
    man_wrestlers: "🤼‍♂️",
    male_wrestlers: "🤼‍♂️",
    wrestlers: "🤼",
    "woman-playing-water-polo": "🤽‍♀️",
    woman_water_polo: "🤽‍♀️",
    female_water_polo: "🤽‍♀️",
    "man-playing-water-polo": "🤽‍♂️",
    man_water_polo: "🤽‍♂️",
    male_water_polo: "🤽‍♂️",
    "woman-playing-handball": "🤾‍♀️",
    woman_handball: "🤾‍♀️",
    female_handball: "🤾‍♀️",
    "man-playing-handball": "🤾‍♂️",
    man_handball: "🤾‍♂️",
    male_handball: "🤾‍♂️",
    handball: "🤾",
    drum_with_drumsticks: "🥁",
    first_place_medal: "🥇",
    second_place_medal: "🥈",
    third_place_medal: "🥉",
    kiwifruit: "🥝",
    red_crab: "🦀",
    lion_face: "🦁",
    cute_lion: "🦁",
    timid_lion: "🦁",
    unicorn_face: "🦄",
    giraffe_face: "🦒",
    zebra_face: "🦓",
    beard: "🧔",
    person_with_headscarf: "🧕",
    female_mage: "🧙‍♀️",
    male_mage: "🧙‍♂️",
    female_fairy: "🧚‍♀️",
    male_fairy: "🧚‍♂️",
    female_vampire: "🧛‍♀️",
    male_vampire: "🧛‍♂️",
    female_elf: "🧝‍♀️",
    male_elf: "🧝‍♂️",
    female_genie: "🧞‍♀️",
    male_genie: "🧞‍♂️",
    female_zombie: "🧟‍♀️",
    male_zombie: "🧟‍♂️",
    "left-right_arrow": "↔️",
    "up-down_arrow": "↕️",
    "up-left_arrow": "↖️",
    "up-right_arrow": "↗️",
    "down-right_arrow": "↘️",
    "down-left_arrow": "↙️",
    eject: "⏏️",
    "black_right-pointing_double_triangle": "⏩",
    "fast-forward_button": "⏩",
    "black_left-pointing_double_triangle": "⏪",
    "black_up-pointing_double_triangle": "⏫",
    "black_down-pointing_double_triangle": "⏬",
    black_right_pointing_double_triangle_with_vertical_bar: "⏭️",
    black_left_pointing_double_triangle_with_vertical_bar: "⏮️",
    black_right_pointing_triangle_with_double_vertical_bar: "⏯️",
    hourglass_with_flowing_sand: "⏳",
    double_vertical_bar: "⏸️",
    black_square_for_stop: "⏹️",
    black_circle_for_record: "⏺️",
    "white_medium-small_square": "◽",
    "black_medium-small_square": "◾",
    radioactive_sign: "☢️",
    biohazard_sign: "☣️",
    white_frowning_face: "☹️",
    staff_of_aesculapius: "⚕️",
    scales: "⚖️",
    high_voltage_sign: "⚡",
    medium_white_circle: "⚪",
    medium_black_circle: "⚫",
    thunder_cloud_and_rain: "⛈️",
    helmet_with_white_cross: "⛑️",
    "woman-bouncing-ball": "⛹️‍♀️",
    "man-bouncing-ball": "⛹️‍♂️",
    person_with_ball: "⛹️",
    white_heavy_check_mark: "✅",
    "eight-spoked_asterisk": "✳️",
    "eight-pointed_star": "✴️",
    black_question_mark_ornament: "❓",
    white_question_mark_ornament: "❔",
    white_exclamation_mark_ornament: "❕",
    heavy_exclamation_mark_symbol: "❗",
    heavy_heart_exclamation_mark_ornament: "❣️",
    white_medium_star: "⭐",
    heavy_large_circle: "⭕",
    "japanese_“congratulations”_button": "㊗️",
    "japanese_“secret”_button": "㊙️",
    white_smiling_face: "☺",
    white_up_pointing_index: "☝",
    heavy_black_heart: "❤",
    black_sun_with_rays: "☀",
    black_telephone: "☎",
    black_scissors: "✂",
    warning_sign: "⚠",
    upwards_black_arrow: "⬆",
    downwards_black_arrow: "⬇",
    leftwards_black_arrow: "⬅",
    black_rightwards_arrow: "➡",
    north_east_arrow: "↗",
    north_west_arrow: "↖",
    south_east_arrow: "↘",
    south_west_arrow: "↙",
    "black_left-pointing_triangle": "◀",
    "black_right-pointing_triangle": "▶",
    rightwards_arrow_with_hook: "↪",
    arrow_pointing_rightwards_then_curving_downwards: "⤵",
    arrow_pointing_rightwards_then_curving_upwards: "⤴",
    negative_squared_latin_capital_letter_p: "🅿",
    "squared_cjk_unified_ideograph-6708": "🈷",
    squared_katakana_sa: "🈂",
    circled_latin_capital_letter_m: "Ⓜ",
    circled_ideograph_secret: "㊙",
    circled_ideograph_congratulation: "㊗",
    negative_squared_latin_capital_letter_a: "🅰",
    negative_squared_latin_capital_letter_b: "🅱",
    negative_squared_latin_capital_letter_o: "🅾",
    black_universal_recycling_symbol: "♻",
    copyright_sign: "©",
    registered_sign: "®",
    trade_mark_sign: "™",
    black_spade_suit: "♠",
    black_heart_suit: "♥",
    black_club_suit: "♣",
    black_diamond_suit: "♦",
    regional_indicator_symbol_a: "🇦",
    regional_indicator_symbol_letter_a: "🇦",
    regional_indicator_symbol_b: "🇧",
    regional_indicator_symbol_letter_b: "🇧",
    regional_indicator_symbol_c: "🇨",
    regional_indicator_symbol_letter_c: "🇨",
    regional_indicator_symbol_d: "🇩",
    regional_indicator_symbol_letter_d: "🇩",
    regional_indicator_symbol_e: "🇪",
    regional_indicator_symbol_letter_e: "🇪",
    regional_indicator_symbol_f: "🇫",
    regional_indicator_symbol_letter_f: "🇫",
    regional_indicator_symbol_g: "🇬",
    regional_indicator_symbol_letter_g: "🇬",
    regional_indicator_symbol_h: "🇭",
    regional_indicator_symbol_letter_h: "🇭",
    regional_indicator_symbol_i: "🇮",
    regional_indicator_symbol_letter_i: "🇮",
    regional_indicator_symbol_j: "🇯",
    regional_indicator_symbol_letter_j: "🇯",
    regional_indicator_symbol_k: "🇰",
    regional_indicator_symbol_letter_k: "🇰",
    regional_indicator_symbol_l: "🇱",
    regional_indicator_symbol_letter_l: "🇱",
    regional_indicator_symbol_m: "🇲",
    regional_indicator_symbol_letter_m: "🇲",
    regional_indicator_symbol_n: "🇳",
    regional_indicator_symbol_letter_n: "🇳",
    regional_indicator_symbol_o: "🇴",
    regional_indicator_symbol_letter_o: "🇴",
    regional_indicator_symbol_p: "🇵",
    regional_indicator_symbol_letter_p: "🇵",
    regional_indicator_symbol_q: "🇶",
    regional_indicator_symbol_letter_q: "🇶",
    regional_indicator_symbol_r: "🇷",
    regional_indicator_symbol_letter_r: "🇷",
    regional_indicator_symbol_s: "🇸",
    regional_indicator_symbol_letter_s: "🇸",
    regional_indicator_symbol_t: "🇹",
    regional_indicator_symbol_letter_t: "🇹",
    regional_indicator_symbol_u: "🇺",
    regional_indicator_symbol_letter_u: "🇺",
    regional_indicator_symbol_v: "🇻",
    regional_indicator_symbol_letter_v: "🇻",
    regional_indicator_symbol_w: "🇼",
    regional_indicator_symbol_letter_w: "🇼",
    regional_indicator_symbol_x: "🇽",
    regional_indicator_symbol_letter_x: "🇽",
    regional_indicator_symbol_y: "🇾",
    regional_indicator_symbol_letter_y: "🇾",
    regional_indicator_symbol_z: "🇿",
    regional_indicator_symbol_letter_z: "🇿",
    "couple_with_heart_(woman,_woman)": "👩‍❤‍👩",
    "couple_with_heart_(man,_man)": "👨‍❤‍👨",
    "kiss_(man,_man)": "‍👨❤️💋‍👨",
    helmet_white_cross: "⛑",
    helmet_with_white_crosse: "⛑",
    "rescue_worker’s_helmet": "⛑",
    sleuth: "🕵",
    private_eye: "🕵",
    spy: "🕵",
    hovering_man: "🕴",
    levitating_man: "🕴",
    splayed_hand: "🖐",
    raised_hand_with_five_fingers_splayed: "🖐",
    writing: "✍",
    exclamation_heart: "❣",
    zig_zag_bubble: "🗯",
    skull_crossbones: "☠",
    squirrel: "🐿",
    dove_peace: "🕊",
    "dove_of_peace,_carrying_an_olive_branch": "🕊",
    black_spider_with_eight_legs: "🕷",
    cobweb: "🕸",
    spider_web_in_orb_form: "🕸",
    st_patrick: "☘",
    chili_pepper: "🌶",
    spice: "🌶",
    spicy: "🌶",
    fork_knife_plate: "🍽",
    mont_fuji: "🏔",
    "snow-capped_mountain": "🏔",
    campsite: "🏕",
    camping_with_tent_and_tree: "🏕",
    breach: "🏖",
    desert_with_cactus: "🏜",
    desert_island_with_palm_tree: "🏝",
    crane: "🏗",
    building_in_construction_with_crane: "🏗",
    multiple_houses: "🏘",
    old_house: "🏚",
    abandoned_house: "🏚",
    picture_frame: "🖼",
    painting: "🖼",
    gallery: "🖼",
    frame_with_picture_or_painting: "🖼",
    highway: "🛣",
    road: "🛣",
    interstate: "🛣",
    freeway: "🛣",
    bedroom: "🛏",
    bed_or_bedroom: "🛏",
    couch_lamp: "🛋",
    couch: "🛋",
    sofa: "🛋",
    lounge: "🛋",
    hot_weather: "🌡",
    temperature: "🌡",
    thunder_cloud_rain: "⛈",
    white_sun_small_cloud: "🌤",
    white_sun_with_small_cloud: "🌤",
    white_sun_behind_cloud: "🌥",
    white_sun_behind_cloud_rain: "🌦",
    white_sun_behind_cloud_with_rain: "🌦",
    cloud_rain: "🌧",
    cloud_snow: "🌨",
    cloud_lightning: "🌩",
    cloud_tornado: "🌪",
    cloud_with_tornado: "🌪",
    mother_nature: "🌬",
    blowing_wind: "🌬",
    planted_umbrella: "⛱",
    umbrella_planted_on_the_ground: "⛱",
    snowing_snowman: "☃",
    light_beam: "☄",
    blue_beam: "☄",
    military_decoration: "🎖",
    military_medal_with_ribbon: "🎖",
    awareness_ribbon: "🎗",
    admission_ticket: "🎟",
    golf_club: "🏌",
    golfer_swinging_a_golf_club: "🏌",
    man_golfer: "🏌♂️",
    male_golfer: "🏌♂️",
    male_golfing: "🏌♂️",
    woman_golfer: "🏌‍♀️",
    female_golfer: "🏌‍♀️",
    female_golfing: "🏌‍♀️",
    ice_skating: "⛸",
    single_ice_skate: "⛸",
    formula_one: "🏎",
    f1: "🏎",
    motorbike: "🏍",
    "black_right-pointing_double_triangle_with_vertical_bar": "⏭",
    "black_right-pointing_triangle_with_double_vertical_bar": "⏯",
    "black_left-pointing_double_triangle_with_vertical_bar": "⏮",
    keycap_asterisk: "*⃣",
    star_keycap: "*⃣",
    pc_tower: "🖥",
    imac: "🖥",
    candle_burning: "🕯",
    newspaper_delivery: "🗞",
    newspaper_rolled_up_for_delivery: "🗞",
    "rolled-up_newspaper": "🗞",
    ballot: "🗳",
    ballot_bow_with_ballot: "🗳",
    multiple_paperclips_linked_together: "🖇",
    an_ornate_old_key: "🗝",
    scales_of_justice: "⚖",
    knife_weapon: "🗡",
    funeral: "⚰",
    casket: "⚰",
    scouts: "⚜",
    "fleur-de-lis": "⚜",
    atom: "⚛",
    pranava: "🕉",
    aumkara: "🕉",
    omkara: "🕉",
    christian_cross: "✝",
    kami_no_michi: "⛩",
    star_crescent: "☪",
    peace_sign: "☮",
    radioactive_symbol: "☢",
    biohazard_symbol: "☣",
    i_am_a_witness: "👁‍🗨",
    red_hair: "👨‍🦰",
    curly_hair: "👨‍🦱",
    white_hair: "👨‍🦳",
    bald: "👨‍🦲",
    "yo-yo": "🪀",
    "one-piece_swimsuit": "🩱"
};
}),
"[project]/node_modules/react-emoji-render/lib/renderer.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
var _slicedToArray = function() {
    function sliceIterator(arr, i) {
        var _arr = [];
        var _n = true;
        var _d = false;
        var _e = undefined;
        try {
            for(var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true){
                _arr.push(_s.value);
                if (i && _arr.length === i) break;
            }
        } catch (err) {
            _d = true;
            _e = err;
        } finally{
            try {
                if (!_n && _i["return"]) _i["return"]();
            } finally{
                if (_d) throw _e;
            }
        }
        return _arr;
    }
    return function(arr, i) {
        if (Array.isArray(arr)) {
            return arr;
        } else if (Symbol.iterator in Object(arr)) {
            return sliceIterator(arr, i);
        } else {
            throw new TypeError("Invalid attempt to destructure non-iterable instance");
        }
    };
}();
var _extends = Object.assign || function(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i];
        for(var key in source){
            if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
            }
        }
    }
    return target;
};
exports.toArray = toArray;
exports.default = Emoji;
var _react = __turbopack_context__.r("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var _react2 = _interopRequireDefault(_react);
var _propTypes = __turbopack_context__.r("[project]/node_modules/prop-types/index.js [app-client] (ecmascript)");
var _propTypes2 = _interopRequireDefault(_propTypes);
var _classnames2 = __turbopack_context__.r("[project]/node_modules/classnames/index.js [app-client] (ecmascript)");
var _classnames3 = _interopRequireDefault(_classnames2);
var _stringReplaceToArray = __turbopack_context__.r("[project]/node_modules/string-replace-to-array/string-replace-to-array.js [app-client] (ecmascript)");
var _stringReplaceToArray2 = _interopRequireDefault(_stringReplaceToArray);
var _emojiRegex = __turbopack_context__.r("[project]/node_modules/react-emoji-render/node_modules/emoji-regex/index.js [app-client] (ecmascript)");
var _emojiRegex2 = _interopRequireDefault(_emojiRegex);
var _aliasRegex = __turbopack_context__.r("[project]/node_modules/react-emoji-render/lib/aliasRegex.js [app-client] (ecmascript)");
var _aliasRegex2 = _interopRequireDefault(_aliasRegex);
var _normalizeProtocol = __turbopack_context__.r("[project]/node_modules/react-emoji-render/lib/normalizeProtocol.js [app-client] (ecmascript)");
var _normalizeProtocol2 = _interopRequireDefault(_normalizeProtocol);
var _unicodeToCodepoint = __turbopack_context__.r("[project]/node_modules/react-emoji-render/lib/unicodeToCodepoint.js [app-client] (ecmascript)");
var _unicodeToCodepoint2 = _interopRequireDefault(_unicodeToCodepoint);
var _aliases = __turbopack_context__.r("[project]/node_modules/react-emoji-render/data/aliases.js [app-client] (ecmascript)");
var _aliases2 = _interopRequireDefault(_aliases);
var _asciiAliases = __turbopack_context__.r("[project]/node_modules/react-emoji-render/data/asciiAliases.js [app-client] (ecmascript)");
var _asciiAliases2 = _interopRequireDefault(_asciiAliases);
var _utils = __turbopack_context__.r("[project]/node_modules/react-emoji-render/lib/utils.js [app-client] (ecmascript)");
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _defineProperty(obj, key, value) {
    if (key in obj) {
        Object.defineProperty(obj, key, {
            value: value,
            enumerable: true,
            configurable: true,
            writable: true
        });
    } else {
        obj[key] = value;
    }
    return obj;
}
function _objectWithoutProperties(obj, keys) {
    var target = {};
    for(var i in obj){
        if (keys.indexOf(i) >= 0) continue;
        if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
        target[i] = obj[i];
    }
    return target;
}
var unicodeEmojiRegex = (0, _emojiRegex2.default)();
// using em's we can ensure size matches surrounding font
var style = {
    width: "1em",
    height: "1em",
    margin: "0 .05em 0 .1em",
    verticalAlign: "-0.1em"
};
var asciiToAlias = {
    ":": ":"
};
var _iteratorNormalCompletion = true;
var _didIteratorError = false;
var _iteratorError = undefined;
try {
    for(var _iterator = Object.keys(_asciiAliases2.default)[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true){
        var alias = _step.value;
        var _iteratorNormalCompletion2 = true;
        var _didIteratorError2 = false;
        var _iteratorError2 = undefined;
        try {
            for(var _iterator2 = _asciiAliases2.default[alias][Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true){
                var ascii = _step2.value;
                asciiToAlias[ascii] = _aliases2.default[alias];
            }
        } catch (err) {
            _didIteratorError2 = true;
            _iteratorError2 = err;
        } finally{
            try {
                if (!_iteratorNormalCompletion2 && _iterator2.return) {
                    _iterator2.return();
                }
            } finally{
                if (_didIteratorError2) {
                    throw _iteratorError2;
                }
            }
        }
    }
} catch (err) {
    _didIteratorError = true;
    _iteratorError = err;
} finally{
    try {
        if (!_iteratorNormalCompletion && _iterator.return) {
            _iterator.return();
        }
    } finally{
        if (_didIteratorError) {
            throw _iteratorError;
        }
    }
}
function toArray(text) {
    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    var protocol = (0, _normalizeProtocol2.default)(options.protocol);
    function replaceUnicodeEmoji(match, i) {
        if (!options.baseUrl) {
            return _react2.default.createElement("span", {
                key: i,
                style: style,
                className: options.className
            }, match);
        }
        var codepoint = (0, _unicodeToCodepoint2.default)(match, removeHelperCharacters);
        // if Emojione we don't want to add helper characters in the URL
        var removeHelperCharacters = options.emojione;
        if (removeHelperCharacters) {
            codepoint = codepoint.replace(/-200d/g, "").replace(/-fe0f/g, "");
        }
        var separator = options.size ? "/" : "";
        var src = "" + protocol + options.baseUrl + options.size + separator + codepoint + "." + options.ext;
        return _react2.default.createElement("img", _extends({
            key: i,
            alt: match,
            src: src,
            style: style,
            className: options.className
        }, options.props));
    }
    function replaceAliases(text) {
        var regex = (0, _aliasRegex2.default)();
        var textWithEmoji = [];
        var match = void 0, pos = 0;
        while(match = regex.exec(text)){
            var _match$slice = match.slice(1, 4), _match$slice2 = _slicedToArray(_match$slice, 3), edgeCase = _match$slice2[0], asciiAlias = _match$slice2[1], fullEmoji = _match$slice2[2];
            // possible full emoji like :open_mouth:
            var emoji = _aliases2.default[(asciiAlias + fullEmoji).slice(1, -1)];
            if (match.index > pos) {
                // text between matches
                textWithEmoji.push(text.slice(pos, match.index));
            }
            if (edgeCase) {
                // verbatim matched text
                textWithEmoji.push(match[0]);
            } else if (asciiAlias[0] === ":" && fullEmoji && emoji) {
                // full emoji
                textWithEmoji.push(emoji);
            } else {
                // ascii alias or ":"
                textWithEmoji.push(asciiToAlias[asciiAlias]);
                if (fullEmoji) {
                    // false positive, "go back" and don't skip that substring
                    regex.lastIndex -= fullEmoji.length;
                }
            }
            pos = regex.lastIndex;
        }
        // text after last match (if any)
        textWithEmoji.push(text.slice(pos));
        return textWithEmoji.join("");
    }
    return (0, _stringReplaceToArray2.default)(replaceAliases(text), unicodeEmojiRegex, replaceUnicodeEmoji);
}
function Emoji(_ref) {
    var text = _ref.text, onlyEmojiClassName = _ref.onlyEmojiClassName, _ref$options = _ref.options, options = _ref$options === undefined ? {} : _ref$options, className = _ref.className, children = _ref.children, rest = _objectWithoutProperties(_ref, [
        "text",
        "onlyEmojiClassName",
        "options",
        "className",
        "children"
    ]);
    var nonStringElements = [];
    if (!!children && Array.isArray(children)) {
        var _stripNonStringElemen = (0, _utils.stripNonStringElements)(children), _stripNonStringElemen2 = _slicedToArray(_stripNonStringElemen, 2), strippedChildren = _stripNonStringElemen2[0], elements = _stripNonStringElemen2[1];
        text = strippedChildren;
        nonStringElements = elements;
    } else if (!!children && typeof children === "string") {
        text = children;
    } else if (!!children) {
        //children must then be an object (react component or html element)
        var _stripNonStringElemen3 = (0, _utils.stripNonStringElements)([
            children
        ]), _stripNonStringElemen4 = _slicedToArray(_stripNonStringElemen3, 2), _strippedChildren = _stripNonStringElemen4[0], _elements = _stripNonStringElemen4[1];
        text = _strippedChildren;
        nonStringElements = _elements;
    } else if (!text) {
        throw new Error("react-emoji-render: either children or text prop must be provided");
    }
    function isOnlyEmoji(output) {
        if (output.length > 3) return false;
        for(var i = 0; i < output.length; i++){
            if (typeof output[i] === "string") return false;
        }
        return true;
    }
    var output = (0, _utils.returnNonStringStrippedElements)(toArray(text, options), nonStringElements);
    var classes = (0, _classnames3.default)(className, _defineProperty({}, onlyEmojiClassName, isOnlyEmoji(output)));
    return _react2.default.createElement("span", _extends({}, rest, {
        className: classes
    }), output);
}
Emoji.propTypes = {
    text: _propTypes2.default.string,
    props: _propTypes2.default.object,
    onlyEmojiClassName: _propTypes2.default.string,
    options: _propTypes2.default.shape({
        baseUrl: _propTypes2.default.string,
        size: _propTypes2.default.oneOfType([
            _propTypes2.default.number,
            _propTypes2.default.string
        ]),
        ext: _propTypes2.default.string,
        className: _propTypes2.default.string
    })
};
}),
"[project]/node_modules/react-emoji-render/lib/index.js [app-client] (ecmascript)", ((__turbopack_context__, module, exports) => {
"use strict";

Object.defineProperty(exports, "__esModule", {
    value: true
});
exports.toArray = undefined;
var _extends = Object.assign || function(target) {
    for(var i = 1; i < arguments.length; i++){
        var source = arguments[i];
        for(var key in source){
            if (Object.prototype.hasOwnProperty.call(source, key)) {
                target[key] = source[key];
            }
        }
    }
    return target;
};
var _renderer = __turbopack_context__.r("[project]/node_modules/react-emoji-render/lib/renderer.js [app-client] (ecmascript)");
Object.defineProperty(exports, "toArray", {
    enumerable: true,
    get: function get() {
        return _renderer.toArray;
    }
});
exports.Twemoji = Twemoji;
exports.Emojione = Emojione;
exports.EmojioneV4 = EmojioneV4;
var _react = __turbopack_context__.r("[project]/node_modules/next/dist/compiled/react/index.js [app-client] (ecmascript)");
var _react2 = _interopRequireDefault(_react);
var _propTypes = __turbopack_context__.r("[project]/node_modules/prop-types/index.js [app-client] (ecmascript)");
var _propTypes2 = _interopRequireDefault(_propTypes);
var _renderer2 = _interopRequireDefault(_renderer);
function _interopRequireDefault(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
function _objectWithoutProperties(obj, keys) {
    var target = {};
    for(var i in obj){
        if (keys.indexOf(i) >= 0) continue;
        if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
        target[i] = obj[i];
    }
    return target;
}
var protocol = "https";
if (typeof location !== "undefined" && location.protocol === "http:") {
    protocol = "http";
}
exports.default = _renderer2.default;
function Twemoji(_ref) {
    var svg = _ref.svg, options = _ref.options, rest = _objectWithoutProperties(_ref, [
        "svg",
        "options"
    ]);
    var size = svg ? "" : "72x72";
    var ext = svg ? "svg" : "png";
    options = _extends({
        protocol: protocol,
        baseUrl: "//cdnjs.cloudflare.com/ajax/libs/twemoji/12.0.4/2/" + (svg ? "svg/" : ""),
        size: size,
        ext: ext
    }, options);
    return _react2.default.createElement(_renderer2.default, _extends({
        options: options
    }, rest));
}
Twemoji.propTypes = {
    text: _propTypes2.default.string,
    options: _propTypes2.default.object,
    svg: _propTypes2.default.bool,
    children: _propTypes2.default.oneOfType([
        _propTypes2.default.arrayOf(_propTypes2.default.node),
        _propTypes2.default.node
    ])
};
function Emojione(_ref2) {
    var svg = _ref2.svg, options = _ref2.options, rest = _objectWithoutProperties(_ref2, [
        "svg",
        "options"
    ]);
    var ext = svg ? "svg" : "png";
    options = _extends({
        protocol: protocol,
        baseUrl: "//cdnjs.cloudflare.com/ajax/libs/emojione/2.2.7/assets/" + ext + "/",
        size: "",
        ext: ext,
        emojione: true
    }, options);
    return _react2.default.createElement(_renderer2.default, _extends({
        options: options
    }, rest));
}
Emojione.propTypes = {
    text: _propTypes2.default.string,
    options: _propTypes2.default.object,
    svg: _propTypes2.default.bool,
    children: _propTypes2.default.oneOfType([
        _propTypes2.default.arrayOf(_propTypes2.default.node),
        _propTypes2.default.node
    ])
};
function EmojioneV4(_ref3) {
    var size = _ref3.size, options = _ref3.options, rest = _objectWithoutProperties(_ref3, [
        "size",
        "options"
    ]);
    var ext = "png";
    options = _extends({
        protocol: protocol,
        baseUrl: "//cdn.jsdelivr.net/emojione/assets/4.0/" + ext + "/",
        size: size,
        ext: ext,
        emojione: true
    }, options);
    return _react2.default.createElement(_renderer2.default, _extends({
        options: options
    }, rest));
}
EmojioneV4.propTypes = {
    text: _propTypes2.default.string,
    options: _propTypes2.default.object,
    size: _propTypes2.default.oneOf([
        32,
        64,
        128
    ]),
    children: _propTypes2.default.oneOfType([
        _propTypes2.default.arrayOf(_propTypes2.default.node),
        _propTypes2.default.node
    ])
};
EmojioneV4.defaultProps = {
    size: 64
};
}),
]);

//# sourceMappingURL=node_modules_76e1f7e3._.js.map